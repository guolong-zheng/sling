
!!!Full processing file "avl/avl-balance.dryad.c"
Parsing file "avl/avl-balance.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E avl/avl-balance.dryad.c -o avl/avl-balance.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of get_height: :HP_24
!!! generate unknown predicate for Post synthesis of get_height: :GP_25
!!! generate unknown predicate for Pre synthesis of avl_balance: :HP_26
!!! generate unknown predicate for Post synthesis of avl_balance: :GP_27
!!! ss:EInfer @shape[HP_26,GP_27] EBase: [][](HRel HP_26(x))*(true)( FLOW __norm) {EAssume: 9,:(HRel GP_27(x,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure get_height$a_node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[ HP_24,GP_25]requires HP_24(x)&truerequires emp
 ensures GP_25(x)&
true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(2;0)HP_24(x)&
x!=null --> x::a_node<left_10_1615,right_10_1616,key_10_1617,height_10_1618> * 
HP_1619(left_10_1615) * HP_1620(right_10_1616)&
true,
 // POST
(1;0)HP_24(x)&x=null --> GP_25(x)&
true,
 // POST
(2;0)HP_1619(left_10_1615) * HP_1620(right_10_1616) * 
x::a_node<left_10_1615,right_10_1616,key_10_1617,height_10_1618>&
true --> GP_25(x)&
true]

Procedure get_height$a_node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_24(x_1623) ::= 
 x_1623::a_node<DP_DP_HP_1619,DP_DP_HP_1620,key_10_1617,height_10_1618>
 or emp&x_1623=null
 (4,5),
 GP_25(x_1624) ::= HP_24(x_1624)(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase x::HP_24{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   x::HP_24{}<>&{FLOW,(1,29)=__flow#E}[]
                   
Checking procedure avl_balance$a_node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_26,GP_27]requires HP_26(x)&
truerequires emp
 ensures GP_27(x,res)&true{,(4,5)=__norm#E};
Proving binding in method avl_balance$a_node for spec  EAssume 
   GP_27(x,res)&{FLOW,(4,5)=__norm#E}[]
   , Line 0

( [(,0 ); (,1 )]) bind: node  right_71'::a_node<left_26_1412',right_26_1413',key_26_1414',height_26_1415'>@L cannot be derived from context
avl/avl-balance.dryad.c_26:24_-1:-1

(Cause of Bind Failure) List of Failesc Context: [FEC(1, 0, 0 )]
Failed States:
[
 Label: [(,0 ); (,1 )]
 State:
        
         fe_kind: Valid
         fe_name: 
         fe_locs: Failure_Valid
[[empty]]
       FAIL_OR 
        
         fe_kind: MUST
         fe_name: logical bug
         fe_locs: {
                   fc_message:  right_71'=null |-  right_71'!=null. LOCS:[0] (must-bug)
                   fc_current_lhs_flow: {FLOW,(6,10)=__Error#E}}
[[empty]]
       
 ]avl/avl-balance.dryad.c_26:24_-1:-1

Context of Verification Failure: 1 File "",Line:0,Col:0

Last Proving Location: 1 File "avl/avl-balance.dryad.c",Line:26,Col:24

Procedure avl_balance$a_node FAIL.(2)

Exception Failure("bind failure exception") Occurred!

Error(s) detected when checking procedure avl_balance$a_node
Stop z3... 92 invocations Stop Omega... 30 invocations 
0 false contexts at: ()

!!! log(small):(0.054708,398)
Total verification time: 0.208 second(s)
	Time spent in main process: 0.144 second(s)
	Time spent in child processes: 0.064 second(s)
	Z3 Prover Time: 0. second(s)
