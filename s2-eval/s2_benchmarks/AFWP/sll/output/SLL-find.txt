
!!!Full processing file "AFWP/sll/SLL-find.dryad.c"
Parsing file "AFWP/sll/SLL-find.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E AFWP/sll/SLL-find.dryad.c -o AFWP/sll/SLL-find.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of has_property: :HP_22
!!! generate unknown predicate for Post synthesis of has_property: :GP_23
!!! generate unknown predicate for Pre synthesis of SLL_find: :HP_26
!!! generate unknown predicate for Post synthesis of SLL_find: :GP_27
!!! processing primitives "["prelude.ss"]
Starting z3... 

!!! generate unknown predicate for Pre synthesis of while_21_2$node~int~node: :HP_1359
!!! generate unknown predicate for Post synthesis of while_21_2$node~int~node: :GP_1362Starting Omega.../usr/local/bin/oc

Checking procedure has_property$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[ HP_22,GP_23]requires HP_22(x@NI)&truerequires emp
 ensures GP_23(x)&
true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // POST
(0)HP_22(x@NI) * (htrue)&true --> GP_23(x)&
true]

Procedure has_property$node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_22(x) ::= NONE,
 GP_23(x_1448) ::= HP_22(x_1448) * (htrue)(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase emp&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   htrue&{FLOW,(4,5)=__norm#E}[]
                   
Checking procedure while_21_2$node~int~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_1359,GP_1362]requires HP_1359(i_68,t_70)&
truerequires emp
 ensures GP_1362(i_68,i_68',t_70,t_70')&
true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(2;1;1;1;0)HP_1359(i_68,t_70) * (htrue)&t_70=null & 
i_68!=null --> i_68::node<key_31_1478,next_31_1479> * HP_1480(next_31_1479)&
true,
 // PRE_REC
(1;1;1;1;0)HP_1359(i_68',t_70) * (htrue)&t_70=null & i_68'!=null & 
t_70'=i_68' --> HP_1359(i_68',t_70')&
true,
 // PRE_REC
(2;1;1;1;0)(htrue) * HP_1480(i_68')&
t_70'=null |#| i_68::node<key_31_1478,i_68'>&
i_68!=null --> HP_1359(i_68',t_70')&
true,
 // POST
(1;1;1;1;0)(htrue) * GP_1362(i_68,i_68',i_68,t_70')&t_70=null & 
i_68!=null --> GP_1362(i_68,i_68',t_70,t_70')&
true,
 // POST
(2;1;1;1;0)(htrue) * i_68::node<key_31_1478,next_31_1479> * 
GP_1362(next_31_1479,i_68',t_1496,t_70')&
t_1496=null --> GP_1362(i_68,i_68',t_1496,t_70')&
true,
 // POST
(2;1;1;0)HP_1359(i_68,t_70)&t_70!=null & i_68!=null & i_68'=i_68 & 
t_70'=t_70 --> GP_1362(i_68,i_68',t_70,t_70')&
true,
 // POST
(2;1;0)HP_1359(i_68,t_70)&i_68=null & i_68'=null & i_68'=i_68 & 
t_70'=t_70 --> GP_1362(i_68,i_68',t_70,t_70')&
true]

Procedure while_21_2$node~int~node SUCCESS.

 --error:  at:

*********************************************************
*******relational definition ********
*********************************************************
[ GP_23(x_1448) ::= HP_22(x_1448) * (htrue)(4,5),
 HP_22(x) ::= NONE]
*************************************

!!! INFERRED SHAPE SPEC: EInfer @shape[HP_1359,GP_1362]
   EBase HP_1359(i_68,t_70)&{FLOW,(4,5)=__norm#E}[]
           EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                   EAssume ref [i_68;tmp_71;t_70]
                     GP_1362(i_68,i_68',t_70,t_70')&{FLOW,(4,5)=__norm#E}[]
                     
Checking procedure SLL_find$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[ HP_26,GP_27]requires HP_26(h)&truerequires emp
 ensures GP_27(h,res)&
true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // PRE
(0)HP_26(h)&t_70'=null --> HP_1359(h,t_70')&
true,
 // POST
(0)emp&true --> GP_27(h,res)&
true]

Procedure SLL_find$node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_26(h) ::= emp&h=DP_DP_HP_26(4,5),
 GP_27(h_1524,res_1525) ::= emp(4,5),
 GP_23(x_1448) ::= HP_22(x_1448) * (htrue)(4,5),
 HP_22(x) ::= NONE]
*************************************

!!! INFERRED SHAPE SPEC: EBase emp&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   emp&{FLOW,(4,5)=__norm#E}[]
                   Stop z3... 105 invocations Stop Omega... 55 invocations 
1 false contexts at: ( (21,2) )

!!! log(small):(0.070783,403)
Total verification time: 0.192 second(s)
	Time spent in main process: 0.124 second(s)
	Time spent in child processes: 0.068 second(s)
	Z3 Prover Time: 0. second(s)
