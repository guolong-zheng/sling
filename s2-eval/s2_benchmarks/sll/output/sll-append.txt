
!!!Full processing file "sll//sll-append.dryad.c"
Parsing file "sll//sll-append.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E sll//sll-append.dryad.c -o sll//sll-append.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of sll_append: :HP_22
!!! generate unknown predicate for Post synthesis of sll_append: :GP_23
!!! ss:EInfer @shape[HP_22,GP_23] EBase: [][](HRel HP_22(x1,x2))*(true)( FLOW __norm) {EAssume: 8,:(HRel GP_23(x1,x2,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure sll_append$node~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_22,GP_23]requires HP_22(x1,x2@NI)&
truerequires emp
 ensures GP_23(x1,x2,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(2;0)HP_22(x1,x2@NI)&x1!=null --> x1::node<key_13_1384,next_13_1385> * 
HP_1386(next_13_1385,x2@NI)&
true,
 // PRE_REC
(2;0)HP_1386(next_13_1385,x2@NI)&true --> HP_22(next_13_1385,x2@NI)&
true,
 // POST
(1;0)HP_22(x1,res@NI)&x1=null & x2=res --> GP_23(x1,x2,res)&
true,
 // POST
(2;0)GP_23(next_13_1385,x2,tmp___1398) * res::node<key_13_1384,tmp___1398>&
x1=res --> GP_23(x1,x2,res)&
true]

Procedure sll_append$node~node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_22(x1_1405,x2_1406) ::= HP_1411(x1_1405)(4,5),
 GP_23(x1_1407,x2_1408,res_1409) ::= 
 GP_23(next_13_1385,x2_1408,tmp___1398) * 
 x1_1407::node<key_13_1384,tmp___1398>&x1_1407=res_1409
 or emp&x2_1408=res_1409 & x1_1407=null
 (4,5),
 HP_1411(x1_1405) ::= 
 HP_1411(next_13_1402) * x1_1405::node<key_13_1401,next_13_1402>
 or emp&x1_1405=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase x1::HP_1411{}<>&{FLOW,(1,29)=__flow#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists x2: x1::GP_23{}<x2,res>&{FLOW,(4,5)=__norm#E})[]
                   Stop z3... 71 invocations Stop Omega... 20 invocations 
0 false contexts at: ()

!!! log(small):(0.024416,292)
Total verification time: 0.148 second(s)
	Time spent in main process: 0.1 second(s)
	Time spent in child processes: 0.048 second(s)
	Z3 Prover Time: 0. second(s)
