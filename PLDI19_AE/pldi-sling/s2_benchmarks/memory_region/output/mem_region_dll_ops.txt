
!!!Full processing file "memory_region//mem_region_dll_ops.dryad.c"
Parsing file "memory_region//mem_region_dll_ops.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E memory_region//mem_region_dll_ops.dryad.c -o memory_region//mem_region_dll_ops.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of memory_region_init: :HP_35
!!! generate unknown predicate for Post synthesis of memory_region_init: :GP_36
!!! ss:EInfer @shape[HP_35,GP_36] EBase: [][](HRel HP_35(file_))*(true)( FLOW __norm) {EAssume: 12,:(HRel GP_36(file_,res))*(true)( FLOW __norm)}
!!! generate unknown predicate for Pre synthesis of split_memory_region: :HP_38
!!! generate unknown predicate for Post synthesis of split_memory_region: :GP_39
!!! ss:EInfer @shape[HP_38,GP_39] EBase: [][](HRel HP_38(curr))*(true)( FLOW __norm) {EAssume: 15,:(HRel GP_39(curr,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure memory_region_init$backing_file~int~int~int~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_35,GP_36]requires HP_35(file_@NI)&
truerequires emp
 ensures GP_36(file_,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // POST
(0)HP_35(file_@NI) * 
res::mem_reg<file_,file_offset_,file_size_',start_address_,size_',prev_23_1784,v_mem_reg_23_1785>&
prev_23_1784=null & v_mem_reg_23_1785=null & 
v_mem_reg_23_1785=prev_23_1784 --> GP_36(file_,res)&
true]

Procedure memory_region_init$backing_file~int~int~int~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_35(file_) ::= NONE,
 GP_36(file_1788,res_1789) ::= HP_35(file_1788) * 
res_1789::mem_reg<file_1788,file_offset_,file_size_',start_address_,size_',prev_23_1784,v_mem_reg_23_1785>&
prev_23_1784=null & v_mem_reg_23_1785=null(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase emp&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists file_,file_offset_,file_size_',start_address_,
                   size_',prev_23_1784,
                   v_mem_reg_23_1785: res::mem_reg<file_,file_offset_,file_size_',start_address_,size_',prev_23_1784,v_mem_reg_23_1785>&
                   prev_23_1784=null & v_mem_reg_23_1785=null&
                   {FLOW,(4,5)=__norm#E})[]
                   
Checking procedure memory_region_create_user_space_region$... 
Procedure memory_region_create_user_space_region$ SUCCESS.

Checking procedure split_memory_region$mem_reg~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_38,GP_39]requires HP_38(curr)&
truerequires emp
 ensures GP_39(curr,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(0)HP_38(curr)&
true --> curr::mem_reg<file_49_1917,file_offset_49_1918,file_size_49_1919,start_address_49_1920,size_49_1921,prev_49_1922,next_49_1923> * 
HP_1924(file_49_1917) * HP_1925(prev_49_1922) * HP_1926(next_49_1923)&
true,
 // BIND
(1;1;2;0)HP_1926(next_49_1923)&
next_49_1923!=null --> next_49_1923::mem_reg<file_67_2098,file_offset_67_2099,file_size_67_2100,start_address_67_2101,size_67_2102,prev_67_2103,next_67_2104> * 
HP_2105(file_67_2098) * HP_2106(prev_67_2103) * HP_2107(next_67_2104)&
true,
 // BIND
(1;2;2;0)HP_1926(next_49_1923)&
next_49_1923!=null --> next_49_1923::mem_reg<file_67_2108,file_offset_67_2109,file_size_67_2110,start_address_67_2111,size_67_2112,prev_67_2113,next_67_2114> * 
HP_2115(file_67_2108) * HP_2116(prev_67_2113) * HP_2117(next_67_2114)&
true,
 // POST
(1;0)HP_1924(file_49_1917) * HP_1925(prev_49_1922) * HP_1926(next_49_1923) * 
curr::mem_reg<file_49_1917,file_offset_49_1918,file_size_49_1919,start_address_49_1920,size_49_1921,prev_49_1922,next_49_1923>&
res=null --> GP_39(curr,res)&
true,
 // POST
(1;1;2;0)HP_1924(file_49_1917) * HP_1925(prev_49_1922) * 
res::mem_reg<file_2075,file_offset_2074,file_size_2073,start_address_2072,size_2071,curr,next_69_2122> * 
HP_2105(file_67_2098) * HP_2107(next_67_2104) * 
next_69_2122::mem_reg<file_67_2098,file_offset_67_2099,file_size_67_2100,start_address_67_2101,size_67_2102,res,next_67_2104> * 
curr::mem_reg<file_49_1917,file_offset_49_1918,file_size_49_1919,start_address_49_1920,offset,prev_49_1922,res>&
true --> GP_39(curr,res)&
true,
 // POST
(2;1;2;0)HP_1924(file_49_1917) * HP_1925(prev_49_1922) * 
HP_1926(next_49_1923) * 
res::mem_reg<file_2075,file_offset_2074,file_size_2073,start_address_2072,size_2071,curr,next_49_1923> * 
curr::mem_reg<file_49_1917,file_offset_49_1918,file_size_49_1919,start_address_49_1920,offset',prev_49_1922,res>&
next_49_1923=null --> GP_39(curr,res)&
true,
 // POST
(1;2;2;0)HP_1924(file_49_1917) * HP_1925(prev_49_1922) * 
res::mem_reg<file_2058,file_offset_2057,file_size_2056,start_address_2055,size_2054,curr,next_69_2124> * 
HP_2115(file_67_2108) * HP_2117(next_67_2114) * 
next_69_2124::mem_reg<file_67_2108,file_offset_67_2109,file_size_67_2110,start_address_67_2111,size_67_2112,res,next_67_2114> * 
curr::mem_reg<file_49_1917,file_offset_49_1918,offset',start_address_49_1920,offset',prev_49_1922,res>&
true --> GP_39(curr,res)&
true]

Procedure split_memory_region$mem_reg~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_38(curr_2162) ::= curr_2162::mem_reg<DP_DP_HP_1924,file_offset_49_2146,file_size_49_2147,start_address_49_2148,size_49_2149,DP_DP_HP_1925,DP_DP_DP_2128>(4,5),
 GP_39(curr_2163,res_2164) ::= 
 curr_2163::mem_reg<DP_DP_HP_1924,file_offset_49_1918,file_size_49_1919,start_address_49_1920,size_49_1921,DP_DP_HP_1925,next_49_1923> * 
 next_49_1923::mem_reg<DP_DP_HP_2115,file_offset_67_2109,file_size_67_2110,start_address_67_2111,size_67_2112,DP_DP_HP_2116,DP_DP_HP_2117>&
 res_2164=null
 or curr_2163::mem_reg<DP_DP_HP_1924,file_offset_49_1918,file_size_49_1919,start_address_49_1920,size_49_1921,DP_DP_HP_1925,DP_DP_DP_2128>&
    res_2164=null
 or res_2164::mem_reg<file_2075,file_offset_2074,file_size_2073,start_address_2072,size_2071,curr_2163,next_69_2122> * 
    next_69_2122::mem_reg<DP_DP_HP_2105,file_offset_67_2099,file_size_67_2100,start_address_67_2101,size_67_2102,res_2164,DP_DP_HP_2107> * 
    curr_2163::mem_reg<DP_DP_HP_1924,file_offset_49_1918,file_size_49_1919,start_address_49_1920,size_49_1921,DP_DP_HP_1925,res_2164>
 or res_2164::mem_reg<file_2075,file_offset_2074,file_size_2073,start_address_2072,size_2071,curr_2163,next_49_1923> * 
    curr_2163::mem_reg<DP_DP_HP_1924,file_offset_49_1918,file_size_49_1919,start_address_49_1920,size_49_1921,DP_DP_HP_1925,res_2164>&
    next_49_1923=null
 or res_2164::mem_reg<file_2058,file_offset_2057,file_size_2056,start_address_2055,size_2054,curr_2163,next_69_2124> * 
    next_69_2124::mem_reg<DP_DP_HP_2115,file_offset_67_2109,file_size_67_2110,start_address_67_2111,size_67_2112,res_2164,DP_DP_HP_2117> * 
    curr_2163::mem_reg<DP_DP_HP_1924,file_offset_49_1918,file_size_49_1919,start_address_49_1920,file_size_49_1919,DP_DP_HP_1925,res_2164>
 or curr_2163::mem_reg<DP_DP_HP_1924,file_offset_49_1918,file_size_49_1919,start_address_49_1920,size_49_1921,DP_DP_HP_1925,next_49_1923>&
    next_49_1923=null & res_2164=null
 (4,5),
 GP_36(file_1788,res_1789) ::= HP_35(file_1788) * 
res_1789::mem_reg<file_1788,file_offset_,file_size_',start_address_,size_',prev_23_1784,v_mem_reg_23_1785>&
prev_23_1784=null & v_mem_reg_23_1785=null(4,5),
 HP_35(file_) ::= NONE]
*************************************

!!! INFERRED SHAPE SPEC: EBase exists (Expl)[](Impl)[file_offset_49_2146; file_size_49_2147; 
       start_address_49_2148; 
       size_49_2149](ex)[]curr::mem_reg<DP_DP_HP_1924,file_offset_49_2146,file_size_49_2147,start_address_49_2148,size_49_2149,DP_DP_HP_1925,DP_DP_DP_2128>&
       {FLOW,(1,29)=__flow#E}[]
         EBase exists (Expl)[](Impl)[file_offset_49_2146; file_size_49_2147; 
               start_address_49_2148; size_49_2149](ex)[]emp&MayLoop[]&
               {FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   curr::GP_39{}<res>&{FLOW,(4,5)=__norm#E}[]
                   Stop z3... 186 invocations Stop Omega... 118 invocations 
0 false contexts at: ()

!!! log(small):(0.229192,1015)
Total verification time: 0.412 second(s)
	Time spent in main process: 0.252 second(s)
	Time spent in child processes: 0.16 second(s)
	Z3 Prover Time: 0.004 second(s)
