
!!!Full processing file "glib_glist/g_list_find.dryad.c"
Parsing file "glib_glist/g_list_find.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E glib_glist/g_list_find.dryad.c -o glib_glist/g_list_find.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of g_list_find: :HP_23
!!! generate unknown predicate for Post synthesis of g_list_find: :GP_24
!!! ss:EInfer @shape[HP_23,GP_24] EBase: [][](HRel HP_23(list))*(true)( FLOW __norm) {EAssume: 9,:(HRel GP_24(list,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 

!!! generate unknown predicate for Pre synthesis of while_13_2$node~int: :HP_1344
!!! generate unknown predicate for Post synthesis of while_13_2$node~int: :GP_1346Starting Omega.../usr/local/bin/oc

Checking procedure while_13_2$node~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_1344,GP_1346]requires HP_1344(curr_64)&
truerequires emp
 ensures GP_1346(curr_64,curr_64')&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;1;0)HP_1344(curr_64)&
curr_64!=null --> curr_64::node<key_20_1400,next_20_1401,prev_20_1402> * 
HP_1403(next_20_1401) * HP_1404(prev_20_1402)&
true,
 // PRE_REC
(2;1;1;0)HP_1403(curr_64')&true --> HP_1344(curr_64')&
true,
 // POST
(1;1;1;0)HP_1403(next_20_1401) * HP_1404(prev_20_1402) * 
curr_64::node<key_20_1400,next_20_1401,prev_20_1402>&
curr_64'=curr_64 --> GP_1346(curr_64,curr_64')&
true,
 // POST
(2;1;1;0)HP_1404(prev_20_1402) * 
curr_64::node<key_20_1400,next_20_1401,prev_20_1402> * 
GP_1346(next_20_1401,curr_64')&true --> GP_1346(curr_64,curr_64')&
true,
 // POST
(2;1;0)HP_1344(curr_64)&curr_64=null & curr_64'=null & 
curr_64'=curr_64 --> GP_1346(curr_64,curr_64')&
true]

Procedure while_13_2$node~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_1344(curr_1440) ::= 
 curr_1440::node<key_20_1428,next_20_1429,prev_20_1430> * 
 HP_1344(next_20_1429)
 or emp&curr_1440=null
 (4,5),
 GP_1346(curr_1442,curr_1443) ::= 
 curr_1443::node<key_20_1400,next_20_1401,DP_DP_HP_1404> * 
 HP_1344(next_20_1401)&curr_1443=curr_1442
 or curr_1443::node<key_20_1400,next_20_1401,DP_DP_HP_1404> * 
    DP_1422(next_20_1441)&curr_1443=curr_1442
 or curr_1442::node<key_20_1400,next_20_1401,DP_DP_HP_1404> * 
    GP_1346(next_20_1401,curr_1443)
 or emp&curr_1442=null & curr_1443=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase curr_64::HP_1344{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume ref [curr_64]
                   (exists curr_64: curr_64'::GP_1346{}<curr_64>&
                   {FLOW,(4,5)=__norm#E})[]
                   
Checking procedure g_list_find$node~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_23,GP_24]requires HP_23(list)&
truerequires emp
 ensures GP_24(list,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // PRE
(0)HP_23(curr_64')&true --> curr_64'::HP_1344<>&
true,
 // POST
(0)res::GP_1346<curr_1504>&true --> GP_24(list,res)&
true]

Procedure g_list_find$node~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_23(curr_1505) ::= curr_1505::HP_1344<>(4,5),
 GP_24(list_1506,res_1507) ::= res_1507::GP_1346<curr_1504>(4,5),
 GP_1346(curr_1442,curr_1443) ::= 
 curr_1443::node<key_20_1400,next_20_1401,DP_DP_HP_1404> * 
 HP_1344(next_20_1401)&curr_1443=curr_1442
 or curr_1443::node<key_20_1400,next_20_1401,DP_DP_HP_1404> * 
    DP_1422(next_20_1441)&curr_1443=curr_1442
 or curr_1442::node<key_20_1400,next_20_1401,DP_DP_HP_1404> * 
    GP_1346(next_20_1401,curr_1443)
 or emp&curr_1442=null & curr_1443=null
 (4,5),
 HP_1344(curr_1440) ::= 
 curr_1440::node<key_20_1428,next_20_1429,prev_20_1430> * 
 HP_1344(next_20_1429)
 or emp&curr_1440=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase list::HP_1344{}<>&{FLOW,(1,31)=__flow#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists curr_1504: res::GP_1346{}<curr_1504>&
                   {FLOW,(4,5)=__norm#E})[]
                   Stop z3... 101 invocations Stop Omega... 51 invocations 
1 false contexts at: ( (13,2) )

!!! log(small):(0.052842,545)
Total verification time: 0.16 second(s)
	Time spent in main process: 0.108 second(s)
	Time spent in child processes: 0.052 second(s)
	Z3 Prover Time: 0.008 second(s)
