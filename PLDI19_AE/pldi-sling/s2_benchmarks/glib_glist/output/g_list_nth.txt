
!!!Full processing file "glib_glist//g_list_nth.dryad.c"
Parsing file "glib_glist//g_list_nth.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E glib_glist//g_list_nth.dryad.c -o glib_glist//g_list_nth.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of g_list_nth: :HP_23
!!! generate unknown predicate for Post synthesis of g_list_nth: :GP_24
!!! ss:EInfer @shape[HP_23,GP_24] EBase: [][](HRel HP_23(list))*(true)( FLOW __norm) {EAssume: 9,:(HRel GP_24(list,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 

!!! generate unknown predicate for Pre synthesis of while_12_2$node~int: :HP_1343
!!! generate unknown predicate for Post synthesis of while_12_2$node~int: :GP_1345Starting Omega.../usr/local/bin/oc

Checking procedure while_12_2$node~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_1343,GP_1345]requires HP_1343(list)&
truerequires emp
 ensures GP_1345(list,list')&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;1;1;0)HP_1343(list)&
list!=null --> list::node<key_20_1410,next_20_1411,prev_20_1412> * 
HP_1413(next_20_1411) * HP_1414(prev_20_1412)&
true,
 // PRE_REC
(1;1;1;0)HP_1413(list')&true --> HP_1343(list')&
true,
 // POST
(1;1;1;0)HP_1414(prev_20_1412) * 
list::node<key_20_1410,next_20_1411,prev_20_1412> * 
GP_1345(next_20_1411,list')&true --> GP_1345(list,list')&
true,
 // POST
(2;1;1;0)HP_1343(list)&list=null & list'=null & 
list'=list --> GP_1345(list,list')&
true,
 // POST
(2;1;0)HP_1343(list)&list'=list --> GP_1345(list,list')&
true]

Procedure while_12_2$node~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_1343(list_1437) ::= 
 HP_1343(next_20_1430) * 
 list_1437::node<key_20_1429,next_20_1430,DP_DP_HP_1414>
 or emp&list_1437=DP_DP_DP_1423
 or emp&list_1437=DP_DP_DP_1423 & list_1437!=null
 or emp&list_1437=DP_DP_DP_1423 & list_1437=null
 or HP_1343(next_20_1430) * 
    list_1437::node<key_20_1429,next_20_1430,DP_DP_HP_1414>
 (4,5),
 GP_1345(list_1438,list_1439) ::= 
 list_1438::node<key_20_1410,next_20_1411,DP_DP_HP_1414> * 
 GP_1345(next_20_1411,list_1439)
 or emp&list_1439=list_1438 & list_1438=DP_DP_DP_1423
 or emp&list_1438=null & list_1439=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase list::HP_1343{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume ref [list;n]
                   (exists list': list::GP_1345{}<list'>&
                   {FLOW,(4,5)=__norm#E})[]
                   
Checking procedure g_list_nth$node~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_23,GP_24]requires HP_23(list)&
truerequires emp
 ensures GP_24(list,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // PRE
(0)HP_23(list)&true --> list::HP_1343<>&
true,
 // POST
(0)list::GP_1345<list_1508>&true --> GP_24(list,res)&
true]

Procedure g_list_nth$node~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_23(list_1509) ::= list_1509::HP_1343<>(4,5),
 GP_24(list_1510,res_1511) ::= list_1510::GP_1345<list_1508>(4,5),
 GP_1345(list_1438,list_1439) ::= 
 list_1438::node<key_20_1410,next_20_1411,DP_DP_HP_1414> * 
 GP_1345(next_20_1411,list_1439)
 or emp&list_1439=list_1438 & list_1438=DP_DP_DP_1423
 or emp&list_1438=null & list_1439=null
 (4,5),
 HP_1343(list_1437) ::= 
 HP_1343(next_20_1430) * 
 list_1437::node<key_20_1429,next_20_1430,DP_DP_HP_1414>
 or emp&list_1437=DP_DP_DP_1423
 or emp&list_1437=DP_DP_DP_1423 & list_1437!=null
 or emp&list_1437=DP_DP_DP_1423 & list_1437=null
 or HP_1343(next_20_1430) * 
    list_1437::node<key_20_1429,next_20_1430,DP_DP_HP_1414>
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase list::HP_1343{}<>&{FLOW,(1,31)=__flow#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists list_1508: list::GP_1345{}<list_1508>&
                   {FLOW,(4,5)=__norm#E})[]
                   Stop z3... 143 invocations Stop Omega... 89 invocations 
1 false contexts at: ( (12,2) )

!!! log(small):(0.066853,799)
Total verification time: 0.14 second(s)
	Time spent in main process: 0.092 second(s)
	Time spent in child processes: 0.048 second(s)
	Z3 Prover Time: 0.004 second(s)
