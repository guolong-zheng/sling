get_trace.py:65 - 0
dynsl.py:144 - Inferring post-conditions at the location 9 ...

dynsl.py:144 - Inferring post-conditions at the location 17 ...

dynsl.py:144 - Inferring post-conditions at the location 21 ...

dynsl.py:144 - Inferring pre-conditions at the location 7 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 7:
dynsl.py:202 - emp
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 9:
dynsl.py:213 - x=nil & x=res & nil=res
dynsl.py:208 - Postconditions at location 21:
dynsl.py:213 - (exists mx!treep!56, p!treep!57, mi!treep!55. treep(x, mi!treep!55:int, mx!treep!56:int, p!treep!57:int) & mx!treep!56=mi!treep!55 & p!treep!57=nil & p!treep!57=res & nil=res)
dynsl.py:213 - x:b_node->b_node{nil, nil, fv!70, fv!71} & fv!71=nil & fv!71=res & nil=res
dynsl.py:208 - Postconditions at location 17:
dynsl.py:213 - nil=res
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 4
dynsl.py:255 - Number of traces: 8
dynsl.py:256 - Number of pre-defined predicates: 1
dynsl.py:258 - Number of free variables: 9
dynsl.py:259 - Number of atomic singleton predicates: 1
dynsl.py:260 - Number of atomic inductive predicates: 1
dynsl.py:261 - Number of pure constraints: 11
dynsl.py:262 - Number of total invs: 5
dynsl.py:263 - Number of pres:1
dynsl.py:264 - Number of post:4
dynsl.py:265 - Number of loop:0
dynsl.py:266 - Running time (sec): 1.66240787506
../example_numric/prio_tree/find_rec,4,8,5,9,1,1,11,5,1,4,0,1.66
