get_trace.py:65 - 0
dynsl.py:144 - Inferring pre-conditions at the location 8 ...

dynsl.py:144 - Inferring post-conditions at the location 28 ...

dynsl.py:144 - Inferring post-conditions at the location 21 ...

dynsl.py:144 - Inferring post-conditions at the location 14 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 8:
dynsl.py:202 - (exists mi!bst!9, mx!bst!10. bst(x, mi!bst!9:int, mx!bst!10:int) & True)
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 28:
dynsl.py:213 - (exists mi!bst!305, mx!bst!306, mi!bst!469, mx!bst!470. bst(tmp, mi!bst!305:int, mx!bst!306:int) * x:b_node->b_node{l, tmp, fv!457} * bst(l, mi!bst!469:int, mx!bst!470:int) & tmp=r & mi!bst!469=mx!bst!470 & x=res)
dynsl.py:213 - (exists mi!bst!215, mx!bst!216. bst(tmp, mi!bst!215:int, mx!bst!216:int) * x:b_node->b_node{l, tmp, fv!416} * l:b_node->b_node{nil, nil, fv!446} & tmp=r & x=res)
dynsl.py:213 - (exists mi!bst!305, mx!bst!306. bst(tmp, mi!bst!305:int, mx!bst!306:int) * x:b_node->b_node{l, tmp, fv!468} * l:b_node->b_node{nil, nil, fv!498} & tmp=r & x=res)
dynsl.py:213 - (exists mi!bst!215, mx!bst!216. bst(tmp, mi!bst!215:int, mx!bst!216:int) * x:b_node->b_node{l, tmp, fv!405} * l:b_node->b_node{nil, nil, fv!431} & tmp=r & x=res)
dynsl.py:213 - (exists mi!bst!305, mx!bst!306. bst(tmp, mi!bst!305:int, mx!bst!306:int) * x:b_node->b_node{l, tmp, fv!457} * l:b_node->b_node{nil, nil, fv!483} & tmp=r & x=res)
dynsl.py:213 - (exists mi!bst!215, mx!bst!216, mx!bst!418, mi!bst!417. bst(tmp, mi!bst!215:int, mx!bst!216:int) * x:b_node->b_node{l, tmp, fv!405} * bst(l, mi!bst!417:int, mx!bst!418:int) & tmp=r & mx!bst!418=mi!bst!417 & x=res)
dynsl.py:213 - (exists mi!bst!305, mx!bst!306, mi!bst!484, mx!bst!485. bst(tmp, mi!bst!305:int, mx!bst!306:int) * x:b_node->b_node{l, tmp, fv!468} * bst(l, mi!bst!484:int, mx!bst!485:int) & tmp=r & mi!bst!484=mx!bst!485 & x=res)
dynsl.py:213 - (exists mi!bst!215, mx!bst!216, mi!bst!432, mx!bst!433. bst(tmp, mi!bst!215:int, mx!bst!216:int) * x:b_node->b_node{l, tmp, fv!416} * bst(l, mi!bst!432:int, mx!bst!433:int) & tmp=r & mi!bst!432=mx!bst!433 & x=res)
dynsl.py:208 - Postconditions at location 21:
dynsl.py:213 - (exists mx!bst!500, mi!bst!499, mx!bst!659, mi!bst!658. bst(tmp, mi!bst!499:int, mx!bst!500:int) * x:b_node->b_node{tmp, r, fv!657} * bst(r, mi!bst!658:int, mx!bst!659:int) & r=nil & x=res)
dynsl.py:213 - (exists mx!bst!574, mi!bst!573, mi!bst!731, mx!bst!732. bst(tmp, mi!bst!573:int, mx!bst!574:int) * x:b_node->b_node{tmp, r, fv!730} * bst(r, mi!bst!731:int, mx!bst!732:int) & r=nil & x=res)
dynsl.py:208 - Postconditions at location 14:
dynsl.py:213 - (exists mi!bst!808, mx!bst!809. bst(leaf, mi!bst!808:int, mx!bst!809:int) & x=nil & mi!bst!808=mx!bst!809 & leaf=res)
dynsl.py:213 - (exists mi!bst!793, mx!bst!794. bst(leaf, mi!bst!793:int, mx!bst!794:int) & x=nil & mi!bst!793=mx!bst!794 & leaf=res)
dynsl.py:213 - leaf:b_node->b_node{x, x, fv!822} & x=nil & leaf=res
dynsl.py:213 - leaf:b_node->b_node{x, x, fv!807} & x=nil & leaf=res
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 4
dynsl.py:255 - Number of traces: 10
dynsl.py:256 - Number of pre-defined predicates: 1
dynsl.py:258 - Number of free variables: 77
dynsl.py:259 - Number of atomic singleton predicates: 16
dynsl.py:260 - Number of atomic inductive predicates: 19
dynsl.py:261 - Number of pure constraints: 34
dynsl.py:262 - Number of total invs: 15
dynsl.py:263 - Number of pres:1
dynsl.py:264 - Number of post:14
dynsl.py:265 - Number of loop:0
dynsl.py:266 - Running time (sec): 15.2991249561
../example_numric/binary_search_tree/insert_rec,4,10,15,77,16,19,34,15,1,14,0,15.2
