get_trace.py:65 - 10
dynsl.py:144 - Inferring pre-conditions at the location 8 ...

dynsl.py:144 - Inferring post-conditions at the location 19 ...

dynsl.py:144 - Inferring inv-conditions at the location 13 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 8:
dynsl.py:202 - lseg(h, nil) & True
dynsl.py:202 - sll(h) & True
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 19:
dynsl.py:213 - lseg(h, nil) * sll(j) & i=nil
dynsl.py:213 - lseg(h, nil) * lseg(j, nil) & i=nil
dynsl.py:213 - lseg(h, nil) * lseg(j, i) & i=nil
dynsl.py:213 - sll(h) * lseg(j, nil) & i=nil
dynsl.py:213 - lseg(h, i) * lseg(j, nil) & i=nil
dynsl.py:213 - lseg(h, i) * sll(j) & i=nil
dynsl.py:213 - sll(h) * sll(j) & i=nil
dynsl.py:213 - lseg(h, i) * lseg(j, i) & i=nil
dynsl.py:213 - sll(h) * lseg(j, i) & i=nil
dynsl.py:220 - Invariants at location 13:
dynsl.py:227 - (exists fv!232, fv!262. sll(i) * lseg(h, fv!232) * lseg(j, fv!262) & True)
dynsl.py:227 - (exists fv!282, fv!312. lseg(i, nil) * lseg(h, fv!282) * lseg(j, fv!312) & True)
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 3
dynsl.py:255 - Number of traces: 14
dynsl.py:256 - Number of pre-defined predicates: 4
dynsl.py:258 - Number of free variables: 35
dynsl.py:259 - Number of atomic singleton predicates: 0
dynsl.py:260 - Number of atomic inductive predicates: 26
dynsl.py:261 - Number of pure constraints: 9
dynsl.py:262 - Number of total invs: 13
dynsl.py:263 - Number of pres:2
dynsl.py:264 - Number of post:9
dynsl.py:265 - Number of loop:2
dynsl.py:266 - Running time (sec): 5.66963195801
../simple_example_update/AFWP/sll//sll_delete_all,3,14,4,35,0,26,9,13,2,9,2,5.66
