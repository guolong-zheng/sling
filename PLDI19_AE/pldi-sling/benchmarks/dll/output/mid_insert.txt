dynsl.py:144 - Inferring pre-conditions at the location 8 ...

dynsl.py:144 - Inferring post-conditions at the location 19 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 8:
dynsl.py:202 - (exists fv!30, fv!29, fv!64. dll(u, fv!29, fv!30, v) * dll(v, u, fv!64, nil) & fv!30=u)
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 19:
dynsl.py:213 - (exists fv!142, fv!195, fv!194, fv!227. dll(r, u, fv!142, v) * dll(u, fv!194, fv!195, r) * dll(v, r, fv!227, nil) & fv!195=u & r=fv!142 & r=res & fv!142=res)
dynsl.py:213 - (exists fv!331, fv!330, fv!363. r:node->node{fv!167, v, u} * dll(u, fv!330, fv!331, r) * dll(v, r, fv!363, nil) & r=res & u=fv!331)
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 2
dynsl.py:255 - Number of traces: 2
dynsl.py:256 - Number of pre-defined predicates: 1
dynsl.py:258 - Number of free variables: 11
dynsl.py:259 - Number of atomic singleton predicates: 1
dynsl.py:260 - Number of atomic inductive predicates: 7
dynsl.py:261 - Number of pure constraints: 7
dynsl.py:262 - Number of total invs: 3
dynsl.py:263 - Number of pres:1
dynsl.py:264 - Number of post:2
dynsl.py:265 - Number of loop:0
dynsl.py:266 - Running time (sec): 4.34766101837
../simple_example_update/dll//mid_insert,2,2,3,11,1,7,7,3,1,2,0,4.34
