get_trace.py:65 - 0
dynsl.py:144 - Inferring post-conditions at the location 43 ...

dynsl.py:144 - Inferring post-conditions at the location 35 ...

dynsl.py:144 - Inferring pre-conditions at the location 21 ...

dynsl.py:144 - Inferring post-conditions at the location 23 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 21:
dynsl.py:202 - tree(x) & True
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 35:
dynsl.py:213 - tree(xr) * x:b_node->b_node{l, xr, fv!228} * tree(l) & l=xl & x=res
dynsl.py:213 - tree(xr) * x:b_node->b_node{l, xr, fv!218} * tree(l) & x=res & l=xl
dynsl.py:208 - Postconditions at location 43:
dynsl.py:213 - tree(xr) * x:b_node->b_node{xl, xr, fv!55} * tree(xl) & xr=r & x=res & fv!55=nil
dynsl.py:213 - tree(xr) * x:b_node->b_node{xl, xr, fv!130} * tree(xl) & xr=r & x=res & fv!130=nil
dynsl.py:213 - tree(xr) * x:b_node->b_node{xl, xr, fv!62} * tree(xl) & xr=r & x=res & fv!62=nil
dynsl.py:213 - tree(xr) * x:b_node->b_node{xl, xr, fv!123} * tree(xl) & xr=r & x=res & fv!123=nil
dynsl.py:208 - Postconditions at location 23:
dynsl.py:213 - x=nil & x=res & nil=res
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 4
dynsl.py:255 - Number of traces: 10
dynsl.py:256 - Number of pre-defined predicates: 1
dynsl.py:258 - Number of free variables: 39
dynsl.py:259 - Number of atomic singleton predicates: 6
dynsl.py:260 - Number of atomic inductive predicates: 13
dynsl.py:261 - Number of pure constraints: 19
dynsl.py:262 - Number of total invs: 8
dynsl.py:263 - Number of pres:1
dynsl.py:264 - Number of post:7
dynsl.py:265 - Number of loop:0
dynsl.py:266 - Running time (sec): 4.32017087936
../simple_example_update/binary_search_tree/delete_rec,4,10,1,39,6,13,19,8,1,7(3),0,4.32,2
