
!!!Full processing file "sorted-list/quick_sort.dryad.c"
Parsing file "sorted-list/quick_sort.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E sorted-list/quick_sort.dryad.c -o sorted-list/quick_sort.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of find_last_sorted: :HP_22
!!! generate unknown predicate for Post synthesis of find_last_sorted: :GP_23
!!! generate unknown predicate for Pre synthesis of concat_sorted: :HP_24
!!! generate unknown predicate for Post synthesis of concat_sorted: :GP_25
!!! generate unknown predicate for Pre synthesis of quick_sort: :HP_28
!!! generate unknown predicate for Post synthesis of quick_sort: :GP_29
!!! ss:EInfer @shape[HP_28,GP_29] EBase: [][](HRel HP_28(l))*(true)( FLOW __norm) {EAssume: 13,:(HRel GP_29(l,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 

!!! generate unknown predicate for Pre synthesis of while_51_1$node~node~int~node~node: :HP_1406
!!! generate unknown predicate for Post synthesis of while_51_1$node~node~int~node~node: :GP_1411Starting Omega.../usr/local/bin/oc

Checking procedure while_8_3$node... Proving binding in method while_8_3$node for spec  EAssume ref [curr_69]
   emp&{FLOW,(4,5)=__norm#E}[]
   , Line 0

( [(,1 )]) bind: node  curr_69'::node<key_8_1371',next_8_1372'>@L cannot be derived from context
sorted-list/quick_sort.dryad.c_8:10_-1:-1

(Cause of Bind Failure) List of Failesc Context: [FEC(1, 0, 0 )]
Failed States:
[
 Label: [(,1 )]
 State:
        fe_kind: MUST
        fe_name: separation entailment
        fe_locs: {
                  fc_message: do_unmatched_rhs : curr_69'::node<key_8_1371',next_8_1372'>@L
                  fc_current_lhs_flow: {FLOW,(6,10)=__Error#E}}
[[ COND ==>  UnmatchedRHSData ==> ]]
 ]sorted-list/quick_sort.dryad.c_8:10_-1:-1

Context of Verification Failure: 1 File "",Line:0,Col:0

Last Proving Location: 1 File "sorted-list/quick_sort.dryad.c",Line:8,Col:10

Procedure while_8_3$node FAIL.(2)

Exception Failure("bind failure exception") Occurred!

Error(s) detected when checking procedure while_8_3$node

Checking procedure find_last_sorted$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[ HP_22,GP_23]requires HP_22(l)&truerequires emp
 ensures GP_23(l,res)&
true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // POST
(1;0)HP_22(l)&l!=null --> GP_23(l,res)&
true,
 // POST
(2;0)HP_22(l)&l=null & res=null & res=l --> GP_23(l,res)&
true]

Procedure find_last_sorted$node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_22(l_1518) ::= 
 emp&l_1518=DP_DP_DP_1517 & l_1518!=null
 or emp&l_1518=null
 (4,5),
 GP_23(l_1519,res_1520) ::= 
 emp&l_1519!=null & l_1519=DP_DP_DP_1517
 or emp&l_1519=null & res_1520=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase l::HP_22{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   l::GP_23{}<res>&{FLOW,(4,5)=__norm#E}[]
                   
Checking procedure concat_sorted$node~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[ HP_24,GP_25]requires HP_24(l1,l2)&
truerequires emp
 ensures GP_25(l1,l2,res)&true{,(4,5)=__norm#E};
Proving binding in method concat_sorted$node~node for spec  EAssume 
   GP_25(l1,l2,res)&{FLOW,(4,5)=__norm#E}[]
   , Line 0

( [(,0 ); (,1 ); (,0 ); (,1 )]) bind: node  last_70'::node<key_21_1385',next_21_1386'> cannot be derived from context
sorted-list/quick_sort.dryad.c_21:3_-1:-1

(Cause of Bind Failure) List of Failesc Context: [FEC(1, 0, 0 )]
Failed States:
[
 Label: [(,0 ); (,1 ); (,0 ); (,1 )]
 State:
        fe_kind: MAY
        fe_name: separation entailment
        fe_locs: {
                  fc_message: 
                    
  Type: WArg
  LHS: l1'::GP_23{}<tmp_71'>
  RHS: last_70'::node<key_21_1385',next_21_1386'>
 lhs_rest: HP_1568(l2,l1')
 rhs_rest: emp
                  fc_current_lhs_flow: {FLOW,(4,5)=__norm#E}}
[[ NothingToDo 
  Type: WArg
  LHS: l1'::GP_23{}<tmp_71'>
  RHS: last_70'::node<key_21_1385',next_21_1386'>
 lhs_rest: HP_1568(l2,l1')
 rhs_rest: emp ==> ]]
 ]sorted-list/quick_sort.dryad.c_21:3_-1:-1

Context of Verification Failure: 1 File "",Line:0,Col:0

Last Proving Location: 1 File "sorted-list/quick_sort.dryad.c",Line:21,Col:3

Procedure concat_sorted$node~node FAIL.(2)

Exception Failure("bind failure exception") Occurred!

Error(s) detected when checking procedure concat_sorted$node~node

Checking procedure while_51_1$node~node~int~node~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_1406,GP_1411]requires HP_1406(lpt_74,curr_72,rpt_75,tmp_76)&
truerequires emp
 ensures GP_1411(lpt_74,lpt_74',curr_72,curr_72',rpt_75,rpt_75',tmp_76,tmp_76')&
true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;1;0)HP_1406(lpt_74,curr_72,rpt_75,tmp_76)&
curr_72!=null --> curr_72::node<key_58_1580,next_58_1581> * 
HP_1582(next_58_1581,lpt_74@NI,rpt_75@NI,tmp_76@NI) * 
HP_1583(lpt_74,rpt_75,tmp_76,curr_72@NI)&
true,
 // PRE_REC
(1;1;1;0)HP_1582(curr_72',lpt_1599@NI,rpt_75@NI,tmp_76@NI) * 
HP_1583(lpt_1599,rpt_75,tmp_76,curr_1604@NI) * 
curr_1604::node<key_58_1580,lpt_1599>&
tmp_76'=curr_72' --> HP_1406(curr_1604,curr_72',rpt_75,tmp_76')&
true,
 // POST
(1;1;1;0)GP_1411(curr_72,lpt_74',next_58_1581,curr_72',rpt_75,rpt_75',next_58_1581,tmp_76')&
curr_72!=null --> GP_1411(lpt_74,lpt_74',curr_72,curr_72',rpt_75,rpt_75',tmp_76,tmp_76')&
true,
 // POST
(2;1;1;0)GP_1411(lpt_74,lpt_74',next_58_1581,curr_72',curr_72,rpt_75',next_58_1581,tmp_76')&
curr_72!=null --> GP_1411(lpt_74,lpt_74',curr_72,curr_72',rpt_75,rpt_75',tmp_76,tmp_76')&
true,
 // POST
(2;1;0)HP_1406(lpt_74,curr_72,rpt_75,tmp_76)&curr_72=null & curr_72'=null & 
curr_72'=curr_72 & lpt_74'=lpt_74 & rpt_75'=rpt_75 & 
tmp_76'=tmp_76 --> GP_1411(lpt_74,lpt_74',curr_72,curr_72',rpt_75,rpt_75',tmp_76,tmp_76')&
true]

Procedure while_51_1$node~node~int~node~node SUCCESS.

Context of Verification Failure: 1 File "",Line:0,Col:0

Last Proving Location: 1 File "",Line:0,Col:0

ERROR: at sorted-list/quick_sort.dryad.c_51:1_67:2
Message: split_components: don't expect OR

 --error:  at:

*********************************************************
*******relational definition ********
*********************************************************
[]
*************************************

!!! INFERRED SHAPE SPEC: EInfer @shape[HP_1406,GP_1411]
   EBase HP_1406(lpt_74,curr_72,rpt_75,tmp_76)&{FLOW,(4,5)=__norm#E}[]
           EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                   EAssume ref [lpt_74;curr_72;rpt_75;tmp_76]
                     GP_1411(lpt_74,lpt_74',curr_72,curr_72',rpt_75,rpt_75',tmp_76,tmp_76')&
                     {FLOW,(4,5)=__norm#E}[]
                     
Checking procedure quick_sort$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_28,GP_29]requires HP_28(l)&
truerequires emp
 ensures GP_29(l,res)&true{,(4,5)=__norm#E};

!!! WARNING logtime exception:0.
Procedure quick_sort$node FAIL.(2)

Exception Not_found Occurred!

Error(s) detected when checking procedure quick_sort$node
Stop z3... 154 invocations Stop Omega... 67 invocations 
1 false contexts at: ( (51,1) )

!!! log(small):(0.089772,507)
Total verification time: 0.26 second(s)
	Time spent in main process: 0.16 second(s)
	Time spent in child processes: 0.1 second(s)
	Z3 Prover Time: 0.008 second(s)
