
!!!Full processing file "GRASShopper//rec/rec_reverse.dryad.c"
Parsing file "GRASShopper//rec/rec_reverse.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E GRASShopper//rec/rec_reverse.dryad.c -o GRASShopper//rec/rec_reverse.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of rec_reverse_acc: :HP_21
!!! generate unknown predicate for Post synthesis of rec_reverse_acc: :GP_22
!!! ss:EInfer @shape[HP_21,GP_22] EBase: [][](HRel HP_21(curr,rev))*(true)( FLOW __norm) {EAssume: 9,:(HRel GP_22(curr,rev,res))*(true)( FLOW __norm)}
!!! generate unknown predicate for Pre synthesis of rec_reverse: :HP_24
!!! generate unknown predicate for Post synthesis of rec_reverse: :GP_25
!!! ss:EInfer @shape[HP_24,GP_25] EBase: [][](HRel HP_24(lst))*(true)( FLOW __norm) {EAssume: 12,:(HRel GP_25(lst,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure rec_reverse_acc$node~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_21,GP_22]requires HP_21(curr,rev@NI)&
truerequires emp
 ensures GP_22(curr,rev,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(2;0)HP_21(curr,rev@NI)&curr!=null --> curr::node<next_15_1423> * 
HP_1424(next_15_1423,rev@NI)&
true,
 // PRE_REC
(2;0)curr'::node<rev>&true --> HP_21(curr',next_15_1423@NI)&
true,
 // POST
(1;0)HP_21(curr,res@NI)&curr=null & rev=res --> GP_22(curr,rev,res)&
true,
 // POST
(2;0)GP_22(curr,next_15_1423,res)&curr!=null --> GP_22(curr,rev,res)&
true]

Procedure rec_reverse_acc$node~node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_21(curr_1439,rev_1440) ::= 
 curr_1439::node<DP_DP_HP_1424>
 or emp&curr_1439=null
 (4,5),
 GP_22(curr,rev,res) ::= emp&rev=res & curr=null(4,5)]
*************************************

Context of Verification Failure: 1 File "",Line:0,Col:0

Last Proving Location: 1 File "GRASShopper//rec/rec_reverse.dryad.c",Line:17,Col:9

ERROR: at _0:0_0:0
Message: res is not allowed in precondition

 --:plug_shape_into_specs warning:  at:

!!! INFERRED SHAPE SPEC: EInfer @shape[HP_21,GP_22]
   EBase HP_21(curr,rev)&{FLOW,(4,5)=__norm#E}[]
           EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                   EAssume 
                     GP_22(curr,rev,res)&{FLOW,(4,5)=__norm#E}[]
                     
Checking procedure rec_reverse$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_24,GP_25]requires HP_24(lst)&
truerequires emp
 ensures GP_25(lst,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // PRE
(0)HP_24(lst)&v_node_29_1361'=null --> HP_21(lst,v_node_29_1361'@NI)&
true,
 // POST
(0)emp&true --> GP_25(lst,res)&
true]

Procedure rec_reverse$node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_24(lst) ::= emp&lst=DP_DP_HP_24(4,5),
 GP_25(lst_1479,res_1480) ::= emp(4,5),
 GP_22(curr,rev,res) ::= emp&rev=res & curr=null(4,5),
 HP_21(curr_1439,rev_1440) ::= 
 curr_1439::node<DP_DP_HP_1424>
 or emp&curr_1439=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase emp&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   emp&{FLOW,(4,5)=__norm#E}[]
                   Stop z3... 69 invocations Stop Omega... 24 invocations 
0 false contexts at: ()

!!! log(small):(0.021542,286)
Total verification time: 0.104 second(s)
	Time spent in main process: 0.068 second(s)
	Time spent in child processes: 0.036 second(s)
	Z3 Prover Time: 0. second(s)
