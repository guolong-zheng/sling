
!!!Full processing file "cyclist/iter/llist_add.c"
Parsing file "cyclist/iter/llist_add.c" by cil parser...
GCC Preprocessing...
gcc -C -E cyclist/iter/llist_add.c -o cyclist/iter/llist_add.c.prep

!!! generate unknown predicate for Pre synthesis of llist_add: :HP_26
!!! generate unknown predicate for Post synthesis of llist_add: :GP_27
!!! ss:EInfer @shape[HP_26,GP_27] EBase: [][](HRel HP_26(list))*(true)( FLOW __norm) {EAssume: 10,:(HRel GP_27(list,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 

Checking procedure llist_add$llist~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_26,GP_27]requires HP_26(list)&
truerequires emp
 ensures GP_27(list,res)&true{,(4,5)=__norm#E};
Starting Omega.../usr/local/bin/oc

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(0)HP_26(list)&true --> list::llist<first_16_1443,last_16_1444> * 
HP_1445(first_16_1443) * HP_1446(last_16_1444)&
true,
 // BIND
(0)HP_1446(l_51')&true --> l_51'::node<next_17_1451,value_17_1452> * 
HP_1453(next_17_1451)&
true,
 // POST
(0)n_1461::node<next_15_1441,v_int_15_1442> * HP_1445(first_16_1443) * 
list::llist<first_16_1443,n_1461>&next_15_1441=null & 
res=list --> GP_27(list,res)&
true]

Procedure llist_add$llist~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_26(list_1467) ::= last_16_1464::node<DP_DP_HP_1453,value_17_1452> * 
list_1467::llist<DP_DP_HP_1445,last_16_1464>(4,5),
 GP_27(list_1468,res_1469) ::= n_1461::node<next_15_1441,v_int_15_1442> * 
list_1468::llist<DP_DP_HP_1445,n_1461>&res_1469=list_1468 & next_15_1441=null(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase exists (Expl)[](Impl)[value_17_1452](ex)[]last_16_1464::node<DP_DP_HP_1453,value_17_1452> * 
       list::llist<DP_DP_HP_1445,last_16_1464>&{FLOW,(1,29)=__flow#E}[]
         EBase exists (Expl)[](Impl)[value_17_1452](ex)[]emp&MayLoop[]&
               {FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists next_15_1441,v_int_15_1442,DP_DP_HP_1445,
                   n_1461: n_1461::node<next_15_1441,v_int_15_1442> * 
                   list::llist<DP_DP_HP_1445,n_1461>&res=list & 
                   next_15_1441=null&{FLOW,(4,5)=__norm#E})[]
                   Stop z3... 70 invocations Stop Omega... 21 invocations 
0 false contexts at: ()

!!! log(small):(0.074313,348)
Total verification time: 0.172 second(s)
	Time spent in main process: 0.116 second(s)
	Time spent in child processes: 0.056 second(s)
	Z3 Prover Time: 0. second(s)
