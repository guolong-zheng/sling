dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 24 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - (exists fv0, fv1. dll(p, fv1, fv0, nil) * hd:node->node{fv13, fv14, nil} & fv1=nil)
dynsl.py:227 - (exists fv0, fv1, fv2, fv3. dll(p, nil, fv1, fv0) * dll(hd, nil, fv3, fv2) & fv3=hd & fv0=nil)
dynsl.py:227 - (exists fv0, fv1, fv2, fv3. dll(p, fv1, fv0, nil) * dll(hd, nil, fv3, fv2) & fv3=hd & fv1=nil)
dynsl.py:227 - (exists fv0, fv1. dll(p, nil, fv1, fv0) * hd:node->node{fv13, fv14, nil} & fv0=nil)
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 24:
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, u, fv1, fv0) * dll(v, fv2, fv3, nil) & fv3=fv0 & fv2=fv4 & fv2=u & fv2=nil & fv1=hd & fv4=u & fv4=nil & u=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, nil, fv0, v) * dll(hd, u, fv2, fv1) * dll(v, nil, fv4, fv3) & fv0=p & fv4=fv1 & u=fv3 & u=nil & fv3=nil & hd=fv2)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, nil, fv0, fv1) * dll(v, nil, fv2, fv3) & fv4=fv3 & fv4=u & fv4=nil & fv2=fv1 & fv0=hd & fv3=u & fv3=nil & u=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, u, fv0, v) * dll(hd, nil, fv1, fv2) * dll(v, nil, fv4, fv3) & fv0=p & u=fv3 & u=nil & fv4=fv2 & fv3=nil & fv1=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, nil, fv0, fv1) * dll(v, fv2, fv3, u) & fv4=u & fv4=fv2 & fv4=nil & fv1=fv3 & fv0=hd & u=fv2 & u=nil & fv2=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, u, fv1, fv0) * dll(v, fv3, fv2, u) & fv0=fv2 & fv1=hd & fv4=u & fv4=fv3 & fv4=nil & u=fv3 & u=nil & fv3=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, u, fv0, v) * dll(hd, nil, fv1, fv2) * dll(v, fv4, fv3, u) & fv3=fv2 & fv4=u & fv4=nil & fv0=p & u=nil & fv1=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, u, fv0, v) * dll(hd, nil, fv1, fv2) * dll(v, u, fv3, fv4) & fv3=fv2 & fv0=p & fv4=u & fv4=nil & u=nil & fv1=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, nil, fv1, fv0) * dll(v, nil, fv3, fv2) & fv2=fv4 & fv2=u & fv2=nil & fv4=u & fv4=nil & fv3=fv0 & u=nil & fv1=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, nil, fv0, fv1) * dll(v, fv2, fv3, nil) & fv4=fv2 & fv4=u & fv4=nil & fv3=fv1 & fv2=u & fv2=nil & fv0=hd & u=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, nil, fv1, fv0) * dll(v, fv2, fv3, u) & fv4=u & fv4=fv2 & fv4=nil & u=fv2 & u=nil & fv1=hd & fv2=nil & fv0=fv3)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, nil, fv0, v) * dll(hd, nil, fv2, fv1) * dll(v, nil, fv3, fv4) & fv0=p & fv3=fv1 & fv2=hd & u=fv4 & u=nil & fv4=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, u, fv0, fv1) * dll(v, fv3, fv2, nil) & fv4=u & fv4=fv3 & fv4=nil & u=fv3 & u=nil & fv3=nil & fv0=hd & fv2=fv1)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, nil, fv0, v) * dll(hd, nil, fv2, fv1) * dll(v, fv4, fv3, u) & fv0=p & fv2=hd & u=fv4 & u=nil & fv3=fv1 & fv4=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, u, fv0, v) * dll(hd, u, fv1, fv2) * dll(v, fv3, fv4, u) & fv0=p & fv3=u & fv3=nil & u=nil & fv4=fv2 & fv1=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, u, fv0, v) * dll(hd, u, fv1, fv2) * dll(v, u, fv4, fv3) & fv0=p & fv4=fv2 & u=fv3 & u=nil & fv3=nil & fv1=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, u, fv0, fv1) * dll(v, nil, fv2, fv3) & fv4=fv3 & fv4=u & fv4=nil & fv3=u & fv3=nil & u=nil & fv1=fv2 & fv0=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, u, fv0, v) * dll(hd, nil, fv1, fv2) * dll(v, fv4, fv3, nil) & fv0=p & fv4=u & fv4=nil & u=nil & fv3=fv2 & fv1=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, u, fv0, fv1) * dll(v, fv3, fv2, u) & fv4=fv3 & fv4=u & fv4=nil & fv3=u & fv3=nil & fv2=fv1 & u=nil & fv0=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, nil, fv0, v) * dll(hd, u, fv2, fv1) * dll(v, fv3, fv4, nil) & fv3=u & fv3=nil & fv0=p & fv4=fv1 & u=nil & hd=fv2)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, u, fv1, fv0) * dll(v, nil, fv2, fv3) & fv2=fv0 & fv3=fv4 & fv3=u & fv3=nil & fv1=hd & fv4=u & fv4=nil & u=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, nil, fv1, fv0) * dll(v, fv2, fv3, nil) & fv3=fv0 & fv2=fv4 & fv2=u & fv2=nil & fv4=u & fv4=nil & u=nil & fv1=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, u, fv1, fv0) * dll(v, u, fv2, fv3) & fv0=fv2 & fv1=hd & fv4=u & fv4=fv3 & fv4=nil & u=fv3 & u=nil & fv3=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, nil, fv0, fv1) * dll(v, u, fv3, fv2) & fv4=fv2 & fv4=u & fv4=nil & fv1=fv3 & fv2=u & fv2=nil & fv0=hd & u=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, u, fv0, v) * dll(hd, u, fv1, fv2) * dll(v, nil, fv3, fv4) & fv3=fv2 & fv0=p & fv4=u & fv4=nil & u=nil & fv1=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, u, fv0, v) * dll(hd, u, fv1, fv2) * dll(v, fv4, fv3, nil) & fv3=fv2 & fv0=p & fv4=u & fv4=nil & u=nil & fv1=hd)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, nil, fv0, v) * dll(hd, nil, fv2, fv1) * dll(v, fv4, fv3, nil) & fv0=p & fv2=hd & fv3=fv1 & fv4=u & fv4=nil & u=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, nil, fv1, fv0) * dll(v, u, fv2, fv3) & fv2=fv0 & fv4=u & fv4=fv3 & fv4=nil & u=fv3 & u=nil & fv1=hd & fv3=nil)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, nil, fv0, v) * dll(hd, nil, fv2, fv1) * dll(v, u, fv4, fv3) & fv0=p & fv2=hd & fv3=u & fv3=nil & u=nil & fv1=fv4)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, nil, fv0, v) * dll(hd, u, fv2, fv1) * dll(v, fv4, fv3, u) & fv0=p & fv3=fv1 & u=fv4 & u=nil & fv4=nil & hd=fv2)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3, fv4. dll(p, nil, fv0, v) * dll(hd, u, fv2, fv1) * dll(v, u, fv4, fv3) & fv0=p & fv3=u & fv3=nil & fv4=fv1 & u=nil & hd=fv2)
dynsl.py:239 - (exists fv0, fv1, fv2, fv3. p:node->node{fv4, v, u} * dll(hd, u, fv0, fv1) * dll(v, u, fv2, fv3) & fv4=fv3 & fv4=u & fv4=nil & fv2=fv1 & fv3=u & fv3=nil & u=nil & fv0=hd)
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 2
dynsl.py:281 - Number of traces: 2
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 36
dynsl.py:284 - Number of free variables: 156
dynsl.py:285 - Number of atomic singleton predicates: 18
dynsl.py:286 - Number of atomic inductive predicates: 86
dynsl.py:287 - Number of pure constraints: 230
dynsl.py:288 - Number of total invs: 36
dynsl.py:289 - Number of pres:4
dynsl.py:290 - Number of post:32
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 16.921462059
../simple_example_update/dll/mid_delete_hd_star,2,2,36,156,18,86,230,36,4,32,0,16.9
