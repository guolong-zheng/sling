dynsl.py:144 - Inferring pre-conditions at the location 8 ...

dynsl.py:144 - Inferring post-conditions at the location 20 ...

dynsl.py:144 - Inferring post-conditions at the location 14 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 8:
dynsl.py:202 - (exists fv!9, fv!10. dll(x, fv!9, nil, fv!10) & x=fv!10 & fv!9=nil)
dynsl.py:202 - (exists fv!8, fv!7. dll(x, nil, fv!7, fv!8) & True)
dynsl.py:202 - (exists fv!6, fv!5. dll(x, fv!5, fv!6, nil) & True)
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 20:
dynsl.py:213 - (exists fv!326, fv!605, fv!606. dll(tmp, x, fv!326, nil) * dll(x, nil, fv!605, fv!606) & x=res)
dynsl.py:213 - (exists fv!326, fv!500, fv!499. dll(tmp, x, fv!326, nil) * dll(x, fv!499, fv!500, tmp) & x=fv!500 & x=res & fv!500=res)
dynsl.py:208 - Postconditions at location 14:
dynsl.py:213 - (exists fv!708, fv!709. dll(tail, nil, fv!708, fv!709) & x=fv!709 & x=nil & tail=fv!708 & tail=res & fv!708=res & fv!709=nil)
dynsl.py:213 - (exists fv!676, fv!675. dll(tail, x, fv!675, fv!676) & x=fv!676 & x=nil & tail=fv!675 & tail=res & fv!676=nil & fv!675=res)
dynsl.py:213 - tail:node->node{fv!705, x, x} & x=nil & tail=res
dynsl.py:213 - (exists fv!677, fv!678. dll(tail, fv!677, fv!678, x) & x=fv!677 & x=nil & tail=fv!678 & tail=res & fv!678=res & fv!677=nil)
dynsl.py:213 - (exists fv!706, fv!707. dll(tail, fv!706, fv!707, nil) & fv!706=x & fv!706=nil & x=nil & tail=fv!707 & tail=res & fv!707=res)
dynsl.py:213 - tail:node->node{fv!736, x, x} & x=nil & tail=res
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 3
dynsl.py:255 - Number of traces: 24
dynsl.py:256 - Number of pre-defined predicates: 1
dynsl.py:258 - Number of free variables: 29
dynsl.py:259 - Number of atomic singleton predicates: 2
dynsl.py:260 - Number of atomic inductive predicates: 11
dynsl.py:261 - Number of pure constraints: 34
dynsl.py:262 - Number of total invs: 11
dynsl.py:263 - Number of pres:3
dynsl.py:264 - Number of post:8
dynsl.py:265 - Number of loop:0
dynsl.py:266 - Running time (sec): 8.17241215706
../simple_example_update/dll//insert_back,3,24,11,29,2,11,34,11,3,8,0,8.17
