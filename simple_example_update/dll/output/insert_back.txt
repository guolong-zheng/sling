dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 20 ...

dynsl.py:167 - Inferring post-conditions at the location 14 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - (exists fv0, fv1. dll(x, fv1, fv0, nil) & True)
dynsl.py:227 - (exists fv0, fv1. dll(x, fv0, nil, fv1) & x=fv1 & fv0=nil)
dynsl.py:227 - (exists fv0, fv1. dll(x, nil, fv1, fv0) & True)
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 20:
dynsl.py:239 - (exists fv0, fv1, fv2. dll(tmp, x, fv0, nil) * dll(x, nil, fv1, fv2) & x=res)
dynsl.py:239 - (exists fv0, fv1, fv2. dll(tmp, x, fv0, nil) * dll(x, fv2, fv1, tmp) & x=fv1 & x=res & fv1=res)
dynsl.py:234 - Postconditions at location 14:
dynsl.py:239 - (exists fv0, fv1. dll(tail, fv0, fv1, nil) & fv0=x & fv0=nil & x=nil & tail=fv1 & tail=res & fv1=res)
dynsl.py:239 - (exists fv0, fv1. dll(tail, fv0, fv1, x) & x=fv0 & x=nil & tail=fv1 & tail=res & fv1=res & fv0=nil)
dynsl.py:239 - (exists fv0, fv1. dll(tail, nil, fv0, fv1) & x=fv1 & x=nil & tail=fv0 & tail=res & fv0=res & fv1=nil)
dynsl.py:239 - (exists fv0, fv1. dll(tail, x, fv1, fv0) & x=fv0 & x=nil & tail=fv1 & tail=res & fv0=nil & fv1=res)
dynsl.py:239 - tail:node->node{fv0, x, x} & x=nil & tail=res
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 3
dynsl.py:281 - Number of traces: 24
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 11
dynsl.py:284 - Number of free variables: 29
dynsl.py:285 - Number of atomic singleton predicates: 2
dynsl.py:286 - Number of atomic inductive predicates: 11
dynsl.py:287 - Number of pure constraints: 34
dynsl.py:288 - Number of total invs: 10
dynsl.py:289 - Number of pres:3
dynsl.py:290 - Number of post:7
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 8.57006406784
../simple_example_update/dll/insert_back,3,24,11,29,2,11,34,10,3,7,0,8.57
