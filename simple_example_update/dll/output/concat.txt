dynsl.py:221 - Inferring post-conditions at the location 24 ...

dynsl.py:221 - Inferring post-conditions at the location 9 ...

dynsl.py:221 - Inferring inv-conditions at the location 15 ...

dynsl.py:221 - Inferring pre-conditions at the location 7 ...

dynsl.py:299 - Precondition at location 7:
dynsl.py:307 -  dll(a, fv3, fv2, nil) * dll(b, fv1, fv0, nil) 
dynsl.py:307 -  dll(a, fv2, fv1, nil) * dll(b, nil, fv0, nil) 
dynsl.py:307 -  dll(a, fv1, fv0, nil) * dll(b, nil, nil, b) 
dynsl.py:307 -  dll(a, nil, fv2, nil) * dll(b, fv1, fv0, nil) 
dynsl.py:307 -  dll(a, nil, fv1, nil) * dll(b, nil, fv0, nil) 
dynsl.py:307 -  dll(a, nil, fv0, nil) * dll(b, nil, nil, b) 
dynsl.py:307 -  dll(a, nil, nil, a) * dll(b, fv1, fv0, nil) 
dynsl.py:307 -  dll(a, nil, nil, a) * dll(b, nil, fv0, nil) 
dynsl.py:307 -  dll(a, nil, nil, a) * dll(b, nil, nil, b) 
dynsl.py:309 - ==============================
dynsl.py:312 - Postcondition at location 24:
dynsl.py:320 -  dll(a, nil, fv0, curr) * dll(b, fv2, fv1, nil) * dll(curr, fv0, curr, b)  & a = res
dynsl.py:320 -  dll(a, nil, fv3, curr) * dll(b, fv2, fv1, nil) * curr:node->node{nil, b, fv0}  & a = res
dynsl.py:320 -  dll(a, nil, fv0, curr) * dll(b, nil, nil, b) * dll(curr, fv0, curr, b)  & a = res
dynsl.py:320 -  dll(a, nil, fv0, curr) * dll(b, nil, nil, b) * curr:node->node{nil, b, fv0}  & a = res
dynsl.py:312 - Postcondition at location 9:
dynsl.py:320 -  dll(b, nil, nil, b)  & a = nil & b = res
dynsl.py:320 -  dll(b, fv1, fv0, nil)  & a = nil & b = res
dynsl.py:320 -  dll(b, nil, fv0, nil)  & a = nil & b = res
dynsl.py:322 - ==============================
dynsl.py:326 - Invariants at location 15:
dynsl.py:334 -  dll(a, nil, fv1, curr) * dll(b, fv3, fv2, nil) * dll(curr, fv1, fv0, nil) 
dynsl.py:334 -  dll(a, nil, fv4, curr) * dll(b, fv3, fv2, nil) * dll(curr, nil, fv1, fv0) 
dynsl.py:334 -  dll(a, nil, fv1, curr) * dll(b, nil, fv2, nil) * dll(curr, fv1, fv0, nil) 
dynsl.py:334 -  dll(a, nil, fv3, curr) * dll(b, nil, fv2, nil) * dll(curr, nil, fv1, fv0) 
dynsl.py:334 -  dll(a, nil, fv1, curr) * dll(b, nil, nil, b) * dll(curr, fv1, fv0, nil) 
dynsl.py:334 -  dll(a, nil, fv2, curr) * dll(b, nil, nil, b) * dll(curr, nil, fv1, fv0) 
dynsl.py:338 - ==============================
dynsl.py:363 - Number of locations: 4
dynsl.py:364 - Number of traces: 26
dynsl.py:365 - Number of pre-defined predicates: 1
dynsl.py:367 - Number of free variables: 51
dynsl.py:368 - Number of atomic singleton predicates: 2
dynsl.py:369 - Number of atomic inductive predicates: 49
dynsl.py:370 - Number of pure constraints: 10
dynsl.py:371 - Number of total invs: 22
dynsl.py:372 - Number of pres:9
dynsl.py:373 - Number of post:7
dynsl.py:374 - Number of loop:6
dynsl.py:375 - Running time (sec): 48.216684103
../simple_example_update/dll/concat,4,26,51,2,49,10,22,9,7,6,48.2
../simple_example_update/dll/concat,4,26,2,49,10,22,9,7,6,48.2
