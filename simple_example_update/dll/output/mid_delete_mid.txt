dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 25 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - (exists fv0, fv1. dll(p, hd, fv0, nil) * dll(hd, nil, fv1, p) & fv1=hd)
dynsl.py:227 - (exists fv0. dll(p, hd, fv0, nil) * hd:node->node{fv2, p, nil} & True)
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 25:
dynsl.py:239 - (exists fv0. dll(u, nil, hd, v) * dll(v, hd, fv0, p) & p=nil & u=hd & u=res & fv0=v & hd=res)
dynsl.py:239 - dll(u, nil, hd, v) * v:node->node{fv0, p, u} & p=fv0 & p=nil & fv0=nil & u=hd & u=res & hd=res
dynsl.py:239 - (exists fv0. dll(u, p, fv0, v) * v:node->node{fv2, p, u} & p=fv2 & p=nil & fv2=nil & u=fv0 & u=hd & u=res & fv0=hd & fv0=res & hd=res)
dynsl.py:239 - dll(u, p, hd, v) * v:node->node{fv0, p, u} & p=fv0 & p=nil & u=hd & u=res & fv0=nil & hd=res
dynsl.py:239 - (exists fv0. dll(u, nil, fv0, v) * v:node->node{fv2, p, u} & p=fv2 & p=nil & fv2=nil & u=fv0 & u=hd & u=res & fv0=hd & fv0=res & hd=res)
dynsl.py:239 - (exists fv0. dll(u, p, fv0, v) * v:node->node{fv2, p, u} & p=fv2 & p=nil & fv0=u & fv0=hd & fv0=res & u=hd & u=res & fv2=nil & hd=res)
dynsl.py:239 - (exists fv0. dll(u, nil, hd, v) * dll(v, u, fv0, nil) & p=nil & u=hd & u=res & fv0=v & hd=res)
dynsl.py:239 - dll(u, p, hd, v) * v:node->node{fv0, p, u} & p=fv0 & p=nil & u=hd & u=res & hd=res & fv0=nil
dynsl.py:239 - (exists fv0. dll(u, nil, hd, v) * dll(v, hd, fv0, nil) & p=nil & fv0=v & u=hd & u=res & hd=res)
dynsl.py:239 - (exists fv0, fv1. dll(u, nil, fv0, v) * dll(v, hd, fv1, nil) & p=nil & u=fv0 & u=hd & u=res & v=fv1 & fv0=hd & fv0=res & hd=res)
dynsl.py:239 - (exists fv0. u:node->node{fv1, v, p} * dll(v, u, fv0, p) & p=nil & u=hd & u=res & v=fv0 & hd=res)
dynsl.py:239 - (exists fv0. dll(u, p, hd, v) * dll(v, u, fv0, p) & p=nil & fv0=v & u=hd & u=res & hd=res)
dynsl.py:239 - (exists fv0. dll(u, nil, fv0, v) * v:node->node{fv2, p, u} & p=fv2 & p=nil & u=fv0 & u=hd & u=res & fv0=hd & fv0=res & fv2=nil & hd=res)
dynsl.py:239 - (exists fv0. dll(u, p, hd, v) * dll(v, hd, fv0, nil) & p=nil & u=hd & u=res & fv0=v & hd=res)
dynsl.py:239 - dll(u, p, hd, v) * v:node->node{fv0, p, u} & p=fv0 & p=nil & fv0=nil & u=hd & u=res & hd=res
dynsl.py:239 - u:node->node{fv0, v, p} * v:node->node{fv1, p, u} & fv1=p & fv1=nil & u=hd & u=res & p=nil & hd=res
dynsl.py:239 - (exists fv0. dll(u, nil, hd, v) * dll(v, u, fv0, p) & p=nil & fv0=v & u=hd & u=res & hd=res)
dynsl.py:239 - (exists fv0. u:node->node{fv1, v, p} * dll(v, hd, fv0, p) & p=nil & u=hd & u=res & v=fv0 & hd=res)
dynsl.py:239 - (exists fv0, fv1. dll(u, nil, fv0, v) * dll(v, u, fv1, p) & p=nil & u=fv0 & u=hd & u=res & v=fv1 & fv0=hd & fv0=res & hd=res)
dynsl.py:239 - (exists fv0. dll(u, p, hd, v) * dll(v, hd, fv0, p) & p=nil & fv0=v & u=hd & u=res & hd=res)
dynsl.py:239 - (exists fv0. u:node->node{fv1, v, p} * dll(v, u, fv0, nil) & p=nil & u=hd & u=res & v=fv0 & hd=res)
dynsl.py:239 - (exists fv0. dll(u, nil, fv0, v) * v:node->node{fv2, p, u} & fv2=p & fv2=nil & u=fv0 & u=hd & u=res & fv0=hd & fv0=res & p=nil & hd=res)
dynsl.py:239 - (exists fv0. dll(u, p, fv0, v) * v:node->node{fv2, p, u} & p=fv2 & p=nil & fv0=u & fv0=hd & fv0=res & u=hd & u=res & hd=res & fv2=nil)
dynsl.py:239 - (exists fv0. u:node->node{fv1, v, p} * dll(v, hd, fv0, p) & p=nil & u=hd & u=res & fv0=v & hd=res)
dynsl.py:239 - (exists fv0, fv1. dll(u, nil, fv0, v) * dll(v, hd, fv1, p) & p=nil & u=fv0 & u=hd & u=res & fv1=v & fv0=hd & fv0=res & hd=res)
dynsl.py:239 - (exists fv0, fv1. dll(u, p, fv0, v) * dll(v, hd, fv1, p) & p=nil & fv0=u & fv0=hd & fv0=res & u=hd & u=res & fv1=v & hd=res)
dynsl.py:239 - (exists fv0. u:node->node{fv1, v, p} * dll(v, hd, fv0, nil) & p=nil & u=hd & u=res & v=fv0 & hd=res)
dynsl.py:239 - u:node->node{fv0, v, p} * v:node->node{fv1, p, u} & p=fv1 & p=nil & u=hd & u=res & fv1=nil & hd=res
dynsl.py:239 - (exists fv0, fv1. dll(u, p, fv0, v) * dll(v, u, fv1, nil) & p=nil & fv0=u & fv0=hd & fv0=res & u=hd & u=res & fv1=v & hd=res)
dynsl.py:239 - (exists fv0, fv1. dll(u, p, fv0, v) * dll(v, u, fv1, p) & p=nil & fv0=u & fv0=hd & fv0=res & u=hd & u=res & v=fv1 & hd=res)
dynsl.py:239 - dll(u, p, hd, v) * v:node->node{fv0, p, u} & fv0=p & fv0=nil & p=nil & u=hd & u=res & hd=res
dynsl.py:239 - (exists fv0. dll(u, p, hd, v) * dll(v, u, fv0, nil) & p=nil & fv0=v & u=hd & u=res & hd=res)
dynsl.py:239 - (exists fv0, fv1. dll(u, nil, fv0, v) * dll(v, u, fv1, nil) & p=nil & u=fv0 & u=hd & u=res & fv1=v & fv0=hd & fv0=res & hd=res)
dynsl.py:239 - u:node->node{fv0, v, p} * v:node->node{fv1, p, u} & p=fv1 & p=nil & u=hd & u=res & hd=res & fv1=nil
dynsl.py:239 - (exists fv0, fv1. dll(u, p, fv0, v) * dll(v, hd, fv1, nil) & fv1=v & p=nil & fv0=u & fv0=hd & fv0=res & u=hd & u=res & hd=res)
dynsl.py:239 - u:node->node{fv0, v, p} * v:node->node{fv1, p, u} & fv1=p & fv1=nil & p=nil & u=hd & u=res & hd=res
dynsl.py:239 - (exists fv0. u:node->node{fv1, v, p} * dll(v, u, fv0, nil) & p=nil & u=hd & u=res & fv0=v & hd=res)
dynsl.py:239 - (exists fv0. u:node->node{fv1, v, p} * dll(v, u, fv0, p) & p=nil & fv0=v & u=hd & u=res & hd=res)
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 2
dynsl.py:281 - Number of traces: 2
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 66
dynsl.py:284 - Number of free variables: 389
dynsl.py:285 - Number of atomic singleton predicates: 65
dynsl.py:286 - Number of atomic inductive predicates: 67
dynsl.py:287 - Number of pure constraints: 401
dynsl.py:288 - Number of total invs: 40
dynsl.py:289 - Number of pres:2
dynsl.py:290 - Number of post:38
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 16.5957741737
../simple_example_update/dll/mid_delete_mid,2,2,66,389,65,67,401,40,2,38,0,16.5
