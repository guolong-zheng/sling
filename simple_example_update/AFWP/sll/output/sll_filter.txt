dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring inv-conditions at the location 14 ...

dynsl.py:167 - Inferring post-conditions at the location 23 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - lseg(h, nil) & True
dynsl.py:227 - sll(h) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 23:
dynsl.py:239 - lseg(h, inxt) * lseg(j, nil) & i=nil & j=inxt & j=res & inxt=res
dynsl.py:239 - lseg(h, j) * sll(j) & i=nil & j=inxt & j=res & inxt=res
dynsl.py:239 - lseg(h, inxt) * sll(j) & i=nil & j=inxt & j=res & inxt=res
dynsl.py:239 - lseg(h, j) * lseg(j, i) & i=nil & j=inxt & j=res & inxt=res
dynsl.py:239 - lseg(h, j) * lseg(j, nil) & i=nil & j=inxt & j=res & inxt=res
dynsl.py:239 - lseg(h, inxt) * lseg(j, i) & i=nil & j=inxt & j=res & inxt=res
dynsl.py:246 - Invariants at location 14:
dynsl.py:253 - (exists fv!220, fv!259, fv!286. sll(i) * lseg(h, fv!220) * lseg(j, fv!259) * lseg(inxt, fv!286) & True)
dynsl.py:253 - (exists fv!306, fv!345, fv!372. lseg(i, nil) * lseg(h, fv!306) * lseg(j, fv!345) * lseg(inxt, fv!372) & True)
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 3
dynsl.py:281 - Number of traces: 21
dynsl.py:282 - Number of pre-defined predicates: 4
dynsl.py:283 - Number of inferred assertions: 12
dynsl.py:284 - Number of free variables: 40
dynsl.py:285 - Number of atomic singleton predicates: 0
dynsl.py:286 - Number of atomic inductive predicates: 22
dynsl.py:287 - Number of pure constraints: 24
dynsl.py:288 - Number of total invs: 10
dynsl.py:289 - Number of pres:2
dynsl.py:290 - Number of post:6
dynsl.py:291 - Number of loop:2
dynsl.py:292 - Running time (sec): 11.0338327885
../simple_example_update/AFWP/sll/sll_filter,3,21,12,40,0,22,24,10,2,6,2,11.0
