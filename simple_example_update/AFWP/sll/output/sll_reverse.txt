dynsl.py:221 - Inferring inv-conditions at the location 17 ...

dynsl.py:221 - Inferring pre-conditions at the location 10 ...

dynsl.py:221 - Inferring post-conditions at the location 23 ...

dynsl.py:271 - ==============================
dynsl.py:272 - Precondition at location 10:
dynsl.py:281 - lseg(h, nil) 
dynsl.py:281 - sll(h) 
dynsl.py:288 - Postconditions at location 23:
dynsl.py:293 - sll(h) * lseg(j, h)  & i = nil & k = nil
dynsl.py:293 - lseg(h, nil) * lseg(j, h)  & i = nil & k = nil
dynsl.py:300 - Invariants at location 17:
dynsl.py:308 -  sll(i) * lseg(h, fv1) * lseg(j, fv0) 
dynsl.py:308 -  lseg(i, k) * lseg(h, fv1) * sll(k) * lseg(j, fv0) 
dynsl.py:308 -  lseg(i, k) * lseg(h, fv1) * lseg(k, nil) * lseg(j, fv0) 
dynsl.py:308 -  lseg(i, nil) * lseg(h, fv1) * lseg(j, fv0) 
dynsl.py:312 - ==============================
dynsl.py:336 - Number of locations: 3
dynsl.py:337 - Number of traces: 14
dynsl.py:338 - Number of pre-defined predicates: 4
dynsl.py:340 - Number of free variables: 8
dynsl.py:341 - Number of atomic singleton predicates: 0
dynsl.py:342 - Number of atomic inductive predicates: 20
dynsl.py:343 - Number of pure constraints: 4
dynsl.py:344 - Number of total invs: 8
dynsl.py:345 - Number of pres:2
dynsl.py:346 - Number of post:2
dynsl.py:347 - Number of loop:4
dynsl.py:348 - Running time (sec): 16.1715409756
../simple_example_update/AFWP/sll/sll_reverse,3,14,8,0,20,4,8,2,2,4,16.1
