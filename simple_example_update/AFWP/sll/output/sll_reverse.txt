dynsl.py:167 - Inferring inv-conditions at the location 17 ...

dynsl.py:167 - Inferring pre-conditions at the location 10 ...

dynsl.py:167 - Inferring post-conditions at the location 23 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 10:
dynsl.py:227 - lseg(h, nil) & True
dynsl.py:227 - sll(h) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 23:
dynsl.py:239 - lseg(h, k) * lseg(j, h) & i=k & i=nil & k=nil & j=res
dynsl.py:239 - lseg(h, i) * lseg(j, h) & i=k & i=nil & k=nil & j=res
dynsl.py:239 - lseg(h, nil) * lseg(j, h) & i=k & i=nil & k=nil & j=res
dynsl.py:239 - sll(h) * lseg(j, h) & i=k & i=nil & k=nil & j=res
dynsl.py:246 - Invariants at location 17:
dynsl.py:253 - (exists fv!274, fv!296. sll(i) * lseg(h, fv!274) * lseg(j, fv!296) & True)
dynsl.py:253 - (exists fv!344, fv!476. lseg(i, k) * lseg(h, fv!344) * sll(k) * lseg(j, fv!476) & True)
dynsl.py:253 - (exists fv!344, fv!525. lseg(i, k) * lseg(h, fv!344) * lseg(k, nil) * lseg(j, fv!525) & True)
dynsl.py:253 - (exists fv!573, fv!595. sll(i) * lseg(h, fv!573) * lseg(j, fv!595) & True)
dynsl.py:253 - (exists fv!643, fv!665. lseg(i, nil) * lseg(h, fv!643) * lseg(j, fv!665) & True)
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 3
dynsl.py:281 - Number of traces: 14
dynsl.py:282 - Number of pre-defined predicates: 4
dynsl.py:283 - Number of inferred assertions: 13
dynsl.py:284 - Number of free variables: 39
dynsl.py:285 - Number of atomic singleton predicates: 0
dynsl.py:286 - Number of atomic inductive predicates: 27
dynsl.py:287 - Number of pure constraints: 16
dynsl.py:288 - Number of total invs: 11
dynsl.py:289 - Number of pres:2
dynsl.py:290 - Number of post:4
dynsl.py:291 - Number of loop:5
dynsl.py:292 - Running time (sec): 16.2857968807
../simple_example_update/AFWP/sll/sll_reverse,3,14,13,39,0,27,16,11,2,4,5,16.2
