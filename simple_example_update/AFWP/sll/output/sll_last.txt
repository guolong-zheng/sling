get_trace.py:65 - 10
dynsl.py:144 - Inferring inv-conditions at the location 16 ...

dynsl.py:144 - Inferring pre-conditions at the location 10 ...

dynsl.py:144 - Inferring post-conditions at the location 20 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 10:
dynsl.py:202 - lseg(h, nil) & True
dynsl.py:202 - sll(h) & True
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 20:
dynsl.py:213 - lseg(h, j) * lseg(j, i) & i=nil & j=res
dynsl.py:213 - lseg(h, j) * lseg(j, nil) & i=nil & j=res
dynsl.py:213 - lseg(h, j) * sll(j) & i=nil & j=res
dynsl.py:220 - Invariants at location 16:
dynsl.py:227 - (exists fv!144, fv!194. sll(i) * lseg(h, fv!144) * lseg(j, fv!194) & True)
dynsl.py:227 - (exists fv!214, fv!264. lseg(i, nil) * lseg(h, fv!214) * lseg(j, fv!264) & True)
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 3
dynsl.py:255 - Number of traces: 14
dynsl.py:256 - Number of pre-defined predicates: 4
dynsl.py:258 - Number of free variables: 20
dynsl.py:259 - Number of atomic singleton predicates: 0
dynsl.py:260 - Number of atomic inductive predicates: 14
dynsl.py:261 - Number of pure constraints: 6
dynsl.py:262 - Number of total invs: 7
dynsl.py:263 - Number of pres:2
dynsl.py:264 - Number of post:3
dynsl.py:265 - Number of loop:2
dynsl.py:266 - Running time (sec): 5.64775109291
../simple_example_update/AFWP/sll//sll_last,3,14,4,20,0,14,6,7,2(1),3(1),2(1),5.64
