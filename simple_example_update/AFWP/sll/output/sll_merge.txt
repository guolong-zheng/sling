dynsl.py:201 - Inferring inv-conditions at the location 17 ...

dynsl.py:201 - Inferring pre-conditions at the location 10 ...

dynsl.py:201 - Inferring post-conditions at the location 28 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 10:
dynsl.py:261 - klseg(i, nil) * klseg(j, nil) 
dynsl.py:261 - klist(i) * klist(j) 
dynsl.py:261 - klseg(i, nil) * klist(j) 
dynsl.py:261 - klist(i) * klseg(j, nil) 
dynsl.py:268 - Postconditions at location 28:
dynsl.py:273 - klseg(h, k) * klseg(k, i) * klseg(j, i) 
dynsl.py:273 - klseg(h, k) * klseg(k, nil) * klist(j) 
dynsl.py:273 - klseg(h, k) * klseg(k, i) * klseg(j, nil) 
dynsl.py:273 - klseg(h, k) * klist(k) * klseg(j, i) 
dynsl.py:273 - klseg(h, k) * klseg(k, nil) * klseg(j, nil) 
dynsl.py:273 - klseg(h, k) * klseg(k, nil) * klseg(j, i) 
dynsl.py:273 - klseg(h, k) * klseg(k, i) * klist(j) 
dynsl.py:273 - klseg(h, k) * klist(k) * klseg(j, nil) 
dynsl.py:273 - klseg(h, k) * klist(k) * klist(j) 
dynsl.py:280 - Invariants at location 17:
dynsl.py:288 -  klist(i) * klseg(h, fv1) * klseg(k, fv0) * klist(j) 
dynsl.py:288 -  klist(i) * klseg(h, fv1) * klseg(k, fv0) * klseg(j, nil) 
dynsl.py:288 -  klseg(i, nil) * klseg(h, fv1) * klseg(k, fv0) * klist(j) 
dynsl.py:288 -  klseg(i, nil) * klseg(h, fv1) * klseg(k, fv0) * klseg(j, nil) 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 3
dynsl.py:316 - Number of traces: 34
dynsl.py:317 - Number of pre-defined predicates: 4
dynsl.py:319 - Number of free variables: 69
dynsl.py:320 - Number of atomic singleton predicates: 0
dynsl.py:321 - Number of atomic inductive predicates: 51
dynsl.py:322 - Number of pure constraints: 18
dynsl.py:323 - Number of total invs: 17
dynsl.py:324 - Number of pres:4
dynsl.py:325 - Number of post:9
dynsl.py:326 - Number of loop:4
dynsl.py:327 - Running time (sec): 38.5384290218
../simple_example_update/AFWP/sll/sll_merge,3,34,69,0,51,18,17,4,9,4,38.5
