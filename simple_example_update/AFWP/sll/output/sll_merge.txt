dynsl.py:221 - Inferring inv-conditions at the location 17 ...

dynsl.py:221 - Inferring pre-conditions at the location 10 ...

dynsl.py:221 - Inferring post-conditions at the location 28 ...

dynsl.py:299 - Precondition at location 10:
dynsl.py:307 - klist(i) * klist(j) 
dynsl.py:307 - klist(i) * klseg(j, nil) 
dynsl.py:307 - klseg(i, nil) * klist(j) 
dynsl.py:307 - klseg(i, nil) * klseg(j, nil) 
dynsl.py:309 - ==============================
dynsl.py:312 - Postcondition at location 28:
dynsl.py:320 - klseg(h, k) * klist(k) * klist(j)  & i = nil
dynsl.py:320 - klseg(h, k) * klist(k) * klseg(j, nil)  & i = nil
dynsl.py:320 - klseg(h, k) * klseg(k, nil) * klist(j)  & i = nil
dynsl.py:320 - klseg(h, k) * klseg(k, nil) * klseg(j, nil)  & i = nil
dynsl.py:322 - ==============================
dynsl.py:326 - Invariants at location 17:
dynsl.py:334 -  klist(i) * klseg(h, fv1) * klseg(k, fv0) * klist(j) 
dynsl.py:334 -  klist(i) * klseg(h, fv1) * klseg(k, fv0) * klseg(j, nil) 
dynsl.py:334 -  klseg(i, nil) * klseg(h, fv1) * klseg(k, fv0) * klist(j) 
dynsl.py:334 -  klseg(i, nil) * klseg(h, fv1) * klseg(k, fv0) * klseg(j, nil) 
dynsl.py:338 - ==============================
dynsl.py:363 - Number of locations: 3
dynsl.py:364 - Number of traces: 34
dynsl.py:365 - Number of pre-defined predicates: 4
dynsl.py:367 - Number of free variables: 8
dynsl.py:368 - Number of atomic singleton predicates: 0
dynsl.py:369 - Number of atomic inductive predicates: 36
dynsl.py:370 - Number of pure constraints: 4
dynsl.py:371 - Number of total invs: 12
dynsl.py:372 - Number of pres:4
dynsl.py:373 - Number of post:4
dynsl.py:374 - Number of loop:4
dynsl.py:375 - Running time (sec): 39.3812248707
../simple_example_update/AFWP/sll/sll_merge,3,34,8,0,36,4,12,4,4,4,39.3
../simple_example_update/AFWP/sll/sll_merge,3,34,0,36,4,12,4,4,4,39.3
