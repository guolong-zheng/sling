dynsl.py:221 - Inferring post-conditions at the location 40 ...

dynsl.py:221 - Inferring pre-conditions at the location 9 ...

dynsl.py:221 - Inferring inv-conditions at the location 28 ...

dynsl.py:271 - ==============================
dynsl.py:272 - Precondition at location 9:
dynsl.py:281 - ll(l) 
dynsl.py:281 - ls(l, nil) 
dynsl.py:288 - Postconditions at location 40:
dynsl.py:293 - ll(l) * ls(ret, l) 
dynsl.py:293 - ls(l, nil) * ls(ret, l) 
dynsl.py:300 - Invariants at location 28:
dynsl.py:308 - ls(prev, next) * ls(curr, nil) * ls(l, prev) * ls(ret, l) * ls(next, nil) 
dynsl.py:308 - ls(prev, next) * ls(curr, nil) * ls(l, prev) * ls(ret, l) * ll(next) 
dynsl.py:308 - ls(prev, next) * ls(curr, nil) * ls(l, prev) * ret:node->node{fv0, l} * ls(next, nil) 
dynsl.py:308 - ls(prev, next) * ls(curr, nil) * ls(l, prev) * ret:node->node{fv0, l} * ll(next) 
dynsl.py:308 - ls(prev, next) * ll(curr) * ls(l, prev) * ls(ret, l) * ls(next, nil) 
dynsl.py:308 - ls(prev, next) * ll(curr) * ls(l, prev) * ls(ret, l) * ll(next) 
dynsl.py:308 - ls(prev, next) * ll(curr) * ls(l, prev) * ret:node->node{fv0, l} * ls(next, nil) 
dynsl.py:308 - ls(prev, next) * ll(curr) * ls(l, prev) * ret:node->node{fv0, l} * ll(next) 
dynsl.py:308 - prev:node->node{fv0, next} * ls(curr, nil) * ls(l, prev) * ls(ret, l) * ls(next, nil) 
dynsl.py:308 - prev:node->node{fv0, next} * ls(curr, nil) * ls(l, prev) * ls(ret, l) * ll(next) 
dynsl.py:308 - prev:node->node{fv1, next} * ls(curr, nil) * ls(l, prev) * ret:node->node{fv0, l} * ls(next, nil) 
dynsl.py:308 - prev:node->node{fv1, next} * ls(curr, nil) * ls(l, prev) * ret:node->node{fv0, l} * ll(next) 
dynsl.py:308 - prev:node->node{fv0, next} * ll(curr) * ls(l, prev) * ls(ret, l) * ls(next, nil) 
dynsl.py:308 - prev:node->node{fv0, next} * ll(curr) * ls(l, prev) * ls(ret, l) * ll(next) 
dynsl.py:308 - prev:node->node{fv1, next} * ll(curr) * ls(l, prev) * ret:node->node{fv0, l} * ls(next, nil) 
dynsl.py:308 - prev:node->node{fv1, next} * ll(curr) * ls(l, prev) * ret:node->node{fv0, l} * ll(next) 
dynsl.py:312 - ==============================
dynsl.py:336 - Number of locations: 3
dynsl.py:337 - Number of traces: 15
dynsl.py:338 - Number of pre-defined predicates: 2
dynsl.py:340 - Number of free variables: 16
dynsl.py:341 - Number of atomic singleton predicates: 16
dynsl.py:342 - Number of atomic inductive predicates: 70
dynsl.py:343 - Number of pure constraints: 0
dynsl.py:344 - Number of total invs: 20
dynsl.py:345 - Number of pres:2
dynsl.py:346 - Number of post:2
dynsl.py:347 - Number of loop:16
dynsl.py:348 - Running time (sec): 28.190598011
../simple_example_update/sortlist/sorted_insert_iter,3,15,16,16,70,0,20,2,2,16,28.1
