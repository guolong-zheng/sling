dynsl.py:201 - Inferring post-conditions at the location 40 ...

dynsl.py:201 - Inferring pre-conditions at the location 9 ...

dynsl.py:201 - Inferring inv-conditions at the location 28 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 9:
dynsl.py:261 - ll(l) 
dynsl.py:261 - ls(l, nil) 
dynsl.py:268 - Postconditions at location 40:
dynsl.py:273 - ll(l) * ls(ret, l) 
dynsl.py:273 - ls(l, nil) * ls(ret, l) 
dynsl.py:280 - Invariants at location 28:
dynsl.py:288 - ls(prev, next) * ls(curr, nil) * ls(l, prev) * ls(ret, l) * ls(next, nil) 
dynsl.py:288 - ls(prev, next) * ls(curr, nil) * ls(l, prev) * ls(ret, l) * ll(next) 
dynsl.py:288 - ls(prev, next) * ls(curr, nil) * ls(l, prev) * ret:node->node{fv0, l} * ls(next, nil) 
dynsl.py:288 - ls(prev, next) * ls(curr, nil) * ls(l, prev) * ret:node->node{fv0, l} * ll(next) 
dynsl.py:288 - ls(prev, next) * ll(curr) * ls(l, prev) * ls(ret, l) * ls(next, nil) 
dynsl.py:288 - ls(prev, next) * ll(curr) * ls(l, prev) * ls(ret, l) * ll(next) 
dynsl.py:288 - ls(prev, next) * ll(curr) * ls(l, prev) * ret:node->node{fv0, l} * ls(next, nil) 
dynsl.py:288 - ls(prev, next) * ll(curr) * ls(l, prev) * ret:node->node{fv0, l} * ll(next) 
dynsl.py:288 - prev:node->node{fv0, next} * ls(curr, nil) * ls(l, prev) * ls(ret, l) * ls(next, nil) 
dynsl.py:288 - prev:node->node{fv0, next} * ls(curr, nil) * ls(l, prev) * ls(ret, l) * ll(next) 
dynsl.py:288 - prev:node->node{fv1, next} * ls(curr, nil) * ls(l, prev) * ret:node->node{fv0, l} * ls(next, nil) 
dynsl.py:288 - prev:node->node{fv1, next} * ls(curr, nil) * ls(l, prev) * ret:node->node{fv0, l} * ll(next) 
dynsl.py:288 - prev:node->node{fv0, next} * ll(curr) * ls(l, prev) * ls(ret, l) * ls(next, nil) 
dynsl.py:288 - prev:node->node{fv0, next} * ll(curr) * ls(l, prev) * ls(ret, l) * ll(next) 
dynsl.py:288 - prev:node->node{fv1, next} * ll(curr) * ls(l, prev) * ret:node->node{fv0, l} * ls(next, nil) 
dynsl.py:288 - prev:node->node{fv1, next} * ll(curr) * ls(l, prev) * ret:node->node{fv0, l} * ll(next) 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 3
dynsl.py:316 - Number of traces: 15
dynsl.py:317 - Number of pre-defined predicates: 2
dynsl.py:319 - Number of free variables: 104
dynsl.py:320 - Number of atomic singleton predicates: 16
dynsl.py:321 - Number of atomic inductive predicates: 70
dynsl.py:322 - Number of pure constraints: 2
dynsl.py:323 - Number of total invs: 20
dynsl.py:324 - Number of pres:2
dynsl.py:325 - Number of post:2
dynsl.py:326 - Number of loop:16
dynsl.py:327 - Running time (sec): 28.4684560299
../simple_example_update/sortlist/sorted_insert_iter,3,15,104,16,70,2,20,2,2,16,28.4
