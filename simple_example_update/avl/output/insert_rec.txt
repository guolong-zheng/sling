dynsl.py:144 - Inferring pre-conditions at the location 8 ...

dynsl.py:144 - Inferring post-conditions at the location 23 ...

dynsl.py:144 - Inferring post-conditions at the location 28 ...

dynsl.py:144 - Inferring post-conditions at the location 15 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 8:
dynsl.py:202 - avl(x) & True
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 15:
dynsl.py:213 - leaf:a_node->a_node{x, x, fv!1297, fv!1298} & x=fv!1298 & x=nil & leaf=res & fv!1298=nil
dynsl.py:213 - avl(leaf) & x=nil & leaf=res
dynsl.py:213 - leaf:a_node->a_node{x, x, fv!1347, fv!1348} & x=fv!1348 & x=nil & fv!1348=nil & leaf=res
dynsl.py:208 - Postconditions at location 28:
dynsl.py:213 - avl(xr) * x:a_node->a_node{xl, new_right, fv!1027, fv!1028} * avl(xl) & True
dynsl.py:208 - Postconditions at location 23:
dynsl.py:213 - avl(xr) * x:a_node->a_node{new_left, xr, fv!581, fv!582} * avl(xl) & True
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 4
dynsl.py:255 - Number of traces: 30
dynsl.py:256 - Number of pre-defined predicates: 1
dynsl.py:258 - Number of free variables: 26
dynsl.py:259 - Number of atomic singleton predicates: 4
dynsl.py:260 - Number of atomic inductive predicates: 6
dynsl.py:261 - Number of pure constraints: 10
dynsl.py:262 - Number of total invs: 6
dynsl.py:263 - Number of pres:1
dynsl.py:264 - Number of post:5
dynsl.py:265 - Number of loop:0
dynsl.py:266 - Running time (sec): 7.02112293243
../simple_example_update/avl//insert_rec,4,30,7,26,4,6,10,6,1,5(4),0,7.02
