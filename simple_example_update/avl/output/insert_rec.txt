dynsl.py:221 - Inferring pre-conditions at the location 8 ...

dynsl.py:221 - Inferring post-conditions at the location 23 ...

dynsl.py:221 - Inferring post-conditions at the location 28 ...

dynsl.py:221 - Inferring post-conditions at the location 15 ...

dynsl.py:299 - Precondition at location 8:
dynsl.py:307 - avl(x) 
dynsl.py:309 - ==============================
dynsl.py:312 - Postcondition at location 23:
dynsl.py:320 - avl(xr) * x:a_node->a_node{new_left, xr, fv1, fv0} * avl(xl) 
dynsl.py:312 - Postcondition at location 28:
dynsl.py:320 - avl(xr) * x:a_node->a_node{xl, new_right, fv1, fv0} * avl(xl) 
dynsl.py:312 - Postcondition at location 15:
dynsl.py:320 - avl(leaf)  & x = nil
dynsl.py:320 - leaf:a_node->a_node{x, x, fv1, fv0}  & leaf = res
dynsl.py:320 - leaf:a_node->a_node{nil, nil, fv1, fv0}  & x = nil
dynsl.py:322 - ==============================
dynsl.py:338 - ==============================
dynsl.py:363 - Number of locations: 4
dynsl.py:364 - Number of traces: 30
dynsl.py:365 - Number of pre-defined predicates: 1
dynsl.py:367 - Number of free variables: 8
dynsl.py:368 - Number of atomic singleton predicates: 4
dynsl.py:369 - Number of atomic inductive predicates: 6
dynsl.py:370 - Number of pure constraints: 3
dynsl.py:371 - Number of total invs: 6
dynsl.py:372 - Number of pres:1
dynsl.py:373 - Number of post:5
dynsl.py:374 - Number of loop:0
dynsl.py:375 - Running time (sec): 8.53458404541
../simple_example_update/avl/insert_rec,4,30,8,4,6,3,6,1,5,0,8.53
../simple_example_update/avl/insert_rec,4,30,4,6,3,6,1,5,0,8.53
