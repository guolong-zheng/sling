dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 23 ...

dynsl.py:167 - Inferring post-conditions at the location 28 ...

dynsl.py:167 - Inferring post-conditions at the location 15 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - avl(x) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 15:
dynsl.py:239 - leaf:a_node->a_node{x, x, fv0, fv1} & fv1=x & fv1=nil & leaf=res & x=nil
dynsl.py:239 - leaf:a_node->a_node{x, x, fv0, fv1} & fv1=x & fv1=nil & x=nil & leaf=res
dynsl.py:239 - avl(leaf) & x=nil & leaf=res
dynsl.py:234 - Postconditions at location 28:
dynsl.py:239 - avl(xr) * x:a_node->a_node{xl, new_right, fv0, fv1} * avl(xl) & True
dynsl.py:234 - Postconditions at location 23:
dynsl.py:239 - avl(xr) * x:a_node->a_node{new_left, xr, fv0, fv1} * avl(xl) & True
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 4
dynsl.py:281 - Number of traces: 30
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 7
dynsl.py:284 - Number of free variables: 26
dynsl.py:285 - Number of atomic singleton predicates: 4
dynsl.py:286 - Number of atomic inductive predicates: 6
dynsl.py:287 - Number of pure constraints: 10
dynsl.py:288 - Number of total invs: 6
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:5
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 8.75490498543
../simple_example_update/avl/insert_rec,4,30,7,26,4,6,10,6,1,5,0,8.75
