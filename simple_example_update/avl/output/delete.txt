dynsl.py:167 - Inferring post-conditions at the location 25 ...

dynsl.py:167 - Inferring post-conditions at the location 59 ...

dynsl.py:167 - Inferring post-conditions at the location 54 ...

dynsl.py:167 - Inferring pre-conditions at the location 23 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 23:
dynsl.py:227 - avl(x) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 25:
dynsl.py:239 - x=nil & x=res & nil=res
dynsl.py:234 - Postconditions at location 59:
dynsl.py:239 - x:a_node->a_node{left, right, fv0, fv1} * avl(right) * avl(left) & right=new_right & x=res
dynsl.py:234 - Postconditions at location 54:
dynsl.py:239 - x:a_node->a_node{new_left, right, fv0, fv1} * avl(right) * avl(new_left) & new_left=left & x=res
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 4
dynsl.py:281 - Number of traces: 16
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 9
dynsl.py:284 - Number of free variables: 52
dynsl.py:285 - Number of atomic singleton predicates: 7
dynsl.py:286 - Number of atomic inductive predicates: 15
dynsl.py:287 - Number of pure constraints: 17
dynsl.py:288 - Number of total invs: 4
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:3
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 5.89544487
../simple_example_update/avl/delete,4,16,9,52,7,15,17,4,1,3,0,5.89
