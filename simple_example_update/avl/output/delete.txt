dynsl.py:221 - Inferring post-conditions at the location 25 ...

dynsl.py:221 - Inferring post-conditions at the location 59 ...

dynsl.py:221 - Inferring post-conditions at the location 54 ...

dynsl.py:221 - Inferring pre-conditions at the location 23 ...

dynsl.py:271 - ==============================
dynsl.py:272 - Precondition at location 23:
dynsl.py:281 - avl(x) 
dynsl.py:288 - Postconditions at location 25:
dynsl.py:293 - x=nil  & x = nil & re = nil & x = res
dynsl.py:288 - Postconditions at location 59:
dynsl.py:293 - x:a_node->a_node{left, right, fv1, fv0} * avl(right) * avl(left) 
dynsl.py:288 - Postconditions at location 54:
dynsl.py:293 - x:a_node->a_node{new_left, right, fv1, fv0} * avl(right) * avl(new_left) 
dynsl.py:312 - ==============================
dynsl.py:336 - Number of locations: 4
dynsl.py:337 - Number of traces: 16
dynsl.py:338 - Number of pre-defined predicates: 1
dynsl.py:340 - Number of free variables: 4
dynsl.py:341 - Number of atomic singleton predicates: 2
dynsl.py:342 - Number of atomic inductive predicates: 5
dynsl.py:343 - Number of pure constraints: 3
dynsl.py:344 - Number of total invs: 4
dynsl.py:345 - Number of pres:1
dynsl.py:346 - Number of post:3
dynsl.py:347 - Number of loop:0
dynsl.py:348 - Running time (sec): 5.79374313354
../simple_example_update/avl/delete,4,16,4,2,5,3,4,1,3,0,5.79
