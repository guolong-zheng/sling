dynsl.py:221 - Inferring post-conditions at the location 25 ...

dynsl.py:221 - Inferring post-conditions at the location 59 ...

dynsl.py:221 - Inferring post-conditions at the location 54 ...

dynsl.py:221 - Inferring pre-conditions at the location 23 ...

dynsl.py:299 - Precondition at location 23:
dynsl.py:307 - avl(x) 
dynsl.py:309 - ==============================
dynsl.py:312 - Postcondition at location 25:
dynsl.py:320 - x=nil  & x = nil & re = nil & x = res
dynsl.py:312 - Postcondition at location 59:
dynsl.py:320 - x:a_node->a_node{left, right, fv1, fv0} * avl(right) * avl(left) 
dynsl.py:312 - Postcondition at location 54:
dynsl.py:320 - x:a_node->a_node{new_left, right, fv1, fv0} * avl(right) * avl(new_left) 
dynsl.py:322 - ==============================
dynsl.py:338 - ==============================
dynsl.py:363 - Number of locations: 4
dynsl.py:364 - Number of traces: 16
dynsl.py:365 - Number of pre-defined predicates: 1
dynsl.py:367 - Number of free variables: 4
dynsl.py:368 - Number of atomic singleton predicates: 2
dynsl.py:369 - Number of atomic inductive predicates: 5
dynsl.py:370 - Number of pure constraints: 3
dynsl.py:371 - Number of total invs: 4
dynsl.py:372 - Number of pres:1
dynsl.py:373 - Number of post:3
dynsl.py:374 - Number of loop:0
dynsl.py:375 - Running time (sec): 6.0705640316
../simple_example_update/avl/delete,4,16,4,2,5,3,4,1,3,0,6.07
../simple_example_update/avl/delete,4,16,2,5,3,4,1,3,0,6.07
