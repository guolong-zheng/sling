dynsl.py:201 - Inferring post-conditions at the location 25 ...

dynsl.py:201 - Inferring post-conditions at the location 59 ...

dynsl.py:201 - Inferring post-conditions at the location 54 ...

dynsl.py:201 - Inferring pre-conditions at the location 23 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 23:
dynsl.py:261 - avl(x) 
dynsl.py:268 - Postconditions at location 25:
dynsl.py:273 - x=nil 
dynsl.py:268 - Postconditions at location 59:
dynsl.py:273 - x:a_node->a_node{left, right, fv1, fv0} * avl(right) * avl(left) 
dynsl.py:268 - Postconditions at location 54:
dynsl.py:273 - x:a_node->a_node{new_left, right, fv1, fv0} * avl(right) * avl(new_left) 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 4
dynsl.py:316 - Number of traces: 16
dynsl.py:317 - Number of pre-defined predicates: 1
dynsl.py:319 - Number of free variables: 17
dynsl.py:320 - Number of atomic singleton predicates: 2
dynsl.py:321 - Number of atomic inductive predicates: 5
dynsl.py:322 - Number of pure constraints: 7
dynsl.py:323 - Number of total invs: 4
dynsl.py:324 - Number of pres:1
dynsl.py:325 - Number of post:3
dynsl.py:326 - Number of loop:0
dynsl.py:327 - Running time (sec): 6.01496100426
../simple_example_update/avl/delete,4,16,17,2,5,7,4,1,3,0,6.01
