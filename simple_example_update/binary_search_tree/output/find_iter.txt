dynsl.py:221 - Inferring pre-conditions at the location 8 ...

dynsl.py:221 - Inferring inv-conditions at the location 12 ...

dynsl.py:221 - Inferring post-conditions at the location 14 ...

dynsl.py:221 - Inferring post-conditions at the location 22 ...

dynsl.py:299 - Precondition at location 8:
dynsl.py:307 - tree(x) 
dynsl.py:309 - ==============================
dynsl.py:312 - Postcondition at location 14:
dynsl.py:320 - tree(curr) 
dynsl.py:320 - curr:b_node->b_node{nil, nil, fv0} 
dynsl.py:312 - Postcondition at location 22:
dynsl.py:320 - tree(x)  & re = nil & curr = nil & curr = res
dynsl.py:322 - ==============================
dynsl.py:326 - Invariants at location 12:
dynsl.py:334 - tree(curr) 
dynsl.py:338 - ==============================
dynsl.py:363 - Number of locations: 4
dynsl.py:364 - Number of traces: 11
dynsl.py:365 - Number of pre-defined predicates: 1
dynsl.py:367 - Number of free variables: 1
dynsl.py:368 - Number of atomic singleton predicates: 1
dynsl.py:369 - Number of atomic inductive predicates: 3
dynsl.py:370 - Number of pure constraints: 3
dynsl.py:371 - Number of total invs: 5
dynsl.py:372 - Number of pres:1
dynsl.py:373 - Number of post:3
dynsl.py:374 - Number of loop:1
dynsl.py:375 - Running time (sec): 7.5888299942
../simple_example_update/binary_search_tree/find_iter,4,11,1,1,3,3,5,1,3,1,7.58
../simple_example_update/binary_search_tree/find_iter,4,11,1,3,3,5,1,3,1,7.58
