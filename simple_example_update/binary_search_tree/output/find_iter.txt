dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring inv-conditions at the location 12 ...

dynsl.py:167 - Inferring post-conditions at the location 14 ...

dynsl.py:167 - Inferring post-conditions at the location 22 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - tree(x) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 22:
dynsl.py:239 - tree(x) & curr=nil & curr=res & nil=res
dynsl.py:234 - Postconditions at location 14:
dynsl.py:239 - tree(curr) & curr=res
dynsl.py:239 - curr:b_node->b_node{nil, nil, fv0} & curr=res
dynsl.py:246 - Invariants at location 12:
dynsl.py:253 - tree(curr) & True
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 4
dynsl.py:281 - Number of traces: 11
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 6
dynsl.py:284 - Number of free variables: 10
dynsl.py:285 - Number of atomic singleton predicates: 1
dynsl.py:286 - Number of atomic inductive predicates: 4
dynsl.py:287 - Number of pure constraints: 5
dynsl.py:288 - Number of total invs: 5
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:3
dynsl.py:291 - Number of loop:1
dynsl.py:292 - Running time (sec): 7.63411402702
../simple_example_update/binary_search_tree/find_iter,4,11,6,10,1,4,5,5,1,3,1,7.63
