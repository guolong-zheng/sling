dynsl.py:221 - Inferring pre-conditions at the location 8 ...

dynsl.py:221 - Inferring inv-conditions at the location 12 ...

dynsl.py:221 - Inferring post-conditions at the location 14 ...

dynsl.py:221 - Inferring post-conditions at the location 22 ...

dynsl.py:271 - ==============================
dynsl.py:272 - Precondition at location 8:
dynsl.py:281 - tree(x) 
dynsl.py:288 - Postconditions at location 22:
dynsl.py:293 - tree(x)  & re = nil & curr = nil & curr = res
dynsl.py:288 - Postconditions at location 14:
dynsl.py:293 - tree(curr) 
dynsl.py:293 - curr:b_node->b_node{nil, nil, fv0} 
dynsl.py:300 - Invariants at location 12:
dynsl.py:308 - tree(curr) 
dynsl.py:312 - ==============================
dynsl.py:336 - Number of locations: 4
dynsl.py:337 - Number of traces: 11
dynsl.py:338 - Number of pre-defined predicates: 1
dynsl.py:340 - Number of free variables: 1
dynsl.py:341 - Number of atomic singleton predicates: 1
dynsl.py:342 - Number of atomic inductive predicates: 3
dynsl.py:343 - Number of pure constraints: 3
dynsl.py:344 - Number of total invs: 5
dynsl.py:345 - Number of pres:1
dynsl.py:346 - Number of post:3
dynsl.py:347 - Number of loop:1
dynsl.py:348 - Running time (sec): 7.57414889336
../simple_example_update/binary_search_tree/find_iter,4,11,1,1,3,3,5,1,3,1,7.57
