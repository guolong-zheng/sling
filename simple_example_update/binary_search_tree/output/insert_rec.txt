dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 28 ...

dynsl.py:167 - Inferring post-conditions at the location 21 ...

dynsl.py:167 - Inferring post-conditions at the location 14 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - tree(x) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 28:
dynsl.py:239 - tree(tmp) * x:b_node->b_node{l, tmp, fv0} * tree(l) & x=res
dynsl.py:234 - Postconditions at location 21:
dynsl.py:239 - tree(tmp) * x:b_node->b_node{tmp, r, fv0} * tree(r) & x=res
dynsl.py:234 - Postconditions at location 14:
dynsl.py:239 - tree(leaf) & x=nil & leaf=res
dynsl.py:239 - leaf:b_node->b_node{x, x, fv0} & x=nil & leaf=res
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 4
dynsl.py:281 - Number of traces: 28
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 9
dynsl.py:284 - Number of free variables: 32
dynsl.py:285 - Number of atomic singleton predicates: 6
dynsl.py:286 - Number of atomic inductive predicates: 10
dynsl.py:287 - Number of pure constraints: 10
dynsl.py:288 - Number of total invs: 5
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:4
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 8.50849699974
../simple_example_update/binary_search_tree/insert_rec,4,28,9,32,6,10,10,5,1,4,0,8.50
