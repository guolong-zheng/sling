get_trace.py:65 - 0
dynsl.py:144 - Inferring pre-conditions at the location 8 ...

dynsl.py:144 - Inferring post-conditions at the location 28 ...

dynsl.py:144 - Inferring post-conditions at the location 21 ...

dynsl.py:144 - Inferring post-conditions at the location 14 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 8:
dynsl.py:202 - tree(x) & True
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 28:
dynsl.py:213 - tree(tmp) * x:b_node->b_node{l, tmp, fv!643} * tree(l) & x=res
dynsl.py:213 - tree(tmp) * x:b_node->b_node{l, tmp, fv!767} * tree(l) & x=res
dynsl.py:208 - Postconditions at location 21:
dynsl.py:213 - tree(tmp) * x:b_node->b_node{tmp, r, fv!981} * tree(r) & x=res
dynsl.py:213 - tree(tmp) * x:b_node->b_node{tmp, r, fv!1045} * tree(r) & x=res
dynsl.py:208 - Postconditions at location 14:
dynsl.py:213 - leaf:b_node->b_node{x, x, fv!1176} & x=nil & leaf=res
dynsl.py:213 - leaf:b_node->b_node{x, x, fv!1139} & x=nil & leaf=res
dynsl.py:213 - tree(leaf) & x=nil & leaf=res
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 4
dynsl.py:255 - Number of traces: 24
dynsl.py:256 - Number of pre-defined predicates: 1
dynsl.py:258 - Number of free variables: 32
dynsl.py:259 - Number of atomic singleton predicates: 6
dynsl.py:260 - Number of atomic inductive predicates: 10
dynsl.py:261 - Number of pure constraints: 10
dynsl.py:262 - Number of total invs: 8
dynsl.py:263 - Number of pres:1
dynsl.py:264 - Number of post:7
dynsl.py:265 - Number of loop:0
dynsl.py:266 - Running time (sec): 8.21140599251
../simple_example_update/binary_search_tree/insert_rec,4,24,1,32,6,10,10,8,1,7(4),0,8.21,3
