dynsl.py:201 - Inferring pre-conditions at the location 8 ...

dynsl.py:201 - Inferring post-conditions at the location 18 ...

dynsl.py:201 - Inferring post-conditions at the location 12 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 8:
dynsl.py:261 -  lseg(x, x) 
dynsl.py:268 - Postconditions at location 18:
dynsl.py:273 - lseg(x, next_next) * lseg(next_next, x) * lseg(next, next_next) 
dynsl.py:273 - x:node->node{fv0, next_next} * lseg(next_next, x) * next:node->node{nil, next_next} 
dynsl.py:273 - lseg(x, next_next) * lseg(next_next, x) * next:node->node{nil, next_next} 
dynsl.py:273 - x:node->node{fv0, next_next} * lseg(next_next, x) * lseg(next, next_next) 
dynsl.py:268 - Postconditions at location 12:
dynsl.py:273 - lseg(x, next) 
dynsl.py:273 -  lseg(x, x) 
dynsl.py:273 - x:node->node{nil, x} 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 3
dynsl.py:316 - Number of traces: 4
dynsl.py:317 - Number of pre-defined predicates: 1
dynsl.py:319 - Number of free variables: 28
dynsl.py:320 - Number of atomic singleton predicates: 5
dynsl.py:321 - Number of atomic inductive predicates: 10
dynsl.py:322 - Number of pure constraints: 13
dynsl.py:323 - Number of total invs: 8
dynsl.py:324 - Number of pres:1
dynsl.py:325 - Number of post:7
dynsl.py:326 - Number of loop:0
dynsl.py:327 - Running time (sec): 2.0117559433
../simple_example_update/circular_list/delete_front,3,4,28,5,10,13,8,1,7,0,2.01
