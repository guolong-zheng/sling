dynsl.py:144 - Inferring pre-conditions at the location 8 ...

dynsl.py:144 - Inferring post-conditions at the location 18 ...

dynsl.py:144 - Inferring post-conditions at the location 12 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 8:
dynsl.py:202 - (exists fv!5. lseg(x, fv!5) & x=fv!5)
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 18:
dynsl.py:213 - x:node->node{fv!36, next_next} * lseg(next_next, x) * lseg(next, next_next) & next_next=res
dynsl.py:213 - lseg(x, next_next) * lseg(next_next, x) * next:node->node{fv!59, next_next} & next_next=res
dynsl.py:213 - lseg(x, next_next) * lseg(next_next, x) * lseg(next, next_next) & next_next=res
dynsl.py:213 - x:node->node{fv!36, next_next} * lseg(next_next, x) * next:node->node{fv!82, next_next} & next_next=res
dynsl.py:208 - Postconditions at location 12:
dynsl.py:213 - x:node->node{fv!93, x} & x=next & nil=res
dynsl.py:213 - (exists fv!88. lseg(x, fv!88) & fv!88=x & fv!88=next & x=next & nil=res)
dynsl.py:213 - x:node->node{fv!87, x} & x=next & nil=res
dynsl.py:213 - lseg(x, next) & x=next & nil=res
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 3
dynsl.py:255 - Number of traces: 4
dynsl.py:256 - Number of pre-defined predicates: 1
dynsl.py:258 - Number of free variables: 35
dynsl.py:259 - Number of atomic singleton predicates: 6
dynsl.py:260 - Number of atomic inductive predicates: 11
dynsl.py:261 - Number of pure constraints: 15
dynsl.py:262 - Number of total invs: 9
dynsl.py:263 - Number of pres:1
dynsl.py:264 - Number of post:8
dynsl.py:265 - Number of loop:0
dynsl.py:266 - Running time (sec): 2.06398797035
../simple_example_update/circular_list//delete_front,3,4,9,35,6,11,15,9,1,8(4),0,2.06,0,4
