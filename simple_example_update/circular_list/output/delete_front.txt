dynsl.py:221 - Inferring pre-conditions at the location 8 ...

dynsl.py:221 - Inferring post-conditions at the location 18 ...

dynsl.py:221 - Inferring post-conditions at the location 12 ...

dynsl.py:271 - ==============================
dynsl.py:272 - Precondition at location 8:
dynsl.py:281 -  lseg(x, x) 
dynsl.py:288 - Postconditions at location 18:
dynsl.py:293 - lseg(x, next_next) * lseg(next_next, x) * lseg(next, next_next) 
dynsl.py:293 - x:node->node{fv0, next_next} * lseg(next_next, x) * next:node->node{nil, next_next} 
dynsl.py:293 - lseg(x, next_next) * lseg(next_next, x) * next:node->node{nil, next_next} 
dynsl.py:293 - x:node->node{fv0, next_next} * lseg(next_next, x) * lseg(next, next_next) 
dynsl.py:288 - Postconditions at location 12:
dynsl.py:293 - lseg(x, next)  & re = nil
dynsl.py:293 -  lseg(x, x)  & res = nil
dynsl.py:293 - x:node->node{nil, x}  & re = nil
dynsl.py:312 - ==============================
dynsl.py:336 - Number of locations: 3
dynsl.py:337 - Number of traces: 4
dynsl.py:338 - Number of pre-defined predicates: 1
dynsl.py:340 - Number of free variables: 2
dynsl.py:341 - Number of atomic singleton predicates: 5
dynsl.py:342 - Number of atomic inductive predicates: 11
dynsl.py:343 - Number of pure constraints: 3
dynsl.py:344 - Number of total invs: 8
dynsl.py:345 - Number of pres:1
dynsl.py:346 - Number of post:7
dynsl.py:347 - Number of loop:0
dynsl.py:348 - Running time (sec): 1.92923402786
../simple_example_update/circular_list/delete_front,3,4,2,5,11,3,8,1,7,0,1.92
