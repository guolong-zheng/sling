get_trace.py:65 - 0
dynsl.py:144 - Inferring pre-conditions at the location 16 ...

dynsl.py:144 - Inferring post-conditions at the location 27 ...

dynsl.py:144 - Inferring post-conditions at the location 22 ...

dynsl.py:194 - ==============================
dynsl.py:195 - Precondition at location 16:
dynsl.py:202 - (exists fv!5. lseg(x, fv!5) & x=fv!5)
dynsl.py:204 - Corresponding postconditions:
dynsl.py:208 - Postconditions at location 27:
dynsl.py:213 - lseg(x, tl) * tl:node->node{fv!41, next} * lseg(next, x) & tl=res & fv!41=nil
dynsl.py:213 - x:node->node{fv!36, tl} * tl:node->node{fv!86, next} * lseg(next, x) & tl=res & fv!86=nil
dynsl.py:213 - lseg(x, tl) * lseg(tl, next) * lseg(next, x) & tl=res
dynsl.py:213 - x:node->node{fv!36, tl} * lseg(tl, next) * lseg(next, x) & tl=res
dynsl.py:208 - Postconditions at location 22:
dynsl.py:213 - x:node->node{fv!135, tl} * tl:node->node{fv!160, x} & x=next & tl=res & fv!160=nil
dynsl.py:213 - x:node->node{fv!140, tl} * tl:node->node{fv!180, x} & fv!180=nil & x=next & tl=res
dynsl.py:213 - lseg(x, tl) * tl:node->node{fv!150, x} & x=next & tl=res & fv!150=nil
dynsl.py:213 - lseg(x, tl) * lseg(tl, x) & x=next & tl=res
dynsl.py:213 - lseg(x, tl) * tl:node->node{fv!145, x} & fv!145=nil & tl=res & next=x
dynsl.py:213 - lseg(x, tl) * tl:node->node{fv!165, x} & x=next & tl=res & fv!165=nil
dynsl.py:213 - lseg(x, tl) * tl:node->node{fv!170, x} & fv!170=nil & tl=res & next=x
dynsl.py:213 - x:node->node{fv!135, tl} * lseg(tl, x) & x=next & tl=res
dynsl.py:213 - x:node->node{fv!140, tl} * lseg(tl, next) & x=next & tl=res
dynsl.py:213 - x:node->node{fv!135, tl} * lseg(tl, next) & x=next & tl=res
dynsl.py:213 - x:node->node{fv!135, tl} * tl:node->node{fv!155, x} & x=next & tl=res & fv!155=nil
dynsl.py:213 - lseg(x, tl) * lseg(tl, next) & x=next & tl=res
dynsl.py:213 - x:node->node{fv!140, tl} * lseg(tl, x) & x=next & tl=res
dynsl.py:213 - x:node->node{fv!140, tl} * tl:node->node{fv!175, x} & x=next & tl=res & fv!175=nil
dynsl.py:231 - ==============================
dynsl.py:254 - Number of locations: 3
dynsl.py:255 - Number of traces: 4
dynsl.py:256 - Number of pre-defined predicates: 1
dynsl.py:258 - Number of free variables: 93
dynsl.py:259 - Number of atomic singleton predicates: 20
dynsl.py:260 - Number of atomic inductive predicates: 21
dynsl.py:261 - Number of pure constraints: 43
dynsl.py:262 - Number of total invs: 19
dynsl.py:263 - Number of pres:1
dynsl.py:264 - Number of post:18
dynsl.py:265 - Number of loop:0
dynsl.py:266 - Running time (sec): 3.93639802933
../simple_example_update/circular_list/insert_back,3,4,1,93,20,21,43,19,1,18,0,3.93
