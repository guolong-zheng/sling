dynsl.py:201 - Inferring pre-conditions at the location 16 ...

dynsl.py:201 - Inferring post-conditions at the location 27 ...

dynsl.py:201 - Inferring post-conditions at the location 22 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 16:
dynsl.py:261 -  lseg(x, x) 
dynsl.py:268 - Postconditions at location 27:
dynsl.py:273 - lseg(x, tl) * lseg(tl, next) * lseg(next, x) 
dynsl.py:273 - x:node->node{fv0, tl} * lseg(tl, next) * lseg(next, x) 
dynsl.py:273 - x:node->node{fv0, tl} * tl:node->node{ni, next} * lseg(next, x) 
dynsl.py:273 - lseg(x, tl) * tl:node->node{ni, next} * lseg(next, x) 
dynsl.py:268 - Postconditions at location 22:
dynsl.py:273 - lseg(x, tl) * tl:node->node{ni, x} 
dynsl.py:273 - lseg(x, tl) * lseg(tl, next) 
dynsl.py:273 - x:node->node{fv0, tl} * tl:node->node{ni, x} 
dynsl.py:273 - lseg(x, tl) * lseg(tl, x) 
dynsl.py:273 - x:node->node{fv0, tl} * lseg(tl, next) 
dynsl.py:273 - x:node->node{fv0, tl} * lseg(tl, x) 
dynsl.py:273 - lseg(x, tl) * tl:node->node{nil, x} 
dynsl.py:273 - x:node->node{fv0, tl} * tl:node->node{nil, x} 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 3
dynsl.py:316 - Number of traces: 4
dynsl.py:317 - Number of pre-defined predicates: 1
dynsl.py:319 - Number of free variables: 61
dynsl.py:320 - Number of atomic singleton predicates: 12
dynsl.py:321 - Number of atomic inductive predicates: 17
dynsl.py:322 - Number of pure constraints: 27
dynsl.py:323 - Number of total invs: 13
dynsl.py:324 - Number of pres:1
dynsl.py:325 - Number of post:12
dynsl.py:326 - Number of loop:0
dynsl.py:327 - Running time (sec): 4.05019688606
../simple_example_update/circular_list/insert_back,3,4,61,12,17,27,13,1,12,0,4.05
