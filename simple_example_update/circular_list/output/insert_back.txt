dynsl.py:167 - Inferring pre-conditions at the location 16 ...

dynsl.py:167 - Inferring post-conditions at the location 27 ...

dynsl.py:167 - Inferring post-conditions at the location 22 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 16:
dynsl.py:227 - (exists fv0. lseg(x, fv0) & x=fv0)
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 27:
dynsl.py:239 - x:node->node{fv0, tl} * tl:node->node{fv1, next} * lseg(next, x) & tl=res & fv1=nil
dynsl.py:239 - lseg(x, tl) * tl:node->node{fv0, next} * lseg(next, x) & tl=res & fv0=nil
dynsl.py:239 - lseg(x, tl) * lseg(tl, next) * lseg(next, x) & tl=res
dynsl.py:239 - x:node->node{fv0, tl} * lseg(tl, next) * lseg(next, x) & tl=res
dynsl.py:234 - Postconditions at location 22:
dynsl.py:239 - x:node->node{fv0, tl} * lseg(tl, x) & x=next & tl=res
dynsl.py:239 - lseg(x, tl) * lseg(tl, x) & x=next & tl=res
dynsl.py:239 - x:node->node{fv0, tl} * tl:node->node{fv1, x} & x=next & tl=res & fv1=nil
dynsl.py:239 - x:node->node{fv0, tl} * lseg(tl, next) & x=next & tl=res
dynsl.py:239 - x:node->node{fv0, tl} * tl:node->node{fv1, x} & fv1=nil & x=next & tl=res
dynsl.py:239 - lseg(x, tl) * tl:node->node{fv0, x} & x=next & tl=res & fv0=nil
dynsl.py:239 - lseg(x, tl) * lseg(tl, next) & x=next & tl=res
dynsl.py:239 - lseg(x, tl) * tl:node->node{fv0, x} & fv0=nil & tl=res & next=x
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 3
dynsl.py:281 - Number of traces: 4
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 21
dynsl.py:284 - Number of free variables: 93
dynsl.py:285 - Number of atomic singleton predicates: 20
dynsl.py:286 - Number of atomic inductive predicates: 21
dynsl.py:287 - Number of pure constraints: 43
dynsl.py:288 - Number of total invs: 13
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:12
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 3.7622718811
../simple_example_update/circular_list/insert_back,3,4,21,93,20,21,43,13,1,12,0,3.76
