dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 13 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - (exists fv0. lseg(x, fv0) & x=fv0)
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 13:
dynsl.py:239 - lseg(tmp, x) * lseg(x, hd) * lseg(hd, tmp) & hd=res
dynsl.py:239 - lseg(tmp, x) * x:node->node{fv0, hd} * lseg(hd, tmp) & hd=res
dynsl.py:239 - lseg(tmp, x) * lseg(x, hd) * hd:node->node{fv0, tmp} & fv0=nil & hd=res
dynsl.py:239 - lseg(tmp, x) * x:node->node{fv0, hd} * hd:node->node{fv1, tmp} & fv1=nil & hd=res
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 2
dynsl.py:281 - Number of traces: 2
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 5
dynsl.py:284 - Number of free variables: 21
dynsl.py:285 - Number of atomic singleton predicates: 4
dynsl.py:286 - Number of atomic inductive predicates: 9
dynsl.py:287 - Number of pure constraints: 7
dynsl.py:288 - Number of total invs: 5
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:4
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 1.54160094261
../simple_example_update/circular_list/insert_front,2,2,5,21,4,9,7,5,1,4,0,1.54
