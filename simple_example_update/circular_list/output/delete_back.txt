dynsl.py:167 - Inferring post-conditions at the location 26 ...

dynsl.py:167 - Inferring pre-conditions at the location 22 ...

dynsl.py:167 - Inferring post-conditions at the location 31 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 22:
dynsl.py:227 - (exists fv0. lseg(x, fv0) & x=fv0)
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 26:
dynsl.py:239 - (exists fv0. lseg(x, fv0) & x=fv0 & x=next & fv0=next & nil=res)
dynsl.py:239 - x:node->node{fv0, x} & x=next & fv0=nil & fv0=res & nil=res
dynsl.py:239 - lseg(x, next) & x=next & nil=res
dynsl.py:234 - Postconditions at location 31:
dynsl.py:239 - lseg(x, hd_next) * lseg(hd_next, x) & hd_next=next & hd_next=res & next=res
dynsl.py:239 - x:node->node{fv0, hd_next} * lseg(hd_next, x) & hd_next=next & hd_next=res & next=res
dynsl.py:239 - lseg(x, next) * lseg(hd_next, x) & hd_next=next & hd_next=res & next=res
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 3
dynsl.py:281 - Number of traces: 4
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 13
dynsl.py:284 - Number of free variables: 43
dynsl.py:285 - Number of atomic singleton predicates: 6
dynsl.py:286 - Number of atomic inductive predicates: 11
dynsl.py:287 - Number of pure constraints: 33
dynsl.py:288 - Number of total invs: 7
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:6
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 3.87229800224
../simple_example_update/circular_list/delete_back,3,4,13,43,6,11,33,7,1,6,0,3.87
