dynsl.py:201 - Inferring post-conditions at the location 26 ...

dynsl.py:201 - Inferring pre-conditions at the location 22 ...

dynsl.py:201 - Inferring post-conditions at the location 31 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 22:
dynsl.py:261 -  lseg(x, x) 
dynsl.py:268 - Postconditions at location 26:
dynsl.py:273 - lseg(x, next) 
dynsl.py:273 -  lseg(x, x) 
dynsl.py:273 - x:node->node{nil, x} 
dynsl.py:268 - Postconditions at location 31:
dynsl.py:273 - lseg(x, hd_next) * lseg(hd_next, x) 
dynsl.py:273 - lseg(x, next) * lseg(hd_next, x) 
dynsl.py:273 - x:node->node{fv0, hd_next} * lseg(hd_next, x) 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 3
dynsl.py:316 - Number of traces: 4
dynsl.py:317 - Number of pre-defined predicates: 1
dynsl.py:319 - Number of free variables: 23
dynsl.py:320 - Number of atomic singleton predicates: 2
dynsl.py:321 - Number of atomic inductive predicates: 7
dynsl.py:322 - Number of pure constraints: 19
dynsl.py:323 - Number of total invs: 7
dynsl.py:324 - Number of pres:1
dynsl.py:325 - Number of post:6
dynsl.py:326 - Number of loop:0
dynsl.py:327 - Running time (sec): 3.9386651516
../simple_example_update/circular_list/delete_back,3,4,23,2,7,19,7,1,6,0,3.93
