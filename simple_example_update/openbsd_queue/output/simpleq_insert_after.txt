dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 16 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - lseg(head, listelm) * lseg(listelm, nil) & True
dynsl.py:227 - lseg(head, listelm) * ll(listelm) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 16:
dynsl.py:239 - lseg(head, listelm) * lseg(listelm, elm) * ll(lenn) * lseg(elm, lenn) & head=res
dynsl.py:239 - lseg(head, listelm) * listelm:node->node{elm, nil} * ll(lenn) * lseg(elm, lenn) & head=res
dynsl.py:239 - lseg(head, listelm) * lseg(listelm, elm) * ll(lenn) * elm:node->node{lenn, nil} & head=res
dynsl.py:239 - lseg(head, listelm) * listelm:node->node{elm, nil} * lseg(lenn, nil) * elm:node->node{lenn, nil} & head=res
dynsl.py:239 - lseg(head, listelm) * lseg(listelm, elm) * lseg(lenn, nil) * elm:node->node{lenn, nil} & head=res
dynsl.py:239 - lseg(head, listelm) * lseg(listelm, elm) * lseg(lenn, nil) * lseg(elm, lenn) & head=res
dynsl.py:239 - lseg(head, listelm) * listelm:node->node{elm, nil} * ll(lenn) * elm:node->node{lenn, nil} & head=res
dynsl.py:239 - lseg(head, listelm) * listelm:node->node{elm, nil} * lseg(lenn, nil) * lseg(elm, lenn) & head=res
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 2
dynsl.py:281 - Number of traces: 2
dynsl.py:282 - Number of pre-defined predicates: 2
dynsl.py:283 - Number of inferred assertions: 10
dynsl.py:284 - Number of free variables: 44
dynsl.py:285 - Number of atomic singleton predicates: 8
dynsl.py:286 - Number of atomic inductive predicates: 28
dynsl.py:287 - Number of pure constraints: 8
dynsl.py:288 - Number of total invs: 10
dynsl.py:289 - Number of pres:2
dynsl.py:290 - Number of post:8
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 3.4383699894
../simple_example_update/openbsd_queue/simpleq_insert_after,2,2,10,44,8,28,8,10,2,8,0,3.43
