dynsl.py:201 - Inferring pre-conditions at the location 9 ...

dynsl.py:201 - Inferring inv-conditions at the location 18 ...

dynsl.py:201 - Inferring post-conditions at the location 38 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 9:
dynsl.py:261 - lseg(l2, nil) * list(l1) 
dynsl.py:261 - list(l2) * lseg(l1, nil) 
dynsl.py:261 - lseg(l2, nil) * lseg(l1, nil) 
dynsl.py:261 - list(l2) * list(l1) 
dynsl.py:268 - Postconditions at location 38:
dynsl.py:273 -  list:node->node{fv3, fv2} * lseg(l, fv1) * lseg(l2, nil) * list(l1) * lseg(y, fv0) 
dynsl.py:273 -  list:node->node{fv3, fv2} * lseg(l, fv1) * lseg(l2, list_next) * list(l1) * lseg(y, fv0) 
dynsl.py:273 -  lseg(list, fv2) * lseg(l, fv1) * list(l2) * list(l1) * lseg(y, fv0) 
dynsl.py:273 -  lseg(list, fv2) * lseg(l, fv1) * lseg(l2, nil) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:273 -  list:node->node{fv3, fv2} * lseg(l, fv1) * lseg(l2, list_next) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:273 -  list:node->node{fv3, fv2} * lseg(l, fv1) * lseg(l2, nil) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:273 -  list:node->node{fv3, fv2} * lseg(l, fv1) * lseg(l2, list_next) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:273 -  lseg(list, fv2) * lseg(l, fv1) * lseg(l2, list_next) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:273 -  lseg(list, fv2) * lseg(l, fv1) * lseg(l2, nil) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:273 -  list:node->node{fv3, fv2} * lseg(l, fv1) * list(l2) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:273 -  lseg(list, fv2) * lseg(l, fv1) * list(l2) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:273 -  lseg(list, fv2) * lseg(l, fv1) * lseg(l2, list_next) * list(l1) * lseg(y, fv0) 
dynsl.py:273 -  lseg(list, fv2) * lseg(l, fv1) * lseg(l2, list_next) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:273 -  list:node->node{fv3, fv2} * lseg(l, fv1) * lseg(l2, nil) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:273 -  list:node->node{fv3, fv2} * lseg(l, fv1) * list(l2) * list(l1) * lseg(y, fv0) 
dynsl.py:273 -  lseg(list, fv2) * lseg(l, fv1) * lseg(l2, nil) * list(l1) * lseg(y, fv0) 
dynsl.py:273 -  list:node->node{fv3, fv2} * lseg(l, fv1) * list(l2) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:273 -  lseg(list, fv2) * lseg(l, fv1) * list(l2) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:280 - Invariants at location 18:
dynsl.py:288 -  lseg(list, y) * lseg(l, fv1) * lseg(l2, list_next) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:288 -  lseg(list, y) * lseg(l, fv1) * lseg(l2, list_next) * list(l1) * lseg(y, fv0) 
dynsl.py:288 -  lseg(list, y) * lseg(l, fv1) * lseg(l2, list_next) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:288 -  lseg(list, y) * lseg(l, fv1) * list(l2) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:288 -  lseg(list, y) * lseg(l, fv1) * list(l2) * list(l1) * lseg(y, fv0) 
dynsl.py:288 -  lseg(list, y) * lseg(l, fv1) * list(l2) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:288 -  lseg(list, y) * lseg(l, fv1) * lseg(l2, nil) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:288 -  lseg(list, y) * lseg(l, fv1) * lseg(l2, nil) * list(l1) * lseg(y, fv0) 
dynsl.py:288 -  lseg(list, y) * lseg(l, fv1) * lseg(l2, nil) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:288 -  list:node->node{fv2, y} * lseg(l, fv1) * lseg(l2, list_next) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:288 -  list:node->node{fv2, y} * lseg(l, fv1) * lseg(l2, list_next) * list(l1) * lseg(y, fv0) 
dynsl.py:288 -  list:node->node{fv2, y} * lseg(l, fv1) * lseg(l2, list_next) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:288 -  list:node->node{fv2, y} * lseg(l, fv1) * list(l2) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:288 -  list:node->node{fv2, y} * lseg(l, fv1) * list(l2) * list(l1) * lseg(y, fv0) 
dynsl.py:288 -  list:node->node{fv2, y} * lseg(l, fv1) * list(l2) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:288 -  list:node->node{fv2, y} * lseg(l, fv1) * lseg(l2, nil) * lseg(l1, list_next) * lseg(y, fv0) 
dynsl.py:288 -  list:node->node{fv2, y} * lseg(l, fv1) * lseg(l2, nil) * list(l1) * lseg(y, fv0) 
dynsl.py:288 -  list:node->node{fv2, y} * lseg(l, fv1) * lseg(l2, nil) * lseg(l1, nil) * lseg(y, fv0) 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 3
dynsl.py:316 - Number of traces: 27
dynsl.py:317 - Number of pre-defined predicates: 2
dynsl.py:319 - Number of free variables: 269
dynsl.py:320 - Number of atomic singleton predicates: 18
dynsl.py:321 - Number of atomic inductive predicates: 170
dynsl.py:322 - Number of pure constraints: 72
dynsl.py:323 - Number of total invs: 40
dynsl.py:324 - Number of pres:4
dynsl.py:325 - Number of post:18
dynsl.py:326 - Number of loop:18
dynsl.py:327 - Running time (sec): 650.290003061
../simple_example_update/glib_gslist/g_slist_sort_merge,3,27,269,18,170,72,40,4,18,18,650.
