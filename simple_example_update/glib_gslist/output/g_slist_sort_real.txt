dynsl.py:167 - Inferring inv-conditions at the location 28 ...

dynsl.py:167 - Inferring post-conditions at the location 18 ...

dynsl.py:167 - Inferring pre-conditions at the location 12 ...

dynsl.py:167 - Inferring post-conditions at the location 14 ...

dynsl.py:167 - Inferring post-conditions at the location 46 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 12:
dynsl.py:227 - list(list) & True
dynsl.py:227 - lseg(list, nil) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 18:
dynsl.py:239 - (exists fv0, fv1, fv2. lseg(l2, fv0) * lseg(list, nil) * lseg(l2_next, fv1) * lseg(l1, fv2) & fv0=fv2 & list=res)
dynsl.py:239 - (exists fv0, fv1, fv2. lseg(l2, fv0) * list(list) * lseg(l2_next, fv1) * lseg(l1, fv2) & fv0=fv2 & list=res)
dynsl.py:239 - (exists fv0, fv1, fv2. lseg(l2, fv0) * list:node->node{fv4, fv5} * lseg(l2_next, fv1) * lseg(l1, fv2) & fv0=fv2 & fv5=nil & list=res)
dynsl.py:234 - Postconditions at location 46:
dynsl.py:239 - (exists fv0. lseg(list, fv0) * lseg(t2, l2_next) * lseg(l2, t2) * lseg(l1, t1) & l2_next=ret & l2_next=nil & l2_next=res & ret=nil & ret=res & nil=res)
dynsl.py:239 - (exists fv0. lseg(list, fv0) * lseg(t2, ret) * lseg(l2, t2) * lseg(l1, t1) & l2_next=ret & l2_next=nil & l2_next=res & ret=nil & ret=res & nil=res)
dynsl.py:239 - (exists fv0. lseg(list, fv0) * list(t2) * lseg(l2, t2) * lseg(l1, t1) & l2_next=ret & l2_next=nil & l2_next=res & ret=nil & ret=res & nil=res)
dynsl.py:239 - (exists fv0. lseg(list, fv0) * lseg(t2, nil) * lseg(l2, t2) * lseg(l1, t1) & l2_next=ret & l2_next=nil & l2_next=res & ret=nil & ret=res & nil=res)
dynsl.py:234 - Postconditions at location 14:
dynsl.py:239 - lseg(l2, list) * lseg(l1, nil) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, l2_next) * lseg(l1, nil) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - list(l2) * lseg(l1, list) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, l2_next) * l1:node->node{fv0, list} & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, nil) * list(l1) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - list(l2) * l1:node->node{fv0, list} & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, l2_next) * list(l1) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, list) * lseg(l1, l2_next) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, nil) * lseg(l1, list) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, l2_next) * lseg(l1, list) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, list) * lseg(l1, list) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - list(l2) * lseg(l1, l2_next) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, list) * l1:node->node{fv0, list} & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, l2_next) * lseg(l1, l2_next) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, nil) * l1:node->node{fv0, list} & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, list) * list(l1) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - list(l2) * list(l1) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, nil) * lseg(l1, l2_next) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - lseg(l2, nil) * lseg(l1, nil) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:239 - list(l2) * lseg(l1, nil) & list=l2_next & list=nil & list=res & l2_next=nil & l2_next=res & nil=res
dynsl.py:246 - Invariants at location 28:
dynsl.py:253 - lseg(l2, l2_next) * lseg(list, l1) * lseg(l2_next, nil) * lseg(l1, l2) & True
dynsl.py:253 - lseg(l2, l2_next) * lseg(list, l1) * list(l2_next) * lseg(l1, l2) & True
dynsl.py:253 - l2:node->node{fv!53, l2_next} * lseg(list, l1) * lseg(l2_next, nil) * lseg(l1, l2) & True
dynsl.py:253 - l2:node->node{fv!53, l2_next} * lseg(list, l1) * list(l2_next) * lseg(l1, l2) & True
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 5
dynsl.py:281 - Number of traces: 52
dynsl.py:282 - Number of pre-defined predicates: 2
dynsl.py:283 - Number of inferred assertions: 69
dynsl.py:284 - Number of free variables: 273
dynsl.py:285 - Number of atomic singleton predicates: 21
dynsl.py:286 - Number of atomic inductive predicates: 101
dynsl.py:287 - Number of pure constraints: 247
dynsl.py:288 - Number of total invs: 33
dynsl.py:289 - Number of pres:2
dynsl.py:290 - Number of post:27
dynsl.py:291 - Number of loop:4
dynsl.py:292 - Running time (sec): 114.761105061
../simple_example_update/glib_gslist/g_slist_sort_real,5,52,69,273,21,101,247,33,2,27,4,114.
