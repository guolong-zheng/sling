dynsl.py:221 - Inferring post-conditions at the location 18 ...

dynsl.py:221 - Inferring pre-conditions at the location 11 ...

dynsl.py:221 - Inferring post-conditions at the location 21 ...

dynsl.py:271 - ==============================
dynsl.py:272 - Precondition at location 11:
dynsl.py:281 - list(list) 
dynsl.py:281 - lseg(list, nil) 
dynsl.py:288 - Postconditions at location 18:
dynsl.py:293 - lseg(new_list, nil) * lseg(list, last) * last:node->node{fv0, new_list} 
dynsl.py:293 - new_list:node->node{fv1, nil} * lseg(list, last) * last:node->node{fv0, new_list} 
dynsl.py:293 - list(new_list) * lseg(list, last) * last:node->node{fv0, new_list} 
dynsl.py:293 - list(new_list) * lseg(list, last) * lseg(last, new_list) 
dynsl.py:293 - lseg(new_list, nil) * lseg(list, last) * lseg(last, new_list) 
dynsl.py:293 - new_list:node->node{fv0, nil} * lseg(list, last) * lseg(last, new_list) 
dynsl.py:288 - Postconditions at location 21:
dynsl.py:293 - new_list:node->node{list, list}  & new_list = res
dynsl.py:293 - lseg(new_list, nil)  & new_list = res
dynsl.py:293 - list(new_list)  & new_list = res
dynsl.py:293 - lseg(new_list, list)  & new_list = res
dynsl.py:312 - ==============================
dynsl.py:336 - Number of locations: 3
dynsl.py:337 - Number of traces: 4
dynsl.py:338 - Number of pre-defined predicates: 2
dynsl.py:340 - Number of free variables: 5
dynsl.py:341 - Number of atomic singleton predicates: 6
dynsl.py:342 - Number of atomic inductive predicates: 18
dynsl.py:343 - Number of pure constraints: 4
dynsl.py:344 - Number of total invs: 12
dynsl.py:345 - Number of pres:2
dynsl.py:346 - Number of post:10
dynsl.py:347 - Number of loop:0
dynsl.py:348 - Running time (sec): 3.52166891098
../simple_example_update/glib_gslist/g_slist_append,3,4,5,6,18,4,12,2,10,0,3.52
