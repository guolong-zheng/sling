dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 17 ...

dynsl.py:167 - Inferring inv-conditions at the location 23 ...

dynsl.py:167 - Inferring post-conditions at the location 45 ...

dynsl.py:167 - Inferring post-conditions at the location 33 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - list(list) & True
dynsl.py:227 - lseg(list, nil) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 17:
dynsl.py:239 - lseg(new_list, nil) & new_list=res & tmp_list=list & tmp_list=prev_list & tmp_list=nil & list=prev_list & list=nil & prev_list=nil
dynsl.py:239 - lseg(new_list, tmp_list) & new_list=res & tmp_list=list & tmp_list=prev_list & tmp_list=nil & list=prev_list & list=nil & prev_list=nil
dynsl.py:239 - new_list:node->node{fv0, tmp_list} & fv0=tmp_list & fv0=list & fv0=prev_list & fv0=nil & new_list=res & tmp_list=list & tmp_list=prev_list & tmp_list=nil & list=prev_list & list=nil & prev_list=nil
dynsl.py:239 - lseg(new_list, list) & new_list=res & tmp_list=list & tmp_list=prev_list & tmp_list=nil & list=prev_list & list=nil & prev_list=nil
dynsl.py:239 - list(new_list) & new_list=res & tmp_list=list & tmp_list=prev_list & tmp_list=nil & list=prev_list & list=nil & prev_list=nil
dynsl.py:239 - lseg(new_list, prev_list) & new_list=res & tmp_list=list & tmp_list=prev_list & tmp_list=nil & list=prev_list & list=nil & prev_list=nil
dynsl.py:234 - Postconditions at location 45:
dynsl.py:239 - new_list:node->node{fv0, tmp_list} * list(tmp_list) & new_list=res & tmp_list=list & prev_list=nil
dynsl.py:239 - lseg(new_list, list) * list(tmp_list) & new_list=res & tmp_list=list & prev_list=nil
dynsl.py:239 - lseg(new_list, tmp_list) * lseg(tmp_list, nil) & new_list=res & tmp_list=list & prev_list=nil
dynsl.py:239 - lseg(new_list, tmp_list) * list(tmp_list) & new_list=res & tmp_list=list & prev_list=nil
dynsl.py:239 - lseg(new_list, list) * lseg(tmp_list, nil) & new_list=res & tmp_list=list & prev_list=nil
dynsl.py:239 - lseg(new_list, list) * lseg(tmp_list, prev_list) & new_list=res & tmp_list=list & prev_list=nil
dynsl.py:239 - lseg(new_list, tmp_list) * lseg(tmp_list, prev_list) & new_list=res & tmp_list=list & prev_list=nil
dynsl.py:239 - new_list:node->node{fv0, tmp_list} * lseg(tmp_list, prev_list) & new_list=res & tmp_list=list & prev_list=nil
dynsl.py:239 - new_list:node->node{fv0, tmp_list} * lseg(tmp_list, nil) & new_list=res & tmp_list=list & prev_list=nil
dynsl.py:234 - Postconditions at location 33:
dynsl.py:239 - list(new_list) * lseg(tmp_list, new_list) * lseg(list, prev_list) * lseg(prev_list, tmp_list) & list=res
dynsl.py:239 - list(new_list) * lseg(tmp_list, new_list) * lseg(list, prev_list) * prev_list:node->node{fv0, tmp_list} & list=res
dynsl.py:239 - new_list:node->node{fv0, nil} * lseg(tmp_list, new_list) * lseg(list, prev_list) * lseg(prev_list, tmp_list) & list=res
dynsl.py:239 - new_list:node->node{fv0, nil} * tmp_list:node->node{fv1, new_list} * lseg(list, prev_list) * lseg(prev_list, tmp_list) & list=res
dynsl.py:239 - new_list:node->node{fv0, nil} * tmp_list:node->node{fv1, new_list} * lseg(list, prev_list) * prev_list:node->node{fv2, tmp_list} & list=res
dynsl.py:239 - lseg(new_list, nil) * lseg(tmp_list, new_list) * lseg(list, prev_list) * prev_list:node->node{fv0, tmp_list} & list=res
dynsl.py:239 - list(new_list) * tmp_list:node->node{fv0, new_list} * lseg(list, prev_list) * prev_list:node->node{fv1, tmp_list} & list=res
dynsl.py:239 - list(new_list) * tmp_list:node->node{fv0, new_list} * lseg(list, prev_list) * lseg(prev_list, tmp_list) & list=res
dynsl.py:239 - lseg(new_list, nil) * tmp_list:node->node{fv0, new_list} * lseg(list, prev_list) * prev_list:node->node{fv1, tmp_list} & list=res
dynsl.py:239 - lseg(new_list, nil) * tmp_list:node->node{fv0, new_list} * lseg(list, prev_list) * lseg(prev_list, tmp_list) & list=res
dynsl.py:239 - new_list:node->node{fv0, nil} * lseg(tmp_list, new_list) * lseg(list, prev_list) * prev_list:node->node{fv1, tmp_list} & list=res
dynsl.py:239 - lseg(new_list, nil) * lseg(tmp_list, new_list) * lseg(list, prev_list) * lseg(prev_list, tmp_list) & list=res
dynsl.py:246 - Invariants at location 23:
dynsl.py:253 - (exists fv!685, fv!764. lseg(tmp_list, new_list) * lseg(list, fv!685) * lseg(prev_list, fv!764) & new_list=nil)
dynsl.py:253 - (exists fv!801, fv!880. list(tmp_list) * lseg(list, fv!801) * lseg(prev_list, fv!880) & new_list=nil)
dynsl.py:253 - (exists fv!917, fv!996. lseg(tmp_list, nil) * lseg(list, fv!917) * lseg(prev_list, fv!996) & new_list=nil)
dynsl.py:253 - (exists fv!1033, fv!1112. list(tmp_list) * lseg(list, fv!1033) * lseg(prev_list, fv!1112) & new_list=nil)
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 5
dynsl.py:281 - Number of traces: 17
dynsl.py:282 - Number of pre-defined predicates: 2
dynsl.py:283 - Number of inferred assertions: 62
dynsl.py:284 - Number of free variables: 269
dynsl.py:285 - Number of atomic singleton predicates: 36
dynsl.py:286 - Number of atomic inductive predicates: 79
dynsl.py:287 - Number of pure constraints: 161
dynsl.py:288 - Number of total invs: 33
dynsl.py:289 - Number of pres:2
dynsl.py:290 - Number of post:27
dynsl.py:291 - Number of loop:4
dynsl.py:292 - Running time (sec): 40.623390913
../simple_example_update/glib_gslist/g_slist_insert_sorted,5,17,62,269,36,79,161,33,2,27,4,40.6
