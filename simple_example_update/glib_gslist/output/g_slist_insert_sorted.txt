dynsl.py:201 - Inferring pre-conditions at the location 8 ...

dynsl.py:201 - Inferring post-conditions at the location 17 ...

dynsl.py:201 - Inferring inv-conditions at the location 23 ...

dynsl.py:201 - Inferring post-conditions at the location 45 ...

dynsl.py:201 - Inferring post-conditions at the location 33 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 8:
dynsl.py:261 - list(list) 
dynsl.py:261 - lseg(list, nil) 
dynsl.py:268 - Postconditions at location 17:
dynsl.py:273 - lseg(new_list, list) 
dynsl.py:273 - lseg(new_list, tmp_list) 
dynsl.py:273 - lseg(new_list, prev_list) 
dynsl.py:273 - list(new_list) 
dynsl.py:273 - lseg(new_list, nil) 
dynsl.py:273 - new_list:node->node{tmp_list, tmp_list} 
dynsl.py:268 - Postconditions at location 45:
dynsl.py:273 - lseg(new_list, list) * lseg(tmp_list, prev_list) 
dynsl.py:273 - new_list:node->node{fv0, tmp_list} * lseg(tmp_list, nil) 
dynsl.py:273 - new_list:node->node{fv0, tmp_list} * lseg(tmp_list, prev_list) 
dynsl.py:273 - lseg(new_list, list) * lseg(tmp_list, nil) 
dynsl.py:273 - lseg(new_list, tmp_list) * list(tmp_list) 
dynsl.py:273 - lseg(new_list, list) * list(tmp_list) 
dynsl.py:273 - lseg(new_list, tmp_list) * lseg(tmp_list, prev_list) 
dynsl.py:273 - lseg(new_list, tmp_list) * lseg(tmp_list, nil) 
dynsl.py:273 - new_list:node->node{fv0, tmp_list} * list(tmp_list) 
dynsl.py:268 - Postconditions at location 33:
dynsl.py:273 - lseg(new_list, nil) * tmp_list:node->node{fv0, new_list} * lseg(list, prev_list) * lseg(prev_list, tmp_list) 
dynsl.py:273 - lseg(new_list, nil) * lseg(tmp_list, new_list) * lseg(list, prev_list) * prev_list:node->node{fv0, tmp_list} 
dynsl.py:273 - new_list:node->node{fv1, nil} * tmp_list:node->node{fv0, new_list} * lseg(list, prev_list) * lseg(prev_list, tmp_list) 
dynsl.py:273 - lseg(new_list, nil) * lseg(tmp_list, new_list) * lseg(list, prev_list) * lseg(prev_list, tmp_list) 
dynsl.py:273 - new_list:node->node{fv0, nil} * lseg(tmp_list, new_list) * lseg(list, prev_list) * lseg(prev_list, tmp_list) 
dynsl.py:273 - list(new_list) * lseg(tmp_list, new_list) * lseg(list, prev_list) * lseg(prev_list, tmp_list) 
dynsl.py:273 - new_list:node->node{fv1, nil} * lseg(tmp_list, new_list) * lseg(list, prev_list) * prev_list:node->node{fv0, tmp_list} 
dynsl.py:273 - new_list:node->node{fv2, nil} * tmp_list:node->node{fv1, new_list} * lseg(list, prev_list) * prev_list:node->node{fv0, tmp_list} 
dynsl.py:273 - lseg(new_list, nil) * tmp_list:node->node{fv1, new_list} * lseg(list, prev_list) * prev_list:node->node{fv0, tmp_list} 
dynsl.py:273 - list(new_list) * tmp_list:node->node{fv1, new_list} * lseg(list, prev_list) * prev_list:node->node{fv0, tmp_list} 
dynsl.py:273 - list(new_list) * tmp_list:node->node{fv0, new_list} * lseg(list, prev_list) * lseg(prev_list, tmp_list) 
dynsl.py:273 - list(new_list) * lseg(tmp_list, new_list) * lseg(list, prev_list) * prev_list:node->node{fv0, tmp_list} 
dynsl.py:280 - Invariants at location 23:
dynsl.py:288 -  lseg(tmp_list, new_list) * lseg(list, fv1) * lseg(prev_list, fv0) 
dynsl.py:288 -  list(tmp_list) * lseg(list, fv1) * lseg(prev_list, fv0) 
dynsl.py:288 -  lseg(tmp_list, nil) * lseg(list, fv1) * lseg(prev_list, fv0) 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 5
dynsl.py:316 - Number of traces: 17
dynsl.py:317 - Number of pre-defined predicates: 2
dynsl.py:319 - Number of free variables: 169
dynsl.py:320 - Number of atomic singleton predicates: 20
dynsl.py:321 - Number of atomic inductive predicates: 63
dynsl.py:322 - Number of pure constraints: 88
dynsl.py:323 - Number of total invs: 32
dynsl.py:324 - Number of pres:2
dynsl.py:325 - Number of post:27
dynsl.py:326 - Number of loop:3
dynsl.py:327 - Running time (sec): 42.9319109917
../simple_example_update/glib_gslist/g_slist_insert_sorted,5,17,169,20,63,88,32,2,27,3,42.9
