dynsl.py:167 - Inferring post-conditions at the location 64 ...

dynsl.py:167 - Inferring post-conditions at the location 68 ...

dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 10 ...

dynsl.py:167 - Inferring post-conditions at the location 55 ...

dynsl.py:167 - Inferring post-conditions at the location 29 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - bh(y) * bh(x) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 64:
dynsl.py:239 - bh(xchld) * bh(y) * x:node->node{fv0, fv1, z, zsib} * z:node->node{fv2, fv3, xs, xchld} & x=res & zsib=nil
dynsl.py:239 - bh(xchld) * y:node->node{fv0, fv1, zsib, zsib} * x:node->node{fv2, fv3, z, zsib} * z:node->node{fv4, fv5, xs, xchld} & x=res & zsib=fv1 & zsib=nil & fv1=nil
dynsl.py:239 - bh(xchld) * y:node->node{fv0, fv1, zsib, zsib} * x:node->node{fv2, fv3, z, zsib} * z:node->node{fv4, fv5, xs, xchld} & x=res & fv1=zsib & fv1=nil & zsib=nil
dynsl.py:239 - bh(xchld) * y:node->node{fv0, fv1, zsib, zsib} * x:node->node{fv2, fv3, z, zsib} * z:node->node{fv4, fv5, xs, xchld} & fv1=zsib & fv1=nil & x=res & zsib=nil
dynsl.py:234 - Postconditions at location 10:
dynsl.py:239 - bh(y) & y=res & x=nil
dynsl.py:234 - Postconditions at location 68:
dynsl.py:239 - bh(y) & x=res
dynsl.py:239 - y:node->node{fv0, fv1, fv2, fv3} & fv1=fv2 & fv1=fv3 & fv1=nil & fv2=fv3 & fv2=nil & fv3=nil & x=res
dynsl.py:234 - Postconditions at location 29:
dynsl.py:239 - y:node->node{fv0, fv1, xs, xs} * x:node->node{fv2, fv3, y, xs} & z=xchld & z=xs & z=ys & z=fv1 & z=nil & xchld=xs & xchld=ys & xchld=fv1 & xchld=nil & xs=ys & xs=fv1 & xs=nil & x=res & ys=fv1 & ys=nil & fv1=nil
dynsl.py:239 - y:node->node{fv0, fv1, xs, xs} * x:node->node{fv2, fv3, y, xs} & xchld=xs & xchld=ys & xchld=z & xchld=fv1 & xchld=nil & xs=ys & xs=z & xs=fv1 & xs=nil & x=res & ys=z & ys=fv1 & ys=nil & z=fv1 & z=nil & fv1=nil
dynsl.py:239 - bh(y) * x:node->node{fv0, fv1, y, xs} & z=xchld & z=xs & z=ys & z=nil & xchld=xs & xchld=ys & xchld=nil & xs=ys & xs=nil & x=res & ys=nil
dynsl.py:239 - bh(y) * x:node->node{fv0, fv1, y, xs} & xchld=xs & xchld=ys & xchld=z & xchld=nil & xs=ys & xs=z & xs=nil & x=res & ys=z & ys=nil & z=nil
dynsl.py:239 - y:node->node{fv0, fv1, xs, xs} * x:node->node{fv2, fv3, y, xs} & xs=xchld & xs=ys & xs=z & xs=fv1 & xs=nil & x=res & xchld=ys & xchld=z & xchld=fv1 & xchld=nil & ys=z & ys=fv1 & ys=nil & z=fv1 & z=nil & fv1=nil
dynsl.py:239 - y:node->node{fv0, fv1, xs, xs} * x:node->node{fv2, fv3, y, xs} & xchld=fv1 & xchld=xs & xchld=ys & xchld=z & xchld=nil & fv1=xs & fv1=ys & fv1=z & fv1=nil & xs=ys & xs=z & xs=nil & x=res & ys=z & ys=nil & z=nil
dynsl.py:239 - y:node->node{fv0, fv1, xs, xs} * x:node->node{fv2, fv3, y, xs} & xchld=xs & xchld=fv1 & xchld=ys & xchld=z & xchld=nil & xs=fv1 & xs=ys & xs=z & xs=nil & fv1=ys & fv1=z & fv1=nil & x=res & ys=z & ys=nil & z=nil
dynsl.py:234 - Postconditions at location 55:
dynsl.py:239 - bh(y) * z:node->node{fv0, fv1, x, nil} & zchld=y & xs=z & xs=res & z=res
dynsl.py:239 - y:node->node{fv0, fv1, nil, nil} * z:node->node{fv2, fv3, x, nil} & zchld=y & fv1=nil & xs=z & xs=res & z=res
dynsl.py:239 - y:node->node{fv0, fv1, nil, nil} * z:node->node{fv2, fv3, x, nil} & zchld=y & xs=z & xs=res & z=res & fv1=nil
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 6
dynsl.py:281 - Number of traces: 50
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 79
dynsl.py:284 - Number of free variables: 779
dynsl.py:285 - Number of atomic singleton predicates: 128
dynsl.py:286 - Number of atomic inductive predicates: 57
dynsl.py:287 - Number of pure constraints: 769
dynsl.py:288 - Number of total invs: 18
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:17
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 69.5899710655
../simple_example_update/binomial_heap/binomial_heap_merge_rec,6,50,79,779,128,57,769,18,1,17,0,69.5
