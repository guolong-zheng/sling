dynsl.py:201 - Inferring post-conditions at the location 39 ...

dynsl.py:201 - Inferring pre-conditions at the location 8 ...

dynsl.py:201 - Inferring post-conditions at the location 45 ...

dynsl.py:201 - Inferring post-conditions at the location 15 ...

dynsl.py:201 - Inferring post-conditions at the location 24 ...

dynsl.py:201 - Inferring post-conditions at the location 30 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 8:
dynsl.py:261 - tree(x) 
dynsl.py:268 - Postconditions at location 24:
dynsl.py:273 - tree(xr) * x:b_node->b_node{tmp, xr, fv1, fv0} * tree(xl) 
dynsl.py:268 - Postconditions at location 15:
dynsl.py:273 - tree(leaf) 
dynsl.py:273 - leaf:b_node->b_node{x, x, fv1, fv0} 
dynsl.py:268 - Postconditions at location 45:
dynsl.py:273 - tree(xr) * x:b_node->b_node{xl, xr, fv3, fv2} * tmp:b_node->b_node{x, xl, fv1, fv0} 
dynsl.py:268 - Postconditions at location 30:
dynsl.py:273 - tree(xr) * x:b_node->b_node{lr, xr, fv3, fv2} * tmp:b_node->b_node{lr, x, fv1, fv0} 
dynsl.py:268 - Postconditions at location 39:
dynsl.py:273 - tree(xr) * x:b_node->b_node{xl, tmp, fv1, fv0} * tree(xl) 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 6
dynsl.py:316 - Number of traces: 30
dynsl.py:317 - Number of pre-defined predicates: 1
dynsl.py:319 - Number of free variables: 43
dynsl.py:320 - Number of atomic singleton predicates: 7
dynsl.py:321 - Number of atomic inductive predicates: 8
dynsl.py:322 - Number of pure constraints: 13
dynsl.py:323 - Number of total invs: 7
dynsl.py:324 - Number of pres:1
dynsl.py:325 - Number of post:6
dynsl.py:326 - Number of loop:0
dynsl.py:327 - Running time (sec): 30.4100551605
../simple_example_update/prio_tree/insert_rec,6,30,43,7,8,13,7,1,6,0,30.4
