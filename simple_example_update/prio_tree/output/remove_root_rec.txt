dynsl.py:167 - Inferring pre-conditions at the location 10 ...

dynsl.py:167 - Inferring post-conditions at the location 36 ...

dynsl.py:167 - Inferring post-conditions at the location 23 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 10:
dynsl.py:227 - tree(x) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 36:
dynsl.py:239 - tmp:b_node->b_node{left_left, right_left, fv0, fv1} * right:b_node->b_node{tmp, right_right, fv2, fv3} * tree(right_right) * tree(left_left) * x:b_node->b_node{right_left, right_left, fv03, fv04} & right_left=left_right & right_left=nil & tmp=left & right=res & left_right=nil
dynsl.py:239 - tmp:b_node->b_node{left_left, right_left, fv0, fv1} * right:b_node->b_node{tmp, right_right, fv2, fv3} * tree(right_right) * tree(left_left) * x:b_node->b_node{right_left, right_left, fv17, fv18} & right_left=left_right & right_left=nil & tmp=left & right=res & left_right=nil
dynsl.py:239 - tmp:b_node->b_node{left_left, right_left, fv0, fv1} * right:b_node->b_node{tmp, right_right, fv2, fv3} * tree(right_right) * tree(left_left) * tree(x) & right_left=left_right & right_left=nil & tmp=left & right=res & left_right=nil
dynsl.py:239 - tmp:b_node->b_node{left_left, right_left, fv0, fv1} * right:b_node->b_node{tmp, right_right, fv2, fv3} * tree(right_right) * tree(left_left) * x:b_node->b_node{right_left, right_left, fv4, fv5} & right_left=left_right & right_left=nil & tmp=left & right=res & left_right=nil
dynsl.py:234 - Postconditions at location 23:
dynsl.py:239 - tree(x) * tree(left) & left=res
dynsl.py:239 - x:b_node->b_node{nil, nil, fv0, fv1} * tree(left) & left=res
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 3
dynsl.py:281 - Number of traces: 4
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 651
dynsl.py:284 - Number of free variables: 9081
dynsl.py:285 - Number of atomic singleton predicates: 1621
dynsl.py:286 - Number of atomic inductive predicates: 1624
dynsl.py:287 - Number of pure constraints: 3242
dynsl.py:288 - Number of total invs: 7
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:6
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 869.321361065
../simple_example_update/prio_tree/remove_root_rec,3,4,651,9081,1621,1624,3242,7,1,6,0,869.
