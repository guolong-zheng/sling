dynsl.py:221 - Inferring pre-conditions at the location 10 ...

dynsl.py:221 - Inferring post-conditions at the location 12 ...

dynsl.py:221 - Inferring post-conditions at the location 23 ...

dynsl.py:271 - ==============================
dynsl.py:272 - Precondition at location 10:
dynsl.py:281 - tree(x) 
dynsl.py:288 - Postconditions at location 12:
dynsl.py:293 - x=nil  & x = nil & re = nil & x = res
dynsl.py:288 - Postconditions at location 23:
dynsl.py:293 - tree(xr) * x:b_node->b_node{l, xr, fv1, fv0} * tree(l) 
dynsl.py:312 - ==============================
dynsl.py:336 - Number of locations: 3
dynsl.py:337 - Number of traces: 8
dynsl.py:338 - Number of pre-defined predicates: 1
dynsl.py:340 - Number of free variables: 2
dynsl.py:341 - Number of atomic singleton predicates: 1
dynsl.py:342 - Number of atomic inductive predicates: 3
dynsl.py:343 - Number of pure constraints: 3
dynsl.py:344 - Number of total invs: 3
dynsl.py:345 - Number of pres:1
dynsl.py:346 - Number of post:2
dynsl.py:347 - Number of loop:0
dynsl.py:348 - Running time (sec): 3.34570908546
../simple_example_update/prio_tree/delete_rec,3,8,2,1,3,3,3,1,2,0,3.34
