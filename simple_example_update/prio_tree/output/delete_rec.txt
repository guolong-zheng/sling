dynsl.py:167 - Inferring pre-conditions at the location 10 ...

dynsl.py:167 - Inferring post-conditions at the location 12 ...

dynsl.py:167 - Inferring post-conditions at the location 23 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 10:
dynsl.py:227 - tree(x) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 12:
dynsl.py:239 - x=nil & x=res & nil=res
dynsl.py:234 - Postconditions at location 23:
dynsl.py:239 - tree(xr) * x:b_node->b_node{l, xr, fv0, fv1} * tree(l) & xl=l & x=res
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 3
dynsl.py:281 - Number of traces: 8
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 4
dynsl.py:284 - Number of free variables: 17
dynsl.py:285 - Number of atomic singleton predicates: 2
dynsl.py:286 - Number of atomic inductive predicates: 5
dynsl.py:287 - Number of pure constraints: 7
dynsl.py:288 - Number of total invs: 3
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:2
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 3.37905693054
../simple_example_update/prio_tree/delete_rec,3,8,4,17,2,5,7,3,1,2,0,3.37
