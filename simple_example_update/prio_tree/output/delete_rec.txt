dynsl.py:201 - Inferring pre-conditions at the location 10 ...

dynsl.py:201 - Inferring post-conditions at the location 12 ...

dynsl.py:201 - Inferring post-conditions at the location 23 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 10:
dynsl.py:261 - tree(x) 
dynsl.py:268 - Postconditions at location 12:
dynsl.py:273 - x=nil 
dynsl.py:268 - Postconditions at location 23:
dynsl.py:273 - tree(xr) * x:b_node->b_node{l, xr, fv1, fv0} * tree(l) 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 3
dynsl.py:316 - Number of traces: 8
dynsl.py:317 - Number of pre-defined predicates: 1
dynsl.py:319 - Number of free variables: 10
dynsl.py:320 - Number of atomic singleton predicates: 1
dynsl.py:321 - Number of atomic inductive predicates: 3
dynsl.py:322 - Number of pure constraints: 5
dynsl.py:323 - Number of total invs: 3
dynsl.py:324 - Number of pres:1
dynsl.py:325 - Number of post:2
dynsl.py:326 - Number of loop:0
dynsl.py:327 - Running time (sec): 3.15845608711
../simple_example_update/prio_tree/delete_rec,3,8,10,1,3,5,3,1,2,0,3.15
