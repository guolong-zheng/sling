dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 24 ...

dynsl.py:167 - Inferring post-conditions at the location 10 ...

dynsl.py:167 - Inferring inv-conditions at the location 17 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - ll(lst) * ll(elt) & True
dynsl.py:227 - ls(lst, nil) * ls(elt, nil) & True
dynsl.py:227 - ls(lst, nil) * ll(elt) & True
dynsl.py:227 - ll(lst) * ls(elt, nil) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 24:
dynsl.py:239 - ls(curr_next, nil) * ls(lst, curr) * curr:node->node{elt} * ls(elt, curr_next) & lst=res
dynsl.py:239 - ls(curr_next, nil) * ls(lst, curr) * curr:node->node{elt} * elt:node->node{curr_next} & lst=res
dynsl.py:239 - ll(curr_next) * ls(lst, curr) * ls(curr, elt) * elt:node->node{curr_next} & lst=res
dynsl.py:239 - ll(curr_next) * ls(lst, curr) * ls(curr, elt) * ls(elt, curr_next) & lst=res
dynsl.py:239 - ll(curr_next) * ls(lst, curr) * curr:node->node{elt} * elt:node->node{curr_next} & lst=res
dynsl.py:239 - ls(curr_next, nil) * ls(lst, curr) * ls(curr, elt) * elt:node->node{curr_next} & lst=res
dynsl.py:239 - ls(curr_next, nil) * ls(lst, curr) * ls(curr, elt) * ls(elt, curr_next) & lst=res
dynsl.py:239 - ll(curr_next) * ls(lst, curr) * curr:node->node{elt} * ls(elt, curr_next) & lst=res
dynsl.py:234 - Postconditions at location 10:
dynsl.py:239 - ls(elt, lst) & lst=nil & elt=res
dynsl.py:239 - ll(elt) & lst=nil & elt=res
dynsl.py:239 - ls(elt, nil) & lst=nil & elt=res
dynsl.py:246 - Invariants at location 17:
dynsl.py:253 - ls(lst, curr) * ls(curr, curr_next) * ls(elt, curr_next) & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ls(curr, curr_next) * ll(elt) & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ls(curr, curr_next) * elt:node->node{curr_next} & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ls(curr, curr_next) * ls(elt, nil) & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ll(curr) * ls(elt, curr_next) & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ll(curr) * ll(elt) & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ll(curr) * elt:node->node{curr_next} & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ll(curr) * ls(elt, nil) & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ls(curr, nil) * ls(elt, curr_next) & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ls(curr, nil) * ll(elt) & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ls(curr, nil) * elt:node->node{curr_next} & curr_next=nil
dynsl.py:253 - ls(lst, curr) * ls(curr, nil) * ls(elt, nil) & curr_next=nil
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 4
dynsl.py:281 - Number of traces: 7
dynsl.py:282 - Number of pre-defined predicates: 2
dynsl.py:283 - Number of inferred assertions: 40
dynsl.py:284 - Number of free variables: 105
dynsl.py:285 - Number of atomic singleton predicates: 11
dynsl.py:286 - Number of atomic inductive predicates: 68
dynsl.py:287 - Number of pure constraints: 26
dynsl.py:288 - Number of total invs: 27
dynsl.py:289 - Number of pres:4
dynsl.py:290 - Number of post:11
dynsl.py:291 - Number of loop:12
dynsl.py:292 - Running time (sec): 10.3212099075
../simple_example_update/GRASShopper/sl/sl_insert,4,7,40,105,11,68,26,27,4,11,12,10.3
