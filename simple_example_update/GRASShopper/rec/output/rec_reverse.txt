dynsl.py:167 - Inferring post-conditions at the location 19 ...

dynsl.py:167 - Inferring pre-conditions at the location 11 ...

dynsl.py:167 - Inferring post-conditions at the location 13 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 11:
dynsl.py:227 - ls(rev, nil) * ls(curr, nil) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 19:
dynsl.py:239 - (exists fv0, fv1. ls(tmp, fv0) * ls(rev, nil) * ls(curr, rev) * ls(ret, fv1) & ret=res)
dynsl.py:239 - (exists fv0, fv1. ls(tmp, fv0) * ls(rev, nil) * curr:node->node{rev} * ls(ret, fv1) & ret=res)
dynsl.py:234 - Postconditions at location 13:
dynsl.py:239 - ls(rev, nil) & curr=nil & rev=res
dynsl.py:239 - ls(rev, curr) & curr=nil & rev=res
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 3
dynsl.py:281 - Number of traces: 24
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 5
dynsl.py:284 - Number of free variables: 18
dynsl.py:285 - Number of atomic singleton predicates: 1
dynsl.py:286 - Number of atomic inductive predicates: 11
dynsl.py:287 - Number of pure constraints: 6
dynsl.py:288 - Number of total invs: 5
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:4
dynsl.py:291 - Number of loop:0
dynsl.py:292 - Running time (sec): 7.09588384628
../simple_example_update/GRASShopper/rec/rec_reverse,3,24,5,18,1,11,6,5,1,4,0,7.09
