dynsl.py:201 - Inferring pre-conditions at the location 8 ...

dynsl.py:201 - Inferring post-conditions at the location 33 ...

dynsl.py:201 - Inferring post-conditions at the location 11 ...

dynsl.py:201 - Inferring inv-conditions at the location 24 ...

dynsl.py:251 - ==============================
dynsl.py:252 - Precondition at location 8:
dynsl.py:261 - ls(lst, nil) 
dynsl.py:268 - Postconditions at location 33:
dynsl.py:273 - ls(old_cp, cp) * ls(lst, curr) * cp:node->node{fv0, nil} * ls(curr, nil) * ls(head, old_cp) 
dynsl.py:273 - ls(old_cp, cp) * ls(lst, curr) * ls(cp, nil) * curr:node->node{fv0, nil} * ls(head, old_cp) 
dynsl.py:273 - old_cp:node->node{fv1, cp} * ls(lst, curr) * cp:node->node{fv0, nil} * ls(curr, nil) * ls(head, old_cp) 
dynsl.py:273 - old_cp:node->node{fv1, cp} * ls(lst, curr) * ls(cp, nil) * curr:node->node{fv0, nil} * ls(head, old_cp) 
dynsl.py:273 - old_cp:node->node{fv2, cp} * ls(lst, curr) * cp:node->node{fv1, nil} * curr:node->node{fv0, nil} * ls(head, old_cp) 
dynsl.py:273 - old_cp:node->node{fv0, cp} * ls(lst, curr) * ls(cp, nil) * ls(curr, nil) * ls(head, old_cp) 
dynsl.py:273 - ls(old_cp, cp) * ls(lst, curr) * cp:node->node{fv1, nil} * curr:node->node{fv0, nil} * ls(head, old_cp) 
dynsl.py:273 - ls(old_cp, cp) * ls(lst, curr) * ls(cp, nil) * ls(curr, nil) * ls(head, old_cp) 
dynsl.py:268 - Postconditions at location 11:
dynsl.py:273 - ls(old_cp, cp) * ls(cp, lst) * ls(curr, lst) 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, nil) * curr:node->node{fv0, lst} 
dynsl.py:273 - ls(old_cp, cp) * cp:node->node{fv0, lst} * ls(curr, head) 
dynsl.py:273 - old_cp:node->node{fv1, cp} * ls(cp, nil) * curr:node->node{fv0, lst} 
dynsl.py:273 - old_cp:node->node{fv1, cp} * cp:node->node{fv0, lst} * ls(curr, lst) 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, nil) * ls(curr, lst) 
dynsl.py:273 - old_cp:node->node{fv1, cp} * cp:node->node{fv0, lst} * ls(curr, nil) 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, head) * curr:node->node{fv0, lst} 
dynsl.py:273 - ls(old_cp, cp) * cp:node->node{fv0, lst} * curr:node->node{fv0, lst} 
dynsl.py:273 - old_cp:node->node{fv0, cp} * ls(cp, lst) * ls(curr, lst) 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, nil) * ls(curr, nil) 
dynsl.py:273 - old_cp:node->node{fv0, cp} * ls(cp, head) * ls(curr, nil) 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, lst) * ls(curr, nil) 
dynsl.py:273 - old_cp:node->node{fv0, cp} * ls(cp, lst) * ls(curr, nil) 
dynsl.py:273 - old_cp:node->node{fv0, cp} * ls(cp, head) * ls(curr, head) 
dynsl.py:273 - old_cp:node->node{fv0, cp} * ls(cp, nil) * ls(curr, lst) 
dynsl.py:273 - old_cp:node->node{fv0, cp} * ls(cp, lst) * ls(curr, head) 
dynsl.py:273 - old_cp:node->node{fv1, cp} * ls(cp, lst) * curr:node->node{fv0, lst} 
dynsl.py:273 - ls(old_cp, cp) * cp:node->node{fv0, lst} * ls(curr, lst) 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, head) * ls(curr, lst) 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, lst) * ls(curr, head) 
dynsl.py:273 - old_cp:node->node{fv0, cp} * ls(cp, head) * ls(curr, lst) 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, lst) * curr:node->node{fv0, lst} 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, head) * ls(curr, nil) 
dynsl.py:273 - old_cp:node->node{fv1, cp} * ls(cp, head) * curr:node->node{fv0, lst} 
dynsl.py:273 - old_cp:node->node{fv1, cp} * cp:node->node{fv0, lst} * ls(curr, head) 
dynsl.py:273 - old_cp:node->node{fv0, cp} * ls(cp, nil) * ls(curr, nil) 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, head) * ls(curr, head) 
dynsl.py:273 - old_cp:node->node{fv2, cp} * cp:node->node{fv0, lst} * curr:node->node{fv0, lst} 
dynsl.py:273 - ls(old_cp, cp) * ls(cp, nil) * ls(curr, head) 
dynsl.py:273 - ls(old_cp, cp) * cp:node->node{fv0, lst} * ls(curr, nil) 
dynsl.py:273 - old_cp:node->node{fv0, cp} * ls(cp, nil) * ls(curr, head) 
dynsl.py:280 - Invariants at location 24:
dynsl.py:288 -  ls(old_cp, fv1) * ls(lst, curr) * ls(cp, nil) * ls(curr, nil) * ls(head, fv0) 
dynsl.py:288 -  ls(old_cp, fv3) * ls(lst, curr) * cp:node->node{fv2, fv1} * ls(curr, nil) * ls(head, fv0) 
dynsl.py:292 - ==============================
dynsl.py:315 - Number of locations: 4
dynsl.py:316 - Number of traces: 13
dynsl.py:317 - Number of pre-defined predicates: 1
dynsl.py:319 - Number of free variables: 297
dynsl.py:320 - Number of atomic singleton predicates: 45
dynsl.py:321 - Number of atomic inductive predicates: 102
dynsl.py:322 - Number of pure constraints: 205
dynsl.py:323 - Number of total invs: 43
dynsl.py:324 - Number of pres:1
dynsl.py:325 - Number of post:40
dynsl.py:326 - Number of loop:2
dynsl.py:327 - Running time (sec): 27.9855339527
../simple_example_update/GRASShopper/sls/sls_copy,4,13,297,45,102,205,43,1,40,2,27.9
