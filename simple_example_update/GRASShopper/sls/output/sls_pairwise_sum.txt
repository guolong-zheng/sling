dynsl.py:167 - Inferring pre-conditions at the location 8 ...

dynsl.py:167 - Inferring post-conditions at the location 33 ...

dynsl.py:167 - Inferring post-conditions at the location 10 ...

dynsl.py:167 - Inferring inv-conditions at the location 22 ...

dynsl.py:217 - ==============================
dynsl.py:218 - Precondition at location 8:
dynsl.py:227 - ls(y, nil) * ls(x, nil) & True
dynsl.py:229 - Corresponding postconditions:
dynsl.py:234 - Postconditions at location 33:
dynsl.py:239 - last_z:node->node{fv0, nil} * ls(curr_y, nil) * curr_x:node->node{fv1, nil} * ls(y, curr_y) * ls(x, curr_x) * ls(z, last_z) & z=res
dynsl.py:239 - ls(last_z, nil) * curr_y:node->node{fv0, nil} * ls(curr_x, nil) * ls(y, curr_y) * ls(x, curr_x) * ls(z, last_z) & z=res
dynsl.py:239 - last_z:node->node{fv0, nil} * curr_y:node->node{fv1, nil} * curr_x:node->node{fv2, nil} * ls(y, curr_y) * ls(x, curr_x) * ls(z, last_z) & z=res
dynsl.py:239 - ls(last_z, nil) * ls(curr_y, nil) * curr_x:node->node{fv0, nil} * ls(y, curr_y) * ls(x, curr_x) * ls(z, last_z) & z=res
dynsl.py:239 - last_z:node->node{fv0, nil} * curr_y:node->node{fv1, nil} * ls(curr_x, nil) * ls(y, curr_y) * ls(x, curr_x) * ls(z, last_z) & z=res
dynsl.py:239 - last_z:node->node{fv0, nil} * ls(curr_y, nil) * ls(curr_x, nil) * ls(y, curr_y) * ls(x, curr_x) * ls(z, last_z) & z=res
dynsl.py:239 - ls(last_z, nil) * ls(curr_y, nil) * ls(curr_x, nil) * ls(y, curr_y) * ls(x, curr_x) * ls(z, last_z) & z=res
dynsl.py:239 - ls(last_z, nil) * curr_y:node->node{fv0, nil} * curr_x:node->node{fv1, nil} * ls(y, curr_y) * ls(x, curr_x) * ls(z, last_z) & z=res
dynsl.py:234 - Postconditions at location 10:
dynsl.py:239 - (exists fv0, fv1. last_z:node->node{fv2, fv3} * curr_y:node->node{fv4, fv5} * ls(curr_x, nil) * ls(y, fv0) * ls(x, fv1) * ls(z, last_z) & fv5=fv3 & fv5=nil & fv5=res & fv3=nil & fv3=res & nil=res)
dynsl.py:239 - (exists fv0, fv1. ls(last_z, nil) * ls(curr_y, nil) * ls(curr_x, nil) * ls(y, fv0) * ls(x, fv1) * ls(z, last_z) & nil=res)
dynsl.py:239 - (exists fv0, fv1. last_z:node->node{fv2, fv3} * curr_y:node->node{fv4, fv5} * curr_x:node->node{fv6, fv7} * ls(y, fv0) * ls(x, fv1) * ls(z, last_z) & fv5=fv7 & fv5=fv3 & fv5=nil & fv5=res & fv7=fv3 & fv7=nil & fv7=res & fv3=nil & fv3=res & nil=res)
dynsl.py:239 - (exists fv0, fv1. ls(last_z, nil) * ls(curr_y, nil) * curr_x:node->node{fv2, fv3} * ls(y, fv0) * ls(x, fv1) * ls(z, last_z) & fv3=nil & fv3=res & nil=res)
dynsl.py:239 - (exists fv0, fv1. ls(last_z, nil) * curr_y:node->node{fv2, fv3} * ls(curr_x, nil) * ls(y, fv0) * ls(x, fv1) * ls(z, last_z) & fv3=nil & fv3=res & nil=res)
dynsl.py:239 - (exists fv0, fv1. last_z:node->node{fv2, fv3} * ls(curr_y, nil) * ls(curr_x, nil) * ls(y, fv0) * ls(x, fv1) * ls(z, last_z) & fv3=nil & fv3=res & nil=res)
dynsl.py:239 - (exists fv0, fv1. ls(last_z, nil) * curr_y:node->node{fv2, fv3} * curr_x:node->node{fv4, fv5} * ls(y, fv0) * ls(x, fv1) * ls(z, last_z) & fv3=fv5 & fv3=nil & fv3=res & fv5=nil & fv5=res & nil=res)
dynsl.py:239 - (exists fv0, fv1. last_z:node->node{fv2, fv3} * ls(curr_y, nil) * curr_x:node->node{fv4, fv5} * ls(y, fv0) * ls(x, fv1) * ls(z, last_z) & fv5=fv3 & fv5=nil & fv5=res & fv3=nil & fv3=res & nil=res)
dynsl.py:246 - Invariants at location 22:
dynsl.py:253 - (exists fv!1594, fv!1670, fv!2101. ls(tmp, fv!1594) * ls(last_z, nil) * ls(curr_y, fv!1670) * ls(curr_x, nil) * ls(y, curr_y) * ls(x, curr_x) * ls(z, fv!2101) & True)
dynsl.py:253 - (exists fv!1594, fv!2176, fv!2607. ls(tmp, fv!1594) * last_z:node->node{fv!1669, nil} * ls(curr_y, fv!2176) * ls(curr_x, nil) * ls(y, curr_y) * ls(x, curr_x) * ls(z, fv!2607) & True)
dynsl.py:253 - (exists fv!2719, fv!3150. tmp:node->node{fv!1631, fv!1632} * ls(last_z, nil) * ls(curr_y, fv!2719) * ls(curr_x, nil) * ls(y, curr_y) * ls(x, curr_x) * ls(z, fv!3150) & True)
dynsl.py:253 - (exists fv!3225, fv!3656. tmp:node->node{fv!1631, fv!1632} * last_z:node->node{fv!2718, nil} * ls(curr_y, fv!3225) * ls(curr_x, nil) * ls(y, curr_y) * ls(x, curr_x) * ls(z, fv!3656) & True)
dynsl.py:257 - ==============================
dynsl.py:280 - Number of locations: 4
dynsl.py:281 - Number of traces: 17
dynsl.py:282 - Number of pre-defined predicates: 1
dynsl.py:283 - Number of inferred assertions: 21
dynsl.py:284 - Number of free variables: 184
dynsl.py:285 - Number of atomic singleton predicates: 28
dynsl.py:286 - Number of atomic inductive predicates: 98
dynsl.py:287 - Number of pure constraints: 46
dynsl.py:288 - Number of total invs: 21
dynsl.py:289 - Number of pres:1
dynsl.py:290 - Number of post:16
dynsl.py:291 - Number of loop:4
dynsl.py:292 - Running time (sec): 53.4558038712
../simple_example_update/GRASShopper/sls/sls_pairwise_sum,4,17,21,184,28,98,46,21,1,16,4,53.4
