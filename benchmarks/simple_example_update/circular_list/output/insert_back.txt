dynsl.py:221 - Inferring pre-conditions at the location 16 ...

dynsl.py:221 - Inferring post-conditions at the location 27 ...

dynsl.py:221 - Inferring post-conditions at the location 22 ...

dynsl.py:299 - Precondition at location 16:
dynsl.py:307 -  lseg(x, x) 
dynsl.py:309 - ==============================
dynsl.py:312 - Postcondition at location 27:
dynsl.py:320 - lseg(x, tl) * lseg(tl, next) * lseg(next, x) 
dynsl.py:320 - lseg(x, tl) * tl:node->node{ni, next} * lseg(next, x)  & tl = res
dynsl.py:320 - x:node->node{fv0, tl} * lseg(tl, next) * lseg(next, x) 
dynsl.py:320 - x:node->node{fv0, tl} * tl:node->node{ni, next} * lseg(next, x)  & tl = res
dynsl.py:312 - Postcondition at location 22:
dynsl.py:320 - lseg(x, tl) * lseg(tl, x) 
dynsl.py:320 - lseg(x, tl) * tl:node->node{nil, x}  & tl = res
dynsl.py:320 - lseg(x, tl) * lseg(tl, next) 
dynsl.py:320 - lseg(x, tl) * tl:node->node{ni, x}  & tl = res
dynsl.py:320 - x:node->node{fv0, tl} * lseg(tl, x) 
dynsl.py:320 - x:node->node{fv0, tl} * tl:node->node{ni, x}  & tl = res
dynsl.py:320 - x:node->node{fv0, tl} * lseg(tl, next) 
dynsl.py:320 - x:node->node{fv0, tl} * tl:node->node{nil, x} 
dynsl.py:322 - ==============================
dynsl.py:338 - ==============================
dynsl.py:363 - Number of locations: 3
dynsl.py:364 - Number of traces: 4
dynsl.py:365 - Number of pre-defined predicates: 1
dynsl.py:367 - Number of free variables: 6
dynsl.py:368 - Number of atomic singleton predicates: 12
dynsl.py:369 - Number of atomic inductive predicates: 17
dynsl.py:370 - Number of pure constraints: 5
dynsl.py:371 - Number of total invs: 13
dynsl.py:372 - Number of pres:1
dynsl.py:373 - Number of post:12
dynsl.py:374 - Number of loop:0
dynsl.py:375 - Running time (sec): 4.08429503441
../simple_example_update/circular_list/insert_back,3,4,6,12,17,5,13,1,12,0,4.08
../simple_example_update/circular_list/insert_back,3,4,12,17,5,13,1,12,0,4.08
