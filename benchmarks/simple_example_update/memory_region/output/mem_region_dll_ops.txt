dynsl.py:221 - Inferring post-conditions at the location 32 ...

dynsl.py:221 - Inferring pre-conditions at the location 38 ...

dynsl.py:221 - Inferring post-conditions at the location 40 ...

dynsl.py:221 - Inferring pre-conditions at the location 12 ...

dynsl.py:221 - Inferring post-conditions at the location 21 ...

dynsl.py:221 - Inferring pre-conditions at the location 27 ...

dynsl.py:221 - Inferring post-conditions at the location 61 ...

dynsl.py:299 - Precondition at location 27:
dynsl.py:307 - em
dynsl.py:299 - Precondition at location 12:
dynsl.py:307 - file_=n
dynsl.py:299 - Precondition at location 38:
dynsl.py:307 -  dll(curr, fv1, fv0, nil) 
dynsl.py:307 -  dll(curr, nil, fv0, nil) 
dynsl.py:309 - ==============================
dynsl.py:312 - Postcondition at location 32:
dynsl.py:320 -  dll(r, nil, r, r1) * dll(r1, r, r1, nil)  & r = res
dynsl.py:320 -  dll(r, nil, r, r1) * r1:mem_reg->mem_reg{nil, nil, nil, fv1, fv0, r, nil}  & r = res
dynsl.py:320 -  r:mem_reg->mem_reg{nil, nil, nil, nil, fv0, nil, r1} * dll(r1, r, r1, nil)  & r = res
dynsl.py:320 - r:mem_reg->mem_reg{nil, nil, nil, nil, fv2, nil, r1} * r1:mem_reg->mem_reg{nil, nil, nil, fv1, fv0, r, nil}  & r = res
dynsl.py:312 - Postcondition at location 40:
dynsl.py:320 -  dll(curr, nil, curr, next) * dll(next, curr, next, nil)  & old_next = nil & res = nil & old_next = res
dynsl.py:320 -  dll(curr, nil, curr, next) * next:mem_reg->mem_reg{nil, nil, nil, fv1, fv0, curr, old_next}  & old_next = nil & res = nil & old_next = res
dynsl.py:320 -  curr:mem_reg->mem_reg{nil, nil, nil, fv1, fv0, nil, next} * dll(next, curr, next, nil)  & old_next = nil & res = nil & old_next = res
dynsl.py:320 - curr:mem_reg->mem_reg{nil, nil, nil, fv3, fv2, nil, next} * next:mem_reg->mem_reg{nil, nil, nil, fv1, fv0, curr, old_next}  & old_next = nil & re = nil & old_next = res
dynsl.py:312 - Postcondition at location 21:
dynsl.py:320 -  dll(mr, fv0, mr, nil)  & file_ = nil & mr = res
dynsl.py:320 -  dll(mr, nil, mr, nil)  & file_ = nil & mr = res
dynsl.py:320 - mr:mem_reg->mem_reg{file_, file_, file_, fv1, fv0, file_, file_}  & mr = res
dynsl.py:312 - Postcondition at location 61:
dynsl.py:320 -  dll(curr, nil, curr, next) * dll(next, curr, next, nil)  & old_next = nil & next = res
dynsl.py:320 -  dll(curr, nil, curr, next) * next:mem_reg->mem_reg{nil, nil, nil, fv1, fv0, curr, old_next}  & old_next = nil & next = res
dynsl.py:320 -  curr:mem_reg->mem_reg{nil, nil, nil, fv1, fv0, nil, next} * dll(next, curr, next, nil)  & old_next = nil & next = res
dynsl.py:320 - curr:mem_reg->mem_reg{nil, nil, nil, fv3, fv2, nil, next} * next:mem_reg->mem_reg{nil, nil, nil, fv1, fv0, curr, old_next}  & old_next = nil
dynsl.py:320 - curr:mem_reg->mem_reg{nil, nil, nil, fv3, fv2, nil, next} * next:mem_reg->mem_reg{nil, nil, nil, fv1, fv0, curr, old_next}  & old_next = nil & next = res
dynsl.py:322 - ==============================
dynsl.py:338 - ==============================
dynsl.py:363 - Number of locations: 7
dynsl.py:364 - Number of traces: 14
dynsl.py:365 - Number of pre-defined predicates: 1
dynsl.py:367 - Number of free variables: 32
dynsl.py:368 - Number of atomic singleton predicates: 15
dynsl.py:369 - Number of atomic inductive predicates: 16
dynsl.py:370 - Number of pure constraints: 30
dynsl.py:371 - Number of total invs: 20
dynsl.py:372 - Number of pres:4
dynsl.py:373 - Number of post:16
dynsl.py:374 - Number of loop:0
dynsl.py:375 - Running time (sec): 19.5441360474
../simple_example_update/memory_region/mem_region_dll_ops,7,14,32,15,16,30,20,4,16,0,19.5
../simple_example_update/memory_region/mem_region_dll_ops,7,14,15,16,30,20,4,16,0,19.5
