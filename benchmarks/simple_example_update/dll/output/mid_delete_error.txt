dynsl.py:221 - Inferring pre-conditions at the location 8 ...

dynsl.py:221 - Inferring post-conditions at the location 19 ...

dynsl.py:299 - Precondition at location 8:
dynsl.py:307 -  dll(p, fv1, fv0, nil) 
dynsl.py:309 - ==============================
dynsl.py:312 - Postcondition at location 19:
dynsl.py:320 -  dll(u, nil, u, v) * dll(v, u, v, nil)  & p = nil
dynsl.py:320 -  dll(u, nil, u, v) * v:node->node{nil, nil, u}  & p = nil
dynsl.py:320 -  u:node->node{fv0, v, p} * dll(v, u, v, nil)  & p = nil
dynsl.py:320 - u:node->node{fv0, v, p} * v:node->node{nil, nil, u}  & p = nil
dynsl.py:320 - u:node->node{fv0, v, p} * v:node->node{p, p, u} 
dynsl.py:322 - ==============================
dynsl.py:338 - ==============================
dynsl.py:363 - Number of locations: 2
dynsl.py:364 - Number of traces: 2
dynsl.py:365 - Number of pre-defined predicates: 1
dynsl.py:367 - Number of free variables: 5
dynsl.py:368 - Number of atomic singleton predicates: 6
dynsl.py:369 - Number of atomic inductive predicates: 5
dynsl.py:370 - Number of pure constraints: 4
dynsl.py:371 - Number of total invs: 6
dynsl.py:372 - Number of pres:1
dynsl.py:373 - Number of post:5
dynsl.py:374 - Number of loop:0
dynsl.py:375 - Running time (sec): 3.76677489281
../simple_example_update/dll/mid_delete_error,2,2,5,6,5,4,6,1,5,0,3.76
../simple_example_update/dll/mid_delete_error,2,2,6,5,4,6,1,5,0,3.76
