
!!!Full processing file "GRASShopper//rec/rec_dispose.dryad.c"
Parsing file "GRASShopper//rec/rec_dispose.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E GRASShopper//rec/rec_dispose.dryad.c -o GRASShopper//rec/rec_dispose.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of rec_dispose: :HP_21
!!! generate unknown predicate for Post synthesis of rec_dispose: :GP_22
!!! ss:EInfer @shape[HP_21,GP_22] EBase: [][](HRel HP_21(lst))*(true)( FLOW __norm) {EAssume: 8,:(HRel GP_22(lst))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure rec_dispose$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_21,GP_22]requires HP_21(lst)&
truerequires emp
 ensures GP_22(lst)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;0)HP_21(lst)&lst!=null --> lst::node<next_13_1374> * 
HP_1375(next_13_1374)&
true,
 // PRE_REC
(1;0)HP_1375(n_62')&true --> HP_21(n_62')&
true,
 // POST
(2;0)HP_21(lst)&lst=null --> GP_22(lst)&
true]

Procedure rec_dispose$node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ GP_22(lst_1389) ::= emp&lst_1389=null(4,5),
 HP_21(lst_1388) ::= 
 HP_21(next_13_1386) * lst_1388::node<next_13_1386>
 or emp&lst_1388=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase lst::HP_21{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   emp&lst=null&{FLOW,(4,5)=__norm#E}[]
                   Stop z3... 62 invocations Stop Omega... 19 invocations 
0 false contexts at: ()

!!! log(small):(0.029902,278)
Total verification time: 0.112 second(s)
	Time spent in main process: 0.076 second(s)
	Time spent in child processes: 0.036 second(s)
	Z3 Prover Time: 0. second(s)
