
!!!Full processing file "prio_tree//treap-insert-rec.dryad.c"
Parsing file "prio_tree//treap-insert-rec.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E prio_tree//treap-insert-rec.dryad.c -o prio_tree//treap-insert-rec.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of treap_insert_rec: :HP_28
!!! generate unknown predicate for Post synthesis of treap_insert_rec: :GP_29
!!! ss:EInfer @shape[HP_28,GP_29] EBase: [][](HRel HP_28(x))*(true)( FLOW __norm) {EAssume: 10,:(HRel GP_29(x,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure treap_insert_rec$b_node~int~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_28,GP_29]requires HP_28(x)&
truerequires emp
 ensures GP_29(x,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(2;0)HP_28(x)&
x!=null --> x::b_node<left_23_1579,right_23_1580,key_23_1581,prio_23_1582> * 
HP_1583(left_23_1579) * HP_1584(right_23_1580)&
true,
 // PRE_REC
(1;2;0)HP_1583(left_23_1579)&true --> HP_28(left_23_1579)&
true,
 // BIND
(1;2;0)GP_29(left_23_1579,tmp___73')&
true --> tmp___73'::b_node<left_28_1611,right_28_1612,key_28_1613,prio_28_1614> * 
GP_1615(left_28_1611,left_23_1579@NI) * 
GP_1616(right_28_1612,left_23_1579@NI) * GP_1617(left_23_1579,tmp___73'@NI)&
true,
 // PRE_REC
(2;2;0)HP_1584(right_23_1580)&true --> HP_28(right_23_1580)&
true,
 // BIND
(2;2;0)GP_29(right_23_1580,tmp___78')&
true --> tmp___78'::b_node<left_47_1661,right_47_1662,key_47_1663,prio_47_1664> * 
GP_1665(left_47_1661,right_23_1580@NI) * 
GP_1666(right_47_1662,right_23_1580@NI) * 
GP_1667(right_23_1580,tmp___78'@NI)&
true,
 // POST
(1;0)HP_28(left_19_1693) * res::b_node<left_19_1693,v_b_node_19_1694,k',p>&
left_19_1693=null & v_b_node_19_1694=null & 
v_b_node_19_1694=left_19_1693 --> GP_29(left_19_1693,res)&
true,
 // POST
(1;1;2;0)HP_1584(right_23_1580) * GP_1615(left_28_1611,left_23_1579@NI) * 
GP_1616(right_28_1612,left_23_1579@NI) * 
tmp___1696::b_node<left_28_1611,right_28_1612,key_28_1613,prio_28_1614> * 
res::b_node<tmp___1696,right_23_1580,key_23_1581,prio_23_1582>&
x=res --> GP_29(x,res)&
true,
 // POST
(2;1;2;0)HP_1584(right_23_1580) * GP_1615(left_28_1611,left_23_1579@NI) * 
GP_1616(right_28_1612,left_23_1579@NI) * 
x::b_node<right_28_1612,right_23_1580,key_23_1581,prio_23_1582> * 
res::b_node<left_28_1611,x,key_28_1613,prio_28_1614>&true --> GP_29(x,res)&
true,
 // POST
(1;2;2;0)HP_1583(left_23_1579) * GP_1665(left_47_1661,right_23_1580@NI) * 
GP_1666(right_47_1662,right_23_1580@NI) * 
tmp___1697::b_node<left_47_1661,right_47_1662,key_47_1663,prio_47_1664> * 
res::b_node<left_23_1579,tmp___1697,key_23_1581,prio_23_1582>&
x=res --> GP_29(x,res)&
true,
 // POST
(2;2;2;0)HP_1583(left_23_1579) * GP_1665(left_47_1661,right_23_1580@NI) * 
GP_1666(right_47_1662,right_23_1580@NI) * 
x::b_node<left_23_1579,left_47_1661,key_23_1581,prio_23_1582> * 
res::b_node<x,right_47_1662,key_47_1663,prio_47_1664>&true --> GP_29(x,res)&
true]

Procedure treap_insert_rec$b_node~int~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_28(x_1711) ::= 
 HP_28(left_23_1707) * HP_28(right_23_1704) * 
 x_1711::b_node<left_23_1707,right_23_1704,key_23_1705,prio_23_1706>
 or emp&x_1711=null
 (4,5),
 GP_29(left_19_1712,res_1713) ::= 
 GP_2045(left_28_1611) * GP_1616(right_28_1612,left_23_1579) * 
 tmp___1696::b_node<left_28_1611,right_28_1612,key_28_1613,prio_28_1614> * 
 res_1713::b_node<tmp___1696,v_b_node_19_1694,k',p> * 
 HP_28(v_b_node_19_1694)&left_19_1712=res_1713
 or GP_2045(left_28_1611) * GP_1616(right_28_1612,left_23_1579) * 
    left_19_1712::b_node<right_28_1612,right_23_1580,key_23_1581,prio_23_1582> * 
    res_1713::b_node<left_28_1611,left_19_1712,k',p> * HP_28(right_23_1580)
 or GP_1665(left_47_1661,right_23_1580) * GP_2048(right_47_1662) * 
    v_b_node_19_1694::b_node<left_47_1661,right_47_1662,key_47_1663,prio_47_1664> * 
    res_1713::b_node<left_23_1579,v_b_node_19_1694,k',p> * 
    HP_28(left_23_1579)&left_19_1712=res_1713
 or GP_1665(left_47_1661,right_23_1580) * GP_2048(v_b_node_19_1694) * 
    left_19_1712::b_node<left_23_1579,left_47_1661,key_23_1581,prio_23_1582> * 
    res_1713::b_node<left_19_1712,v_b_node_19_1694,k',p> * 
    HP_28(left_23_1579)
 or res_1713::b_node<left_19_1712,v_b_node_19_1694,k',p>&
    v_b_node_19_1694=null & left_19_1712=null
 (4,5),
 GP_1616(right_28_2035,left_23_2036) ::= 
 GP_1616(right_28_1895,left_23_1894) * 
 right_28_2035::b_node<right_28_1895,right_23_1901,key_23_1896,prio_23_1897>&
 right_28_2035=left_23_2036
 or right_28_2035::b_node<left_47_1903,right_47_1904,key_47_1905,prio_47_1906>
 or emp
 (4,5),
 GP_1665(left_47_2040,right_23_2041) ::= 
 GP_1665(right_28_2000,right_23_2024) * 
 left_47_2040::b_node<left_28_1999,right_28_2000,key_28_2001,prio_28_2002>&
 right_23_2041=left_47_2040
 or left_47_2040::b_node<left_28_1999,right_28_2000,key_28_2001,prio_28_2002>
 or emp
 (4,5),
 GP_2045(left_28_1611) ::= left_28_1611::b_node<left_23_1918,left_47_1912,key_23_1913,prio_23_1914>(4,5),
 GP_2048(right_47_1662) ::= right_47_1662::b_node<right_28_2008,right_23_2014,key_23_2009,prio_23_2010>(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase x::HP_28{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists x: res::GP_29{}<x>&{FLOW,(4,5)=__norm#E})[]
                   Stop z3... 165 invocations Stop Omega... 99 invocations 
0 false contexts at: ()

!!! log(small):(0.21325,1182)
Total verification time: 0.292 second(s)
	Time spent in main process: 0.18 second(s)
	Time spent in child processes: 0.112 second(s)
	Z3 Prover Time: 0.012 second(s)
