
!!!Full processing file "binary_search_tree/bst-delete-rec.dryad.c"
Parsing file "binary_search_tree/bst-delete-rec.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E binary_search_tree/bst-delete-rec.dryad.c -o binary_search_tree/bst-delete-rec.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of bst_remove_root: :HP_26
!!! generate unknown predicate for Post synthesis of bst_remove_root: :GP_27
!!! generate unknown predicate for Pre synthesis of bst_delete_rec: :HP_28
!!! generate unknown predicate for Post synthesis of bst_delete_rec: :GP_29
!!! ss:EInfer @shape[HP_28,GP_29] EBase: [][](HRel HP_28(x))*(true)( FLOW __norm) {EAssume: 11,:(HRel GP_29(x,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure bst_remove_root$b_node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[ HP_26,GP_27]requires HP_26(x)&truerequires emp
 ensures GP_27(x,res)&
true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(0)HP_26(x)&true --> x::b_node<left_8_1544,right_8_1545,key_8_1546> * 
HP_1547(left_8_1544) * HP_1548(right_8_1545)&
true,
 // BIND
(2;2;2;0)HP_1548(right_8_1545)&
right_8_1545!=null --> right_8_1545::b_node<left_23_1661,right_23_1662,key_23_1663> * 
HP_1664(left_23_1661) * HP_1665(right_23_1662)&
true,
 // PRE_REC
(2;2;2;0)HP_1547(left_8_1544) * HP_1664(left_23_1661) * 
x'::b_node<left_8_1544,left_23_1661,key_8_1546>&
left_8_1544!=null |#| right_8_1545::b_node<left_23_1661,right_23_1662,key_23_1663>&
true --> HP_26(x')&
true,
 // POST
(2;2;2;0)HP_1665(right_23_1662) * GP_27(x,tmp___1682) * 
res::b_node<tmp___1682,right_23_1662,key_23_1663>&x!=null --> GP_27(x,res)&
true]

Procedure bst_remove_root$b_node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ GP_27(x_1693,res_1694) ::= GP_27(x_1693,tmp___1682) * 
res_1694::b_node<tmp___1682,DP_DP_HP_1665,key_23_1663>&x_1693!=null(4,5),
 HP_26(x_1692) ::= x_1692::b_node<DP_DP_HP_1547,right_8_1545,key_8_1546> * 
right_8_1545::b_node<DP_DP_HP_1664,DP_DP_HP_1665,key_23_1663>(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase exists (Expl)[](Impl)[key_8_1546; 
       key_23_1663](ex)[]x::b_node<DP_DP_HP_1547,right_8_1545,key_8_1546> * 
       right_8_1545::b_node<DP_DP_HP_1664,DP_DP_HP_1665,key_23_1663>&
       {FLOW,(1,29)=__flow#E}[]
         EBase exists (Expl)[](Impl)[key_8_1546; key_23_1663](ex)[]emp&
               MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists tmp___1682,
                   DP_DP_HP_1665: x::GP_27{}<tmp___1682> * 
                   res::b_node<tmp___1682,DP_DP_HP_1665,key_23_1663>&x!=null&
                   {FLOW,(4,5)=__norm#E})[]
                   
Checking procedure bst_delete_rec$b_node~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_28,GP_29]requires HP_28(x)&
truerequires emp
 ensures GP_29(x,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(0)HP_28(x)&true --> x::b_node<left_45_1736,right_45_1737,key_45_1738> * 
HP_1739(left_45_1736) * HP_1740(right_45_1737)&
true,
 // PRE
(1;0)HP_1740(right_45_1737)&
true --> right_45_1737::b_node<DP_DP_HP_1755,DP_DP_HP_1756,key_23_1757> * 
HP_1758(DP_DP_HP_1755) * HP_1759(DP_DP_HP_1756)&
true,
 // PRE_REC
(1;2;0)HP_1739(left_45_1736)&true --> HP_28(left_45_1736)&
true,
 // PRE_REC
(2;2;0)HP_1740(right_45_1737)&true --> HP_28(right_45_1737)&
true,
 // POST
(1;0)x::GP_27<tmp___1808> * 
res::b_node<tmp___1808,DP_DP_HP_1809,key_23_1663>&true --> GP_29(x,res)&
true,
 // POST
(1;2;0)HP_1740(right_45_1737) * GP_29(left_54_1790,l_1810) * 
res::b_node<l_1810,right_45_1737,key_45_1738>&x=res --> GP_29(x,res)&
true,
 // POST
(2;2;0)HP_1739(left_45_1736) * GP_29(right_63_1807,tmp___1811) * 
res::b_node<left_45_1736,tmp___1811,key_45_1738>&x=res --> GP_29(x,res)&
true]

Procedure bst_delete_rec$b_node~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_28(x_1844) ::= 
 x_1844::b_node<DP_DP_HP_1758,DP_DP_HP_1759,key_23_1757>
 or x_1844::b_node<DP_DP_HP_1758,DP_DP_HP_1759,key_23_1757>
 or x_1844::b_node<DP_DP_HP_1758,DP_DP_HP_1759,key_23_1757>
 or HP_28(left_45_1826) * 
    x_1844::b_node<left_45_1826,right_45_1827,key_45_1825> * 
    right_45_1827::b_node<DP_DP_HP_1758,DP_DP_HP_1759,key_23_1757>
 (4,5),
 GP_29(x_1847,res_1848) ::= 
 x_1847::GP_27<tmp___1808> * 
 res_1848::b_node<tmp___1808,DP_DP_HP_1809,key_23_1663>
 or GP_29(right_63_1807,tmp___1811) * 
    x_1847::b_node<left_45_1736,tmp___1811,key_45_1738> * 
    HP_28(left_45_1736)&x_1847=res_1848
 or GP_29(left_54_1790,l_1810) * 
    x_1847::b_node<l_1810,right_45_1737,key_45_1738> * 
    right_45_1737::b_node<DP_DP_HP_1758,DP_DP_HP_1759,key_23_1757>&
    x_1847=res_1848
 (4,5),
 GP_27(x_1693,res_1694) ::= GP_27(x_1693,tmp___1682) * 
res_1694::b_node<tmp___1682,DP_DP_HP_1665,key_23_1663>&x_1693!=null(4,5),
 HP_26(x_1692) ::= x_1692::b_node<DP_DP_HP_1547,right_8_1545,key_8_1546> * 
right_8_1545::b_node<DP_DP_HP_1664,DP_DP_HP_1665,key_23_1663>(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase x::HP_28{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   x::GP_29{}<res>&{FLOW,(4,5)=__norm#E}[]
                   Stop z3... 169 invocations Stop Omega... 89 invocations 
28 false contexts at: ( (14,4)  (13,4)  (12,20)  (12,10)  (11,30)  (32,4)  (30,4)  (28,10)  (28,18)  (-1,-1)  (26,4)  (24,26)  (24,10)  (23,25)  (23,10)  (21,19)  (21,10)  (20,20)  (20,10)  (19,9)  (18,4)  (17,4)  (16,19)  (16,10)  (15,31)  (15,13)  (15,9)  (10,4) )

!!! log(small):(0.152898,893)
Total verification time: 0.276 second(s)
	Time spent in main process: 0.164 second(s)
	Time spent in child processes: 0.112 second(s)
	Z3 Prover Time: 0.004 second(s)
