
!!!Full processing file "avl//avl-find-smallest.dryad.c"
Parsing file "avl//avl-find-smallest.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E avl//avl-find-smallest.dryad.c -o avl//avl-find-smallest.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of avl_find_smallest: :HP_24
!!! generate unknown predicate for Post synthesis of avl_find_smallest: :GP_25
!!! ss:EInfer @shape[HP_24,GP_25] EBase: [][](HRel HP_24(x))*(true)( FLOW __norm) {EAssume: 8,:(HRel GP_25(x))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure avl_find_smallest$a_node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_24,GP_25]requires HP_24(x)&
truerequires emp
 ensures GP_25(x)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(0)HP_24(x)&
true --> x::a_node<left_12_1388,right_12_1389,key_12_1390,height_12_1391> * 
HP_1392(left_12_1388) * HP_1393(right_12_1389)&
true,
 // PRE_REC
(2;0)HP_1392(left_12_1388)&left_12_1388!=null --> HP_24(left_12_1388)&
true,
 // POST
(1;0)HP_1392(left_12_1388) * HP_1393(right_12_1389) * 
x::a_node<left_12_1388,right_12_1389,key_12_1390,height_12_1391>&
left_12_1388=null --> GP_25(x)&
true,
 // POST
(2;0)HP_1393(right_12_1389) * 
x::a_node<left_12_1388,right_12_1389,key_12_1390,height_12_1391> * 
GP_25(left_12_1388)&left_12_1388!=null --> GP_25(x)&
true]

Procedure avl_find_smallest$a_node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_24(x_1412) ::= x_1412::a_node<left_12_1388,DP_DP_HP_1393,key_12_1390,height_12_1391> * 
HP_1392(left_12_1388)&x_1412!=null(4,5),
 GP_25(x_1415) ::= 
 x_1415::a_node<left_12_1388,DP_DP_HP_1393,key_12_1390,height_12_1391> * 
 GP_25(left_12_1388)&left_12_1388!=null
 or x_1415::a_node<left_12_1388,DP_DP_HP_1393,key_12_1390,height_12_1391>&
    left_12_1388=null
 (4,5),
 HP_1392(left_12_1414) ::= 
 left_12_1414::a_node<left_12_1388,DP_DP_HP_1393,key_12_1390,height_12_1391> * 
 HP_1392(left_12_1388)
 or emp&left_12_1414=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase exists (Expl)[](Impl)[key_12_1390; 
       height_12_1391](ex)[]x::a_node<left_12_1388,DP_DP_HP_1393,key_12_1390,height_12_1391> * 
       left_12_1388::HP_1392{}<>&x!=null&{FLOW,(1,29)=__flow#E}[]
         EBase exists (Expl)[](Impl)[key_12_1390; height_12_1391](ex)[]emp&
               MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   x::GP_25{}<>&{FLOW,(4,5)=__norm#E}[]
                   Stop z3... 70 invocations Stop Omega... 23 invocations 
0 false contexts at: ()

!!! log(small):(0.025359,336)
Total verification time: 0.1 second(s)
	Time spent in main process: 0.068 second(s)
	Time spent in child processes: 0.032 second(s)
	Z3 Prover Time: 0.004 second(s)
