
!!!Full processing file "glib_gslist/g_slist_concat.dryad.c"
Parsing file "glib_gslist/g_slist_concat.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E glib_gslist/g_slist_concat.dryad.c -o glib_gslist/g_slist_concat.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of g_slist_concat: :HP_16
!!! generate unknown predicate for Post synthesis of g_slist_concat: :GP_17
!!! ss:EInfer @shape[HP_16,GP_17] EBase: [][](HRel HP_16(list1,list2))*(true)( FLOW __norm) {EAssume: 10,:(HRel GP_17(list1,list2,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure g_slist_concat$node~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_16,GP_17]requires HP_16(list1,list2)&
truerequires emp
 ensures GP_17(list1,list2,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // PRE
(1;1;0)HP_16(list1,list2)&list1!=null & 
list2!=null --> list1::lseg<l_1385> * HP_1387(l_1385,list2@NI) * 
HP_1388(list2,list1@NI)&
true,
 // PRE
(1;1;0)HP_1387(l,list2@NI)&list2!=null --> l::node<a_1389,flted_30_1390> * 
HP_1391(flted_30_1390,list2@NI)&
true,
 // POST
(1;1;0)HP_1388(list2,list1@NI) * HP_1391(flted_30_1390,list2@NI) * 
list1::lseg<last_1404> * last_1404::node<a,list2>&list2!=null & 
flted_30_1390=null & res=list1 --> GP_17(list1,list2,res)&
true,
 // POST
(2;1;0)HP_16(list1,list2)&list1=null & list2!=null & 
res=list2 --> GP_17(list1,list2,res)&
true,
 // POST
(2;0)HP_16(list1,list2)&list2=null & res=list1 --> GP_17(list1,list2,res)&
true]

Procedure g_slist_concat$node~node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_16(list1_1420,list2_1421) |#| emp&
  list2!=null ::= 
 emp&list2_1421!=null & list1_1420=null
 or emp&list2_1421=null
 or list1_1420::lseg<l_1413>&list2_1421!=null & list1_1420!=null & 
    list2_1421=DP_DP_DP_1405
 or emp&list1_1420!=null & list2_1421=null
 (4,5),
 GP_17(list1_1471,list2_1472,res_1473) ::= 
 emp&list2_1472=null & res_1473=list1_1471
 or list1_1471::lseg<last_1404>&res_1473=list1_1471 & list2_1472!=null
 or emp&list1_1471=null & res_1473=list2_1472 & list2_1472!=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase list1::HP_16{}<list2>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists list2: list1::GP_17{}<list2,res>&
                   {FLOW,(4,5)=__norm#E})[]
                   Stop z3... 193 invocations Stop Omega... 84 invocations 
0 false contexts at: ()

!!! log(small):(0.200975,665)
!!! log(big)(>0.5s)(1):(0.534291,[(imply,0.534291)])
Total verification time: 0.82 second(s)
	Time spent in main process: 0.156 second(s)
	Time spent in child processes: 0.664 second(s)
	Z3 Prover Time: 0.004 second(s)
