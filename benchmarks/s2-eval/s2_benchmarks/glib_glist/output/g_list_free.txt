
!!!Full processing file "glib_glist//g_list_free.dryad.c"
Parsing file "glib_glist//g_list_free.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E glib_glist//g_list_free.dryad.c -o glib_glist//g_list_free.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of g_list_free: :HP_23
!!! generate unknown predicate for Post synthesis of g_list_free: :GP_24
!!! ss:EInfer @shape[HP_23,GP_24] EBase: [][](HRel HP_23(list))*(true)( FLOW __norm) {EAssume: 9,:(HRel GP_24(list))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 

!!! generate unknown predicate for Pre synthesis of while_14_2$node~node: :HP_1343
!!! generate unknown predicate for Post synthesis of while_14_2$node~node: :GP_1346Starting Omega.../usr/local/bin/oc

Checking procedure while_14_2$node~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_1343,GP_1346]requires HP_1343(next_65,x_64)&
truerequires emp
 ensures GP_1346(next_65,next_65',x_64,x_64')&
true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;1;0)HP_1343(next_65,x_64)&
x_64!=null --> x_64::node<key_21_1398,next_21_1399,prev_21_1400> * 
HP_1401(next_21_1399,next_65@NI) * HP_1402(prev_21_1400,next_65@NI) * 
HP_1403(next_65,x_64@NI)&
true,
 // PRE_REC
(1;1;0)HP_1401(next_65',next_65@NI)&
x_64'=next_65' --> HP_1343(next_65',x_64')&
true,
 // POST
(2;1;0)HP_1343(next_65,x_64)&x_64=null & x_64'=null & next_65'=next_65 & 
x_64'=x_64 --> GP_1346(next_65,next_65',x_64,x_64')&
true]

Procedure while_14_2$node~node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ GP_1346(next_1423,next_1424,x_1425,x_1426) ::= emp&next_1424=next_1423 & x_1426=x_1425 & x_1425=null & x_1426=null(4,5),
 HP_1343(next_1421,x_1422) ::= 
 x_1422::node<key_21_1398,DP_DP_HP_1401,DP_DP_HP_1402>&
 next_1421=DP_DP_HP_1403
 or emp&x_1422=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase x_64::HP_1343{}<next_65>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume ref [next_65;x_64]
                   emp&next_65'=next_65 & x_64'=x_64 & x_64=null & 
                   x_64'=null&{FLOW,(4,5)=__norm#E}[]
                   
Checking procedure g_list_free$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_23,GP_24]requires HP_23(list)&
truerequires emp
 ensures GP_24(list)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // PRE
(0)HP_23(list)&true --> list::HP_1343<next_1479>&
true,
 // POST
(0)emp&list=null --> GP_24(list)&
true]

Procedure g_list_free$node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_23(list_1482) ::= list_1482::HP_1343<next_1479>(4,5),
 GP_24(list_1483) ::= emp&list_1483=null(4,5),
 GP_1346(next_1423,next_1424,x_1425,x_1426) ::= emp&next_1424=next_1423 & x_1426=x_1425 & x_1425=null & x_1426=null(4,5),
 HP_1343(next_1421,x_1422) ::= 
 x_1422::node<key_21_1398,DP_DP_HP_1401,DP_DP_HP_1402>&
 next_1421=DP_DP_HP_1403
 or emp&x_1422=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase list::HP_1343{}<next_1479>&{FLOW,(1,31)=__flow#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   emp&list=null&{FLOW,(4,5)=__norm#E}[]
                   Stop z3... 75 invocations Stop Omega... 24 invocations 
1 false contexts at: ( (14,2) )

!!! log(small):(0.024643,320)
Total verification time: 0.132 second(s)
	Time spent in main process: 0.092 second(s)
	Time spent in child processes: 0.04 second(s)
	Z3 Prover Time: 0.004 second(s)
