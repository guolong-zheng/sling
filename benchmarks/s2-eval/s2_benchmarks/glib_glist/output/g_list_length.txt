
!!!Full processing file "glib_glist/g_list_length.dryad.c"
Parsing file "glib_glist/g_list_length.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E glib_glist/g_list_length.dryad.c -o glib_glist/g_list_length.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of g_list_length: :HP_16
!!! generate unknown predicate for Post synthesis of g_list_length: :GP_17
!!! ss:EInfer @shape[HP_16,GP_17] EBase: [][](HRel HP_16(list))*(true)( FLOW __norm) {EAssume: 7,:(HRel GP_17(list))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 

!!! generate unknown predicate for Pre synthesis of while_13_2$int~node: :HP_1224
!!! generate unknown predicate for Post synthesis of while_13_2$int~node: :GP_1226
Checking procedure while_13_2$int~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_1224,GP_1226]requires HP_1224(list)&
truerequires emp
 ensures GP_1226(list,list')&true{,(4,5)=__norm#E};
Starting Omega.../usr/local/bin/oc

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;1;0)HP_1224(list)&
list!=null --> list::node<key_21_1275,next_21_1276,prev_21_1277> * 
HP_1278(next_21_1276) * HP_1279(prev_21_1277)&
true,
 // PRE_REC
(1;1;0)HP_1278(list')&true --> HP_1224(list')&
true,
 // POST
(1;1;0)HP_1279(prev_21_1277) * 
list::node<key_21_1275,next_21_1276,prev_21_1277> * 
GP_1226(next_21_1276,list')&true --> GP_1226(list,list')&
true,
 // POST
(2;1;0)HP_1224(list)&list=null & list'=null & 
list'=list --> GP_1226(list,list')&
true]

Procedure while_13_2$int~node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_1224(list_1293) ::= 
 HP_1224(next_21_1290) * 
 list_1293::node<key_21_1289,next_21_1290,DP_DP_HP_1279>
 or emp&list_1293=null
 (4,5),
 GP_1226(list_1294,list_1295) ::= GP_1297(list_1294,list_1296)&list_1295=null & list_1296=null(4,5),
 GP_1297(list_1294,list_1296) ::= 
 list_1294::node<key_21_1275,next_21_1276,DP_DP_HP_1279> * 
 GP_1297(next_21_1276,list_1296)
 or emp&list_1294=list_1296
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase list::HP_1224{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume ref [length_41;list]
                   (exists list_1296: list::GP_1297{}<list_1296>&
                   list'=null & list_1296=null&{FLOW,(4,5)=__norm#E})[]
                   
Checking procedure g_list_length$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_16,GP_17]requires HP_16(list)&
truerequires emp
 ensures GP_17(list)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // PRE
(0)HP_16(list)&true --> list::HP_1224<>&
true,
 // POST
(0)list::GP_1297<list_1348>&list_1348=null --> GP_17(list)&
true]

Procedure g_list_length$node SUCCESS.
 
 (LEMSYN) Proving lemma syn_1431: self::GP_1297{}<list_1430>&list_1430=null&{FLOW,(1,31)=__flow#E}[] ->  self::HP_1224{}<>&{FLOW,(1,31)=__flow#E}[]

*********************************************************
*******relational definition ********
*********************************************************
[ HP_16(list_1349) ::= list_1349::HP_1224<>(4,5),
 GP_17(list_1350) ::= list_1350::GP_1297<list_1348>&list_1348=null(4,5),
 GP_1226(list_1294,list_1295) ::= GP_1297(list_1294,list_1296)&list_1295=null & list_1296=null(4,5),
 GP_1297(list_1294,list_1296) ::= 
 list_1294::node<key_21_1275,next_21_1276,DP_DP_HP_1279> * 
 GP_1297(next_21_1276,list_1296)
 or emp&list_1294=list_1296
 (4,5),
 HP_1224(list_1293) ::= 
 HP_1224(next_21_1290) * 
 list_1293::node<key_21_1289,next_21_1290,DP_DP_HP_1279>
 or emp&list_1293=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase list::HP_1224{}<>&{FLOW,(1,31)=__flow#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists list_1348: list::GP_1297{}<list_1348>&
                   list_1348=null&{FLOW,(4,5)=__norm#E})[]
                   Stop z3... 81 invocations Stop Omega... 39 invocations 
1 false contexts at: ( (13,2) )

!!! log(small):(0.060561,421)
Total verification time: 0.164 second(s)
	Time spent in main process: 0.112 second(s)
	Time spent in child processes: 0.052 second(s)
	Z3 Prover Time: 0.012 second(s)
