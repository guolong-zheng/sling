
!!!Full processing file "cyclist/iter/llist_length.c"
Parsing file "cyclist/iter/llist_length.c" by cil parser...
GCC Preprocessing...
gcc -C -E cyclist/iter/llist_length.c -o cyclist/iter/llist_length.c.prep

!!! generate unknown predicate for Pre synthesis of llist_length: :HP_26
!!! generate unknown predicate for Post synthesis of llist_length: :GP_27
!!! ss:EInfer @shape[HP_26,GP_27] EBase: [][](HRel HP_26(list))*(true)( FLOW __norm) {EAssume: 10,:(HRel GP_27(list))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 

Checking procedure while_16_2$node~int~node~node... Starting Omega.../usr/local/bin/oc
Proving binding in method while_16_2$node~int~node~node for spec  EAssume ref [next_54;c_55;n_52]
   emp&{FLOW,(4,5)=__norm#E}[]
   , Line 0

( [(,0 ); (,1 ); (,1 )]) bind: node  n_52'::node<next_19_1346',value_19_1347'>@L cannot be derived from context
cyclist/iter/llist_length.c_19:11_-1:-1

(Cause of Bind Failure) List of Failesc Context: [FEC(1, 0, 0 )]
Failed States:
[
 Label: [(,0 ); (,1 ); (,1 )]
 State:
        fe_kind: MUST
        fe_name: separation entailment
        fe_locs: {
                  fc_message: do_unmatched_rhs : n_52'::node<next_19_1346',value_19_1347'>@L
                  fc_current_lhs_flow: {FLOW,(6,10)=__Error#E}}
[[ COND ==>  UnmatchedRHSData ==> ]]
 ]cyclist/iter/llist_length.c_19:11_-1:-1

Context of Verification Failure: 1 File "",Line:0,Col:0

Last Proving Location: 1 File "cyclist/iter/llist_length.c",Line:19,Col:11

Procedure while_16_2$node~int~node~node FAIL.(2)

Exception Failure("bind failure exception") Occurred!

Error(s) detected when checking procedure while_16_2$node~int~node~node

Checking procedure llist_length$llist... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_26,GP_27]requires HP_26(list)&
truerequires emp
 ensures GP_27(list)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(0)HP_26(list)&true --> list::llist<first_11_1412,last_11_1413> * 
HP_1414(first_11_1412) * HP_1415(last_11_1413)&
true,
 // POST
(0)HP_1414(first_11_1412) * HP_1415(last_11_1413) * 
list::llist<first_11_1412,last_11_1413>&true --> GP_27(list)&
true]

Procedure llist_length$llist SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_26(list_1439) ::= list_1439::llist<DP_DP_HP_1414,DP_DP_HP_1415>(4,5),
 GP_27(list_1440) ::= HP_26(list_1440)(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase list::llist<DP_DP_HP_1414,DP_DP_HP_1415>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   list::HP_26{}<>&{FLOW,(1,31)=__flow#E}[]
                   Stop z3... 55 invocations Stop Omega... 10 invocations 
0 false contexts at: ()

!!! log(small):(0.022667,243)
Total verification time: 0.144 second(s)
	Time spent in main process: 0.1 second(s)
	Time spent in child processes: 0.044 second(s)
	Z3 Prover Time: 0. second(s)
