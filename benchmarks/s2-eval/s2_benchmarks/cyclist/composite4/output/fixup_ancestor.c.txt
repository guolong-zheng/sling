
!!!Full processing file "cyclist/composite4/fixup_ancestor.c"
Parsing file "cyclist/composite4/fixup_ancestor.c" by cil parser...
GCC Preprocessing...
gcc -C -E cyclist/composite4/fixup_ancestor.c -o cyclist/composite4/fixup_ancestor.c.prep

!!! generate unknown predicate for Pre synthesis of subtree_get_count: :HP_17
!!! generate unknown predicate for Post synthesis of subtree_get_count: :GP_18
!!! generate unknown predicate for Pre synthesis of fixup_ancestors: :HP_19
!!! generate unknown predicate for Post synthesis of fixup_ancestors: :GP_20
!!! ss:EInfer @shape[HP_19,GP_20] EBase: [][](HRel HP_19(n,p))*(true)( FLOW __norm) {EAssume: 7,:(HRel GP_20(n,p))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 

Checking procedure subtree_get_count$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[ HP_17,GP_18]requires HP_17(node)&
truerequires emp
 ensures GP_18(node)&true{,(4,5)=__norm#E};
Starting Omega.../usr/local/bin/oc

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;0)HP_17(node)&
node!=null --> node::node<left_7_1295,right_7_1296,parent_7_1297,count_7_1298> * 
HP_1299(left_7_1295) * HP_1300(right_7_1296) * HP_1301(parent_7_1297)&
true,
 // POST
(1;0)HP_1299(left_7_1295) * HP_1300(right_7_1296) * HP_1301(parent_7_1297) * 
node::node<left_7_1295,right_7_1296,parent_7_1297,count_7_1298>&
true --> GP_18(node)&
true,
 // POST
(2;0)HP_17(node)&node=null --> GP_18(node)&
true]

Procedure subtree_get_count$node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_17(node_1304) ::= 
 node_1304::node<DP_DP_HP_1299,DP_DP_HP_1300,DP_DP_HP_1301,count_7_1298>
 or emp&node_1304=null
 (4,5),
 GP_18(node_1305) ::= HP_17(node_1305)(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase node::HP_17{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   node::HP_17{}<>&{FLOW,(1,29)=__flow#E}[]
                   
Checking procedure fixup_ancestors$node~node~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_1324,GP_20]requires HP_1324(p,n@NI)&
truerequires emp
 ensures GP_20(n,p)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(2;0)HP_19(n@NI,p)&
p!=null --> p::node<left_22_1331,right_22_1332,parent_22_1333,count_22_1334> * 
HP_1335(left_22_1331,n@NI) * HP_1336(right_22_1332,n@NI) * 
HP_1337(parent_22_1333,n@NI)&
true,
 // PRE
(1;2;0)HP_1336(right_22_1332,left_22_1331@NI)&
n=left_22_1331 --> right_22_1332::HP_17<>&
true,
 // PRE
(2;2;0)HP_1335(left_22_1331,n@NI)&left_22_1331!=n --> left_22_1331::HP_17<>&
true,
 // PRE_REC
(1;2;0)HP_1337(grandparent_47',left_22_1331@NI)&
n=left_22_1331 |#| p'::node<left_22_1331,right_22_1332,grandparent_47',pcount_50'>&
(leftCount_48'=(pcount_50'-rightCount_49')-1 | count=(pcount_50'-
rightCount_49')-1 | count'=(pcount_50'-rightCount_49')-
1) --> HP_19(p'@NI,grandparent_47')&
true,
 // POST
(1;0)HP_19(n@NI,p)&p=null --> GP_20(n,p)&
true,
 // POST
(1;2;0)HP_1335(left_22_1331,n@NI) * right_22_1332::HP_17<> * 
p::node<left_22_1331,right_22_1332,parent_22_1333,pcount_1388> * 
GP_20(p,parent_22_1333)&n=left_22_1331 --> GP_20(left_22_1331,p)&
true,
 // POST
(2;2;0)HP_1336(right_22_1332,n@NI) * left_22_1331::HP_17<> * 
p::node<left_22_1331,right_22_1332,parent_22_1333,pcount_1390> * 
GP_20(p,parent_22_1333)&n!=left_22_1331 --> GP_20(n,p)&
true]

Procedure fixup_ancestors$node~node~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_19(n_1525,p_1526) |#| 
                          emp&(leftCount_48'=(count_22_1478-rightCount_49')-
                          1 | count=(count_22_1478-rightCount_49')-1 | 
                          count'=(count_22_1478-rightCount_49')-1)
                          or emp&(leftCount_48'=(count_22_1478-
                             rightCount_49')-1 | count=(count_22_1478-
                             rightCount_49')-1 | count'=(count_22_1478-
                             rightCount_49')-1)
                          or emp&(leftCount_48'=(count_22_1478-
                             rightCount_49')-1 | count=(count_22_1478-
                             rightCount_49')-1 | count'=(count_22_1478-
                             rightCount_49')-1)
                          or emp&n_1525!=left_22_1479 & 
                             ((leftCount_48'=(count_22_1478-rightCount_49')-
                             1 | count=(count_22_1478-rightCount_49')-1 | 
                             count'=(count_22_1478-rightCount_49')-1))
                           ::= 
 HP_19(p_1526,parent_22_1480) * 
 p_1526::node<left_22_1479,DP_DP_DP_1392,parent_22_1480,count_22_1478>&
 n_1525=left_22_1479
 or HP_19(p_1526,parent_22_1480) * 
    p_1526::node<left_22_1479,DP_DP_DP_1392,parent_22_1480,count_22_1478> * 
    left_22_1479::HP_17<>&left_22_1479!=n_1525
 or HP_19(p_1526,parent_22_1480) * 
    p_1526::node<left_22_1479,right_22_1477,parent_22_1480,count_22_1478> * 
    right_22_1477::HP_17<>&n_1525=left_22_1479
 or HP_19(p_1526,parent_22_1480) * 
    p_1526::node<left_22_1479,right_22_1477,parent_22_1480,count_22_1478> * 
    left_22_1479::HP_17<> * right_22_1477::HP_17<>&left_22_1479!=n_1525
 or emp&p_1526=null
 (4,5),
 GP_20(n_1527,p_1528) ::= 
 right_22_1332::HP_17<> * 
 p_1528::node<n_1527,right_22_1332,parent_22_1333,pcount_1388> * 
 GP_20(p_1528,parent_22_1333)
 or left_22_1331::HP_17<> * 
    p_1528::node<left_22_1331,right_22_1332,parent_22_1333,pcount_1390> * 
    GP_20(p_1528,parent_22_1333) * right_22_1332::HP_17<>&
    n_1527!=left_22_1331
 or left_22_1331::HP_17<> * 
    p_1528::node<left_22_1331,DP_DP_DP_1392,parent_22_1333,pcount_1390> * 
    GP_20(p_1528,parent_22_1333)&n_1527!=left_22_1331
 or emp&p_1528=null
 (4,5),
 GP_18(node_1305) ::= HP_17(node_1305)(4,5),
 HP_17(node_1304) ::= 
 node_1304::node<DP_DP_HP_1299,DP_DP_HP_1300,DP_DP_HP_1301,count_7_1298>
 or emp&node_1304=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase HP_1324(p,n)&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists n: p::GP_20{}<n>&{FLOW,(4,5)=__norm#E})[]
                   Stop z3... 131 invocations Stop Omega... 54 invocations 
0 false contexts at: ()

!!! log(small):(0.140797,606)
Total verification time: 0.256 second(s)
	Time spent in main process: 0.156 second(s)
	Time spent in child processes: 0.1 second(s)
	Z3 Prover Time: 0. second(s)
