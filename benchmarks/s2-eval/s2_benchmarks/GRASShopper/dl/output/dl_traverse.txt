
!!!Full processing file "GRASShopper//dl/dl_traverse.dryad.c"
Parsing file "GRASShopper//dl/dl_traverse.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E GRASShopper//dl/dl_traverse.dryad.c -o GRASShopper//dl/dl_traverse.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of dl_traverse: :HP_22
!!! generate unknown predicate for Post synthesis of dl_traverse: :GP_23
!!! ss:EInfer @shape[HP_22,GP_23] EBase: [][](HRel HP_22(lst))*(true)( FLOW __norm) {EAssume: 9,:(HRel GP_23(lst))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 

!!! generate unknown predicate for Pre synthesis of while_13_2$node: :HP_1341
!!! generate unknown predicate for Post synthesis of while_13_2$node: :GP_1343Starting Omega.../usr/local/bin/oc

Checking procedure while_13_2$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_1341,GP_1343]requires HP_1341(curr_63)&
truerequires emp
 ensures GP_1343(curr_63,curr_63')&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;1;0)HP_1341(curr_63)&
curr_63!=null --> curr_63::node<next_20_1390,prev_20_1391> * 
HP_1392(next_20_1390) * HP_1393(prev_20_1391)&
true,
 // PRE_REC
(1;1;0)HP_1392(curr_63')&true --> HP_1341(curr_63')&
true,
 // POST
(1;1;0)HP_1393(prev_20_1391) * curr_63::node<next_20_1390,prev_20_1391> * 
GP_1343(next_20_1390,curr_63')&true --> GP_1343(curr_63,curr_63')&
true,
 // POST
(2;1;0)HP_1341(curr_63)&curr_63=null & curr_63'=null & 
curr_63'=curr_63 --> GP_1343(curr_63,curr_63')&
true]

Procedure while_13_2$node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_1341(curr_1403) ::= 
 HP_1341(next_20_1400) * curr_1403::node<next_20_1400,DP_DP_HP_1393>
 or emp&curr_1403=null
 (4,5),
 GP_1343(curr_1404,curr_1405) ::= GP_1407(curr_1404,curr_1406)&curr_1405=null & curr_1406=null(4,5),
 GP_1407(curr_1404,curr_1406) ::= 
 curr_1404::node<next_20_1390,DP_DP_HP_1393> * 
 GP_1407(next_20_1390,curr_1406)
 or emp&curr_1404=curr_1406
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase curr_63::HP_1341{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume ref [curr_63]
                   (exists curr_1406: curr_63::GP_1407{}<curr_1406>&
                   curr_63'=null & curr_1406=null&{FLOW,(4,5)=__norm#E})[]
                   
Checking procedure dl_traverse$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_22,GP_23]requires HP_22(lst)&
truerequires emp
 ensures GP_23(lst)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // PRE
(0)HP_22(curr_63')&true --> curr_63'::HP_1341<>&
true,
 // POST
(0)lst::GP_1407<curr_1456>&curr_1456=null --> GP_23(lst)&
true]

Procedure dl_traverse$node SUCCESS.
 
 (LEMSYN) Proving lemma syn_1536: self::GP_1407{}<curr_1535>&curr_1535=null&{FLOW,(1,31)=__flow#E}[] ->  self::HP_1341{}<>&{FLOW,(1,31)=__flow#E}[]

*********************************************************
*******relational definition ********
*********************************************************
[ HP_22(curr_1457) ::= curr_1457::HP_1341<>(4,5),
 GP_23(lst_1458) ::= lst_1458::GP_1407<curr_1456>&curr_1456=null(4,5),
 GP_1343(curr_1404,curr_1405) ::= GP_1407(curr_1404,curr_1406)&curr_1405=null & curr_1406=null(4,5),
 GP_1407(curr_1404,curr_1406) ::= 
 curr_1404::node<next_20_1390,DP_DP_HP_1393> * 
 GP_1407(next_20_1390,curr_1406)
 or emp&curr_1404=curr_1406
 (4,5),
 HP_1341(curr_1403) ::= 
 HP_1341(next_20_1400) * curr_1403::node<next_20_1400,DP_DP_HP_1393>
 or emp&curr_1403=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase lst::HP_1341{}<>&{FLOW,(1,31)=__flow#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists curr_1456: lst::GP_1407{}<curr_1456>&
                   curr_1456=null&{FLOW,(4,5)=__norm#E})[]
                   Stop z3... 89 invocations Stop Omega... 51 invocations 
1 false contexts at: ( (13,2) )

!!! log(small):(0.045773,514)
Total verification time: 0.14 second(s)
	Time spent in main process: 0.1 second(s)
	Time spent in child processes: 0.04 second(s)
	Z3 Prover Time: 0.004 second(s)
