
!!!Full processing file "GRASShopper//sls/sls_insertion_sort.dryad.c"
Parsing file "GRASShopper//sls/sls_insertion_sort.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E GRASShopper//sls/sls_insertion_sort.dryad.c -o GRASShopper//sls/sls_insertion_sort.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of insertion_sort: :HP_24
!!! generate unknown predicate for Post synthesis of insertion_sort: :GP_25
!!! ss:EInfer @shape[HP_24,GP_25] EBase: [][](HRel HP_24(lst))*(true)( FLOW __norm) {EAssume: 12,:(HRel GP_25(lst))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 

!!! generate unknown predicate for Pre synthesis of while_14_2$node~int~int~node~node~node: :HP_1349
!!! generate unknown predicate for Post synthesis of while_14_2$node~int~int~node~node~node: :GP_1354
!!! generate unknown predicate for Pre synthesis of while_23_4$node~node: :HP_1369
!!! generate unknown predicate for Post synthesis of while_23_4$node~node: :GP_1372Starting Omega.../usr/local/bin/oc

Checking procedure while_23_4$node~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_1369,GP_1372]requires HP_1369(min_68,curr_67)&
truerequires emp
 ensures GP_1372(min_68,min_68',curr_67,curr_67')&
true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;1;0)HP_1369(min_68,curr_67)&
curr_67!=null --> curr_67::node<key_30_1482,next_30_1483> * 
HP_1484(next_30_1483,min_68@NI) * HP_1485(min_68,curr_67@NI)&
true,
 // BIND
(1;1;0)HP_1485(min_68,curr_67@NI)&
true --> min_68::node<key_30_1490,next_30_1491> * 
HP_1492(next_30_1491,curr_67@NI)&
true,
 // PRE_REC
(1;1;1;0)HP_1484(curr_67',min_68@NI) * curr_67::node<key_30_1482,curr_67'>&
true --> HP_1369(curr_67,curr_67')&
true,
 // PRE_REC
(2;1;1;0)HP_1484(curr_67',min_68@NI) * HP_1492(next_30_1491,curr_67@NI) * 
min_68::node<key_30_1490,next_30_1491>&true --> HP_1369(min_68,curr_67')&
true,
 // POST
(1;1;1;0)HP_1492(next_30_1491,curr_67@NI) * 
min_68::node<key_30_1490,next_30_1491> * 
GP_1372(curr_67,min_68',next_30_1483,curr_67')&
curr_67!=null --> GP_1372(min_68,min_68',curr_67,curr_67')&
true,
 // POST
(2;1;1;0)curr_67::node<key_30_1482,next_30_1483> * 
GP_1372(min_68,min_68',next_30_1483,curr_67')&
min_68!=null --> GP_1372(min_68,min_68',curr_67,curr_67')&
true,
 // POST
(2;1;0)HP_1369(min_68,curr_67)&curr_67=null & curr_67'=null & 
curr_67'=curr_67 & 
min_68'=min_68 --> GP_1372(min_68,min_68',curr_67,curr_67')&
true]

Procedure while_23_4$node~node SUCCESS.

Context of Verification Failure: 1 File "",Line:0,Col:0

Last Proving Location: 1 File "",Line:0,Col:0

ERROR: at GRASShopper//sls/sls_insertion_sort.dryad.c_23:4_34:5
Message: split_components: don't expect OR

 --error:  at:

*********************************************************
*******relational definition ********
*********************************************************
[]
*************************************

!!! INFERRED SHAPE SPEC: EInfer @shape[HP_1369,GP_1372]
   EBase HP_1369(min_68,curr_67)&{FLOW,(4,5)=__norm#E}[]
           EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                   EAssume ref [min_68;curr_67]
                     GP_1372(min_68,min_68',curr_67,curr_67')&
                     {FLOW,(4,5)=__norm#E}[]
                     
Checking procedure while_14_2$node~int~int~node~node~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_1349,GP_1354]requires HP_1349(min_68,curr_67,srt_66,prv_65)&
truerequires emp
 ensures GP_1354(min_68,min_68',curr_67,curr_67',srt_66,srt_66',prv_65,prv_65')&
true{,(4,5)=__norm#E};

!!! WARNING logtime exception:0.
Procedure while_14_2$node~int~int~node~node~node FAIL.(2)

Exception Not_found Occurred!

Error(s) detected when checking procedure while_14_2$node~int~int~node~node~node

Checking procedure insertion_sort$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_24,GP_25]requires HP_24(lst)&
truerequires emp
 ensures GP_25(lst)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // PRE
(0)HP_24(lst)&prv_65'=null --> HP_1349(min_68',curr_67',lst,prv_65')&
true,
 // POST
(0)emp&true --> GP_25(lst)&
true]

Procedure insertion_sort$node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_24(lst) ::= emp&lst=DP_DP_HP_24(4,5),
 GP_25(lst_1625) ::= HP_24(lst_1625)(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase emp&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   emp&{FLOW,(1,31)=__flow#E}[]
                   Stop z3... 112 invocations Stop Omega... 46 invocations 
1 false contexts at: ( (23,4) )

!!! log(small):(0.04402,498)
Total verification time: 0.136 second(s)
	Time spent in main process: 0.088 second(s)
	Time spent in child processes: 0.048 second(s)
	Z3 Prover Time: 0.004 second(s)
