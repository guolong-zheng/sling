
!!!Full processing file "AFWP//sll/SLL-rotate.dryad.c"
Parsing file "AFWP//sll/SLL-rotate.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E AFWP//sll/SLL-rotate.dryad.c -o AFWP//sll/SLL-rotate.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of rotate: :HP_22
!!! generate unknown predicate for Post synthesis of rotate: :GP_23
!!! ss:EInfer @shape[HP_22,GP_23] EBase: [][](HRel HP_22(h,j))*(true)( FLOW __norm) {EAssume: 10,:(HRel GP_23(h,j))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure rotate$node~node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_22,GP_23]requires HP_22(h,j)&
truerequires emp
 ensures GP_23(h,j)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;1;0)HP_22(h,j)&h!=null & j!=h --> h::node<next_13_1417> * 
HP_1418(next_13_1417,j@NI) * HP_1419(j,h@NI)&
true,
 // BIND
(1;1;0)HP_1419(j,h@NI)&j!=h --> j::node<next_15_1434> * 
HP_1435(next_15_1434,h@NI)&
true,
 // POST
(1;1;0)h::node<v_node_14_1433> * j::node<h>&j!=h & 
v_node_14_1433=null --> GP_23(h,j)&
true,
 // POST
(1;1;0)HP_1435(next_15_1434,h@NI)&j'=h --> emp&
true,
 // POST
(2;1;0)HP_22(h,j)&h!=null & j=h --> GP_23(h,j)&
true,
 // POST
(2;0)HP_22(h,j)&h=null --> GP_23(h,j)&
true]

Procedure rotate$node~node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_22(h_1469,j_1470) ::= 
 emp&h_1469=null
 or j_1470::node<next_15_1444> * h_1469::node<DP_DP_HP_1418>&j_1470!=h_1469
 or emp&j_1470=h_1469 & h_1469!=null
 (4,5),
 GP_23(h_1471,j_1472) ::= 
 h_1471::node<v_node_14_1433> * j_1472::node<h_1471>&j_1472!=h_1471 & 
 v_node_14_1433=null
 or emp&h_1471=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase h::HP_22{}<j>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists h: j::GP_23{}<h>&{FLOW,(4,5)=__norm#E})[]
                   Stop z3... 113 invocations Stop Omega... 29 invocations 
0 false contexts at: ()

!!! log(small):(0.041106,356)
Total verification time: 0.112 second(s)
	Time spent in main process: 0.072 second(s)
	Time spent in child processes: 0.04 second(s)
	Z3 Prover Time: 0.004 second(s)
