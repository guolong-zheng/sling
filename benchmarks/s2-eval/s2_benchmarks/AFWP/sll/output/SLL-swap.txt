
!!!Full processing file "AFWP//sll/SLL-swap.dryad.c"
Parsing file "AFWP//sll/SLL-swap.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E AFWP//sll/SLL-swap.dryad.c -o AFWP//sll/SLL-swap.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of swap: :HP_21
!!! generate unknown predicate for Post synthesis of swap: :GP_22
!!! ss:EInfer @shape[HP_21,GP_22] EBase: [][](HRel HP_21(h))*(true)( FLOW __norm) {EAssume: 8,:(HRel GP_22(h,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure swap$node... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_21,GP_22]requires HP_21(h)&
truerequires emp
 ensures GP_22(h,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // BIND
(1;0)HP_21(h)&h!=null --> h::node<next_13_1382> * HP_1383(next_13_1382)&
true,
 // BIND
(1;1;0)HP_1383(h')&h'!=null --> h'::node<next_17_1397> * 
HP_1398(next_17_1397)&
true,
 // POST
(1;1;0)HP_1398(next_17_1397) * h::node<next_17_1397> * res::node<h>&
true --> GP_22(h,res)&
true,
 // POST
(2;1;0)HP_1383(next_13_1382) * h::node<next_13_1382>&next_13_1382=null & 
res=h --> GP_22(h,res)&
true,
 // POST
(2;0)HP_21(h)&h=null & res=null & res=h --> GP_22(h,res)&
true]

Procedure swap$node SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_21(h_1412) ::= 
 h_1412::node<next_13_1382> * next_13_1382::node<DP_DP_HP_1398>
 or h_1412::node<next_13_1382>&next_13_1382=null
 (4,5),
 GP_22(h_1413,res_1414) ::= 
 h_1413::node<DP_DP_HP_1398> * res_1414::node<h_1413>
 or res_1414::node<next_13_1382>&res_1414=h_1413 & next_13_1382=null
 or emp&h_1413=null & res_1414=null
 (4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase h::HP_21{}<>&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists h: res::GP_22{}<h>&{FLOW,(4,5)=__norm#E})[]
                   Stop z3... 105 invocations Stop Omega... 30 invocations 
0 false contexts at: ()

!!! log(small):(0.039308,378)
Total verification time: 0.144 second(s)
	Time spent in main process: 0.092 second(s)
	Time spent in child processes: 0.052 second(s)
	Z3 Prover Time: 0.004 second(s)
