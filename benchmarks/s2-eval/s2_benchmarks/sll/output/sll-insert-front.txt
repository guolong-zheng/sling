
!!!Full processing file "sll//sll-insert-front.dryad.c"
Parsing file "sll//sll-insert-front.dryad.c" by cil parser...
GCC Preprocessing...
gcc -C -E sll//sll-insert-front.dryad.c -o sll//sll-insert-front.dryad.c.prep

!!! generate unknown predicate for Pre synthesis of sll_insert_front: :HP_24
!!! generate unknown predicate for Post synthesis of sll_insert_front: :GP_25
!!! ss:EInfer @shape[HP_24,GP_25] EBase: [][](HRel HP_24(x))*(true)( FLOW __norm) {EAssume: 10,:(HRel GP_25(x,res))*(true)( FLOW __norm)}
!!! processing primitives "["prelude.ss"]
Starting z3... 
Starting Omega.../usr/local/bin/oc

Checking procedure sll_insert_front$node~int... 


******************************
   ******* SPECIFICATION1 ********
******************************
 infer[@shape HP_24,GP_25]requires HP_24(x@NI)&
truerequires emp
 ensures GP_25(x,res)&true{,(4,5)=__norm#E};

*************************************
*******shape relational assumptions ********
*************************************
[ // POST
(0)HP_24(x@NI) * res::node<k',x>&true --> GP_25(x,res)&
true]

Procedure sll_insert_front$node~int SUCCESS.

*********************************************************
*******relational definition ********
*********************************************************
[ HP_24(x) ::= NONE,
 GP_25(x_1435,res_1436) ::= HP_24(x_1435) * res_1436::node<k',x_1435>(4,5)]
*************************************

!!! INFERRED SHAPE SPEC: EBase emp&{FLOW,(4,5)=__norm#E}[]
         EBase emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
                 EAssume 
                   (exists k',x: res::node<k',x>&{FLOW,(4,5)=__norm#E})[]
                   Stop z3... 57 invocations Stop Omega... 21 invocations 
0 false contexts at: ()

!!! log(small):(0.037805,276)
Total verification time: 0.1 second(s)
	Time spent in main process: 0.056 second(s)
	Time spent in child processes: 0.044 second(s)
	Z3 Prover Time: 0. second(s)
